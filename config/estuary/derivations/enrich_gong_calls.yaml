# Estuary Flow Derivation - Enrich Gong Calls
# Transforms and enriches raw Gong call data with business intelligence

derivations:
  sophia-ai/gong-calls-enriched:
    transform:
      enrichGongCalls:
        source: { name: sophia-ai/gong-calls }
        
    schema:
      $ref: sophia-ai/gong-calls#/schema
      properties:
        # All original fields plus enrichments
        sentiment_category:
          type: string
          enum: [at_risk, neutral, positive, champion]
          description: Categorized sentiment
        
        call_quality_score:
          type: number
          minimum: 0
          maximum: 100
          description: Composite quality score
          
        risk_indicators:
          type: array
          items: { type: string }
          description: Detected risk factors
          
        opportunities:
          type: array
          items: { type: string }
          description: Identified opportunities
          
        next_best_actions:
          type: array
          items:
            type: object
            properties:
              action: { type: string }
              priority: { type: string, enum: [low, medium, high, critical] }
              reason: { type: string }
              
        executive_summary:
          type: string
          description: AI-generated executive summary
          
        deal_stage_recommendation:
          type: string
          description: Recommended deal stage based on call
          
        competitor_mentions:
          type: array
          items:
            type: object
            properties:
              competitor: { type: string }
              context: { type: string }
              sentiment: { type: string }
              
        enriched_at:
          type: string
          format: date-time
          
    # SQL transformation logic
    sql: |
      SELECT 
        *,
        
        -- Sentiment categorization
        CASE 
          WHEN sentiment < -0.5 THEN 'at_risk'
          WHEN sentiment < 0.2 THEN 'neutral'
          WHEN sentiment < 0.7 THEN 'positive'
          ELSE 'champion'
        END AS sentiment_category,
        
        -- Quality score calculation
        ROUND(
          (CASE WHEN duration > 1800 THEN 20 ELSE duration / 90 END) +
          (CASE WHEN array_length(topics) > 5 THEN 20 ELSE array_length(topics) * 4 END) +
          (CASE WHEN sentiment > 0 THEN sentiment * 30 ELSE 0 END) +
          (CASE WHEN array_length(action_items) > 0 THEN 20 ELSE 0 END) +
          (CASE WHEN metrics.talk_ratio BETWEEN 0.4 AND 0.6 THEN 10 ELSE 0 END)
        , 2) AS call_quality_score,
        
        -- Risk indicators
        ARRAY_REMOVE(ARRAY[
          CASE WHEN sentiment < -0.3 THEN 'negative_sentiment' END,
          CASE WHEN duration < 600 THEN 'short_call' END,
          CASE WHEN array_length(action_items) = 0 THEN 'no_next_steps' END,
          CASE WHEN metrics.talk_ratio > 0.7 THEN 'excessive_talking' END,
          CASE WHEN transcript ILIKE '%competitor%' THEN 'competitor_mentioned' END,
          CASE WHEN transcript ILIKE '%price%concern%' THEN 'price_objection' END,
          CASE WHEN transcript ILIKE '%not sure%' OR transcript ILIKE '%think about%' THEN 'uncertainty' END
        ], NULL) AS risk_indicators,
        
        -- Opportunities
        ARRAY_REMOVE(ARRAY[
          CASE WHEN transcript ILIKE '%love%' OR transcript ILIKE '%excited%' THEN 'high_enthusiasm' END,
          CASE WHEN transcript ILIKE '%expand%' OR transcript ILIKE '%scale%' THEN 'expansion_opportunity' END,
          CASE WHEN transcript ILIKE '%budget approved%' THEN 'budget_confirmed' END,
          CASE WHEN transcript ILIKE '%decision%' AND transcript ILIKE '%soon%' THEN 'decision_timeline' END,
          CASE WHEN array_length(participants) > 3 THEN 'multi_stakeholder' END
        ], NULL) AS opportunities,
        
        -- Next best actions
        CASE
          WHEN sentiment < -0.3 THEN 
            ARRAY[
              ROW('Schedule follow-up with manager', 'critical', 'At-risk sentiment detected')::RECORD,
              ROW('Address concerns immediately', 'high', 'Prevent deal loss')::RECORD
            ]
          WHEN array_length(action_items) = 0 THEN
            ARRAY[
              ROW('Send follow-up email with clear next steps', 'high', 'No action items captured')::RECORD
            ]
          WHEN transcript ILIKE '%competitor%' THEN
            ARRAY[
              ROW('Send competitive differentiation deck', 'medium', 'Competitor mentioned')::RECORD
            ]
          ELSE
            ARRAY[
              ROW('Standard follow-up sequence', 'low', 'Call went well')::RECORD
            ]
        END AS next_best_actions,
        
        -- Executive summary (simplified - would use LLM in production)
        CONCAT(
          'Call with ', array_length(participants), ' participants lasted ', 
          ROUND(duration / 60.0, 1), ' minutes. ',
          'Sentiment was ', 
          CASE 
            WHEN sentiment < -0.3 THEN 'negative'
            WHEN sentiment < 0.3 THEN 'neutral'
            ELSE 'positive'
          END,
          '. Discussed ', array_length(topics), ' topics',
          CASE 
            WHEN array_length(action_items) > 0 
            THEN CONCAT(' with ', array_length(action_items), ' action items.')
            ELSE ' with no clear next steps.'
          END
        ) AS executive_summary,
        
        -- Deal stage recommendation
        CASE
          WHEN transcript ILIKE '%signed%' OR transcript ILIKE '%approved%' THEN 'Closed Won'
          WHEN transcript ILIKE '%proposal%' AND sentiment > 0.3 THEN 'Proposal'
          WHEN transcript ILIKE '%demo%' OR transcript ILIKE '%presentation%' THEN 'Demo'
          WHEN transcript ILIKE '%discovery%' OR transcript ILIKE '%requirements%' THEN 'Discovery'
          WHEN sentiment < -0.5 THEN 'At Risk'
          ELSE 'Qualification'
        END AS deal_stage_recommendation,
        
        -- Competitor extraction (simplified)
        ARRAY_REMOVE(ARRAY[
          CASE 
            WHEN transcript ILIKE '%competitor1%' 
            THEN ROW('Competitor1', 'mentioned in discussion', 'neutral')::RECORD
          END,
          CASE 
            WHEN transcript ILIKE '%competitor2%' 
            THEN ROW('Competitor2', 'mentioned in discussion', 'neutral')::RECORD
          END
        ], NULL) AS competitor_mentions,
        
        -- Metadata
        NOW() AS enriched_at
        
      FROM sophia-ai/gong-calls
      WHERE call_id IS NOT NULL

# Metadata
metadata:
  owner: data-team
  description: "Enriches Gong calls with business intelligence and recommendations"
  dependencies:
    - sophia-ai/gong-calls
  sla:
    processing_time_seconds: 2
  tags:
    - enrichment
    - sales-intelligence
    - real-time 