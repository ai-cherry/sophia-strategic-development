{
  "version": "5.0-unified",
  "description": "Unified MCP Configuration with Lambda Labs Integration",
  "last_updated": "2025-01-03T20:00:00.000Z",
  "lambda_labs": {
    "host": "165.1.69.44",
    "docker_swarm": true,
    "health_check_interval": 30
  },
  "mcpServers": {
    "ai_memory": {
      "command": "python",
      "args": ["-m", "uvicorn", "backend.mcp_servers.ai_memory.ai_memory_mcp_server:app", "--host", "0.0.0.0", "--port", "9001"],
      "env": {
        "ENVIRONMENT": "prod",
        "PULUMI_ORG": "scoobyjava-org",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9001,
      "health_endpoint": "/health",
      "capabilities": ["memory_storage", "memory_recall", "semantic_search"],
      "auto_trigger": {
        "enabled": true,
        "patterns": ["remember", "recall", "what did we", "last time"],
        "priority": "HIGH"
      }
    },
    "snowflake_admin": {
      "command": "python",
      "args": ["backend/mcp_servers/snowflake_admin_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PULUMI_ORG": "scoobyjava-org",
        "PORT": "9020",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9020,
      "health_endpoint": "/health",
      "capabilities": ["schema_sync", "query_execution", "performance_optimization"]
    },
    "codacy": {
      "command": "python",
      "args": ["-m", "uvicorn", "backend.mcp_servers.codacy.codacy_mcp_server:app", "--host", "0.0.0.0", "--port", "3008"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "3008",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 3008,
      "health_endpoint": "/health",
      "capabilities": ["code_analysis", "security_scan", "quality_metrics"]
    },
    "linear": {
      "command": "python",
      "args": ["backend/mcp_servers/linear/linear_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9004",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9004,
      "health_endpoint": "/health",
      "capabilities": ["project_management", "issue_tracking", "team_analytics"]
    },
    "github": {
      "command": "python",
      "args": ["backend/mcp_servers/github/github_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9103",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9103,
      "health_endpoint": "/health",
      "capabilities": ["repository_management", "issue_tracking", "code_review"]
    },
    "asana": {
      "command": "python",
      "args": ["backend/mcp_servers/asana/asana_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9100",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9100,
      "health_endpoint": "/health",
      "capabilities": ["task_management", "project_tracking", "team_collaboration"]
    },
    "notion": {
      "command": "python",
      "args": ["backend/mcp_servers/notion/enhanced_notion_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9005",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9005,
      "health_endpoint": "/health",
      "capabilities": ["documentation", "knowledge_base", "wiki_management"]
    },
    "ui_ux_agent": {
      "command": "python",
      "args": ["backend/mcp_servers/ui_ux_agent/ui_ux_agent_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9002",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9002,
      "health_endpoint": "/health",
      "capabilities": ["ui_generation", "design_analysis", "component_creation"],
      "auto_trigger": {
        "enabled": true,
        "patterns": ["generate ui", "create component", "design"],
        "priority": "HIGH"
      }
    },
    "portkey_admin": {
      "command": "python",
      "args": ["backend/mcp_servers/portkey_admin/portkey_admin_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9013",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9013,
      "health_endpoint": "/health",
      "capabilities": ["ai_routing", "cost_optimization", "model_selection"]
    },
    "lambda_labs_cli": {
      "command": "python",
      "args": ["backend/mcp_servers/lambda_labs_cli/lambda_labs_cli_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9020",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9020,
      "health_endpoint": "/health",
      "capabilities": ["instance_management", "gpu_monitoring", "cost_tracking"]
    },
    "snowflake_cortex": {
      "command": "python",
      "args": ["backend/mcp_servers/snowflake_cortex/production_snowflake_cortex_mcp_server.py"],
      "env": {
        "ENVIRONMENT": "prod",
        "PORT": "9030",
        "LAMBDA_LABS_HOST": "165.1.69.44"
      },
      "port": 9030,
      "health_endpoint": "/health",
      "capabilities": ["cortex_ai", "embeddings", "sentiment_analysis"],
      "remote": true,
      "endpoint": "http://165.1.69.44:9030"
    }
  },
  "orchestration": {
    "startup_order": [
      "snowflake_admin",
      "ai_memory",
      "codacy",
      "linear",
      "github",
      "asana",
      "notion",
      "ui_ux_agent",
      "portkey_admin",
      "lambda_labs_cli",
      "snowflake_cortex"
    ],
    "health_check_timeout": 30,
    "retry_attempts": 3,
    "retry_delay": 5
  },
  "monitoring": {
    "prometheus_endpoint": "http://165.1.69.44:9090",
    "grafana_endpoint": "http://165.1.69.44:3000",
    "alert_webhook": "https://hooks.slack.com/services/sophia-ai-alerts"
  }
}
