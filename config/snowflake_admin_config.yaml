# Snowflake Admin Agent Configuration
# Environment-specific settings and security configurations

# Environment Configurations
environments:
  dev:
    name: "Development Environment"
    account: "${SNOWFLAKE_DEV_ACCOUNT}"
    user: "${SNOWFLAKE_DEV_USER}"
    password: "${SNOWFLAKE_DEV_PASSWORD}"
    pat: "${SNOWFLAKE_DEV_PAT}"  # Programmatic Access Token (preferred)
    warehouse: "${SNOWFLAKE_DEV_WAREHOUSE}"
    database: "${SNOWFLAKE_DEV_DATABASE}"
    schema: "${SNOWFLAKE_DEV_SCHEMA}"
    role: "${SNOWFLAKE_DEV_ROLE}"
    description: "Safe environment for testing admin operations"
    
  stg:
    name: "Staging Environment"
    account: "${SNOWFLAKE_STG_ACCOUNT}"
    user: "${SNOWFLAKE_STG_USER}"
    password: "${SNOWFLAKE_STG_PASSWORD}"
    pat: "${SNOWFLAKE_STG_PAT}"
    warehouse: "${SNOWFLAKE_STG_WAREHOUSE}"
    database: "${SNOWFLAKE_STG_DATABASE}"
    schema: "${SNOWFLAKE_STG_SCHEMA}"
    role: "${SNOWFLAKE_STG_ROLE}"
    description: "Pre-production environment with enhanced safety checks"
    
  prod:
    name: "Production Environment"
    account: "${SNOWFLAKE_PROD_ACCOUNT}"
    user: "${SNOWFLAKE_PROD_USER}"
    password: "${SNOWFLAKE_PROD_PASSWORD}"
    pat: "${SNOWFLAKE_PROD_PAT}"
    warehouse: "${SNOWFLAKE_PROD_WAREHOUSE}"
    database: "${SNOWFLAKE_PROD_DATABASE}"
    schema: "${SNOWFLAKE_PROD_SCHEMA}"
    role: "${SNOWFLAKE_PROD_ROLE}"
    description: "Production environment with maximum security restrictions"

# Security Configuration
security:
  # Dangerous SQL patterns that require confirmation
  dangerous_patterns:
    - "\\bDROP\\s+(?:TABLE|SCHEMA|DATABASE|WAREHOUSE|USER|ROLE)\\b"
    - "\\bTRUNCATE\\s+TABLE\\b"
    - "\\bALTER\\s+ACCOUNT\\b"
    - "\\bALTER\\s+USER\\s+.*\\s+SET\\s+PASSWORD\\b"
    - "\\bGRANT\\s+.*\\s+ACCOUNTADMIN\\b"
    - "\\bGRANT\\s+.*\\s+SECURITYADMIN\\b"
    - "\\bDELETE\\s+FROM\\b"
    - "\\bUPDATE\\s+.*\\s+SET\\b"
    - "\\bALTER\\s+.*\\s+DROP\\b"
    - "\\bRENAME\\s+TO\\b"
  
  # Safe operations that don't require confirmation
  safe_patterns:
    - "\\bCREATE\\s+(?:SCHEMA|WAREHOUSE|ROLE)\\s+IF\\s+NOT\\s+EXISTS\\b"
    - "\\bSHOW\\s+(?:TABLES|SCHEMAS|WAREHOUSES|ROLES|USERS)\\b"
    - "\\bDESCRIBE\\s+(?:TABLE|SCHEMA|WAREHOUSE)\\b"
    - "\\bSELECT\\s+.*\\s+FROM\\s+INFORMATION_SCHEMA\\b"
    - "\\bGRANT\\s+USAGE\\s+ON\\s+(?:SCHEMA|WAREHOUSE)\\b"
    - "\\bGRANT\\s+SELECT\\s+ON\\b"
  
  # Environment-specific restrictions
  environment_restrictions:
    dev:
      allow_destructive: true
      require_confirmation: true
      max_execution_time: 60
      allowed_operations:
        - CREATE
        - DROP
        - ALTER
        - GRANT
        - REVOKE
        - SHOW
        - DESCRIBE
    
    stg:
      allow_destructive: false
      require_confirmation: true
      max_execution_time: 30
      allowed_operations:
        - CREATE
        - ALTER
        - GRANT
        - REVOKE
        - SHOW
        - DESCRIBE
      
    prod:
      allow_destructive: false
      require_confirmation: true
      max_execution_time: 15
      allowed_operations:
        - SHOW
        - DESCRIBE
        - GRANT
        - REVOKE
      blocked_operations:
        - DROP
        - TRUNCATE
        - DELETE
        - ALTER_ACCOUNT
        - ALTER_USER

# LangChain Agent Configuration
langchain:
  llm:
    provider: "openai"
    model: "gpt-4o-mini"
    temperature: 0
    max_tokens: 1000
    timeout: 30
  
  agent:
    type: "ZERO_SHOT_REACT_DESCRIPTION"
    max_iterations: 5
    max_execution_time: 30
    early_stopping_method: "generate"
    verbose: true
  
  sql_database:
    include_tables: []  # Don't include business tables for security
    custom_table_info: {}
    max_string_length: 1000
    top_k: 0  # Don't expose table data

# Service User Configuration (for PAT authentication)
service_user:
  name: "SOPHIA_SNOWFLAKE_ADMIN_BOT_USER"
  description: "Service user for Sophia AI Snowflake administration"
  
  # Recommended role configuration
  roles:
    dev: "ROLE_SOPHIA_SNOWFLAKE_ADMIN_BOT_DEV"
    stg: "ROLE_SOPHIA_SNOWFLAKE_ADMIN_BOT_STG"
    prod: "ROLE_SOPHIA_SNOWFLAKE_ADMIN_BOT_PROD"
  
  # Permissions per environment
  permissions:
    dev:
      - "USAGE ON WAREHOUSE DEV_*"
      - "CREATE SCHEMA ON DATABASE SOPHIA_AI_DEV"
      - "USAGE ON DATABASE SOPHIA_AI_DEV"
      - "ALL ON SCHEMA SOPHIA_AI_DEV.*"
      - "MONITOR ON ACCOUNT"
    
    stg:
      - "USAGE ON WAREHOUSE STG_*"
      - "USAGE ON DATABASE SOPHIA_AI_STG"
      - "USAGE ON SCHEMA SOPHIA_AI_STG.*"
      - "CREATE ON SCHEMA SOPHIA_AI_STG.*"
      - "MONITOR ON ACCOUNT"
    
    prod:
      - "USAGE ON WAREHOUSE PROD_READ_ONLY"
      - "USAGE ON DATABASE SOPHIA_AI_PROD"
      - "USAGE ON SCHEMA SOPHIA_AI_PROD.*"
      - "MONITOR ON ACCOUNT"

# Monitoring and Logging
monitoring:
  log_all_queries: true
  log_level: "INFO"
  audit_trail: true
  
  # Metrics to track
  metrics:
    - query_count
    - execution_time
    - error_rate
    - confirmation_rate
    - environment_usage
  
  # Alerts
  alerts:
    failed_queries_threshold: 5
    long_running_queries_threshold: 30
    production_access_alert: true

# Chat Integration Settings
chat_integration:
  intent_confidence_threshold: 0.6
  max_results_display: 10
  confirmation_timeout: 600  # 10 minutes
  suggestion_count: 5
  
  # Response formatting
  response_format:
    include_sql: true
    include_execution_time: true
    include_environment: true
    truncate_results: true

# Common Admin Tasks Templates
task_templates:
  schema_management:
    - "Create a new schema called {schema_name}"
    - "Show all schemas in the current database"
    - "Describe the schema {schema_name}"
    - "Grant USAGE on schema {schema_name} to role {role_name}"
  
  warehouse_management:
    - "Create a warehouse called {warehouse_name} with size {size}"
    - "Show all warehouses and their status"
    - "Alter warehouse {warehouse_name} to auto suspend after {seconds} seconds"
    - "Grant USAGE on warehouse {warehouse_name} to role {role_name}"
  
  role_management:
    - "Create a new role called {role_name}"
    - "Show all roles in the account"
    - "Grant role {role_name} to user {user_name}"
    - "Show grants for role {role_name}"
  
  object_inspection:
    - "Show all tables in schema {schema_name}"
    - "Describe table {table_name}"
    - "Show the DDL for table {table_name}"
    - "List all columns in table {table_name} with their data types" 