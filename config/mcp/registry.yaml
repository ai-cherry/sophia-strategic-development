version: "2.0"
metadata:
  description: "Sophia AI MCP Server Registry"
  last_updated: "2025-01-08"
  owner: "Platform Team"

# Server tier definitions
tiers:
  PRIMARY:
    priority: 1
    description: "Primary production servers with full capabilities"
  SECONDARY:
    priority: 2
    description: "Secondary/DR servers with limited capabilities"
  TERTIARY:
    priority: 3
    description: "Development/testing servers"

# MCP Server definitions
servers:
  # Snowflake Cortex Servers
  - id: snowflake-cortex-primary
    name: "Snowflake Cortex Primary"
    host: https://mcp-snowflake.${CLUSTER_FQDN}
    tier: PRIMARY
    auth: PAT
    capabilities:
      cortexSearch:
        version: "1.0"
        features: ["semantic", "hybrid", "vector"]
        models: ["e5-base-v2", "arctic-embed-m"]
      cortexAnalyst:
        version: "1.0"
        features: ["sql_generation", "query_optimization", "explain_plan"]
        models: ["arctic", "mistral-large"]
      cortexComplete:
        version: "1.0"
        models: ["arctic", "mistral-large", "llama2-70b", "mixtral-8x7b"]
        max_tokens: 8192
    healthEndpoint: /health/live
    readinessEndpoint: /health/ready
    metricsEndpoint: /metrics
    timeout_ms: 5000
    retry_policy:
      max_attempts: 3
      backoff_multiplier: 2.0

  - id: snowflake-cortex-secondary
    name: "Snowflake Cortex Secondary (DR)"
    host: https://mcp-snowflake-dr.${CLUSTER_FQDN}
    tier: SECONDARY
    auth: PAT
    capabilities:
      cortexComplete:
        version: "1.0"
        models: ["arctic"]
        max_tokens: 4096
    healthEndpoint: /health/live
    timeout_ms: 5000

  # AI Memory Server
  - id: ai-memory-primary
    name: "AI Memory MCP Server"
    host: http://ai-memory-mcp:9001
    tier: PRIMARY
    auth: NONE
    capabilities:
      memoryStore:
        version: "1.0"
        features: ["semantic_search", "category_filter", "time_range"]
      memoryRecall:
        version: "1.0"
        features: ["contextual", "similarity", "hybrid"]
    healthEndpoint: /health
    metricsEndpoint: /metrics

  # Codacy Code Analysis
  - id: codacy-primary
    name: "Codacy MCP Server"
    host: http://codacy-mcp:3008
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      codeAnalysis:
        version: "1.0"
        features: ["security", "quality", "complexity", "duplication"]
      securityScan:
        version: "1.0"
        features: ["vulnerability_detection", "secret_scanning"]
    healthEndpoint: /health

  # GitHub Integration
  - id: github-primary
    name: "GitHub MCP Server"
    host: http://github-mcp:9003
    tier: PRIMARY
    auth: TOKEN
    capabilities:
      repository:
        version: "1.0"
        features: ["read", "write", "pr_management", "issue_tracking"]
      codeSearch:
        version: "1.0"
        features: ["semantic", "regex", "file_pattern"]
    healthEndpoint: /health

  # Linear Project Management
  - id: linear-primary
    name: "Linear MCP Server"
    host: http://linear-mcp:9004
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      projectManagement:
        version: "1.0"
        features: ["issue_tracking", "project_health", "team_analytics"]
      aiInsights:
        version: "1.0"
        features: ["risk_assessment", "completion_prediction"]
    healthEndpoint: /health

  # Slack Communication
  - id: slack-primary
    name: "Slack MCP Server"
    host: http://slack-mcp:9005
    tier: PRIMARY
    auth: OAUTH
    capabilities:
      messaging:
        version: "1.0"
        features: ["send", "receive", "thread_management"]
      analytics:
        version: "1.0"
        features: ["sentiment", "engagement", "topic_extraction"]
    healthEndpoint: /health

  # HubSpot CRM
  - id: hubspot-primary
    name: "HubSpot MCP Server"
    host: http://hubspot-mcp:9006
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      crm:
        version: "1.0"
        features: ["contacts", "deals", "companies", "activities"]
      analytics:
        version: "1.0"
        features: ["pipeline", "revenue", "engagement"]
    healthEndpoint: /health

  # Gong Call Intelligence
  - id: gong-primary
    name: "Gong MCP Server"
    host: http://gong-mcp:9007
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      callAnalysis:
        version: "1.0"
        features: ["transcript", "sentiment", "topics", "action_items"]
      insights:
        version: "1.0"
        features: ["deal_risk", "coaching_opportunities"]
    healthEndpoint: /health

  # Notion Knowledge Base
  - id: notion-primary
    name: "Notion MCP Server"
    host: http://notion-mcp:9008
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      knowledgeBase:
        version: "1.0"
        features: ["read", "write", "search", "database_query"]
      aiEnrichment:
        version: "1.0"
        features: ["summarization", "tagging", "linking"]
    healthEndpoint: /health

  # Asana Project Management
  - id: asana-primary
    name: "Asana MCP Server"
    host: http://asana-mcp:9009
    tier: PRIMARY
    auth: OAUTH
    capabilities:
      projectManagement:
        version: "1.0"
        features: ["task_management", "project_tracking", "team_workload"]
      automation:
        version: "1.0"
        features: ["rule_based", "ai_suggestions"]
    healthEndpoint: /health

  # Figma Design
  - id: figma-primary
    name: "Figma MCP Server"
    host: http://figma-mcp:9010
    tier: PRIMARY
    auth: PAT
    capabilities:
      design:
        version: "1.0"
        features: ["file_access", "component_extraction", "asset_export"]
      codeGeneration:
        version: "1.0"
        features: ["react", "vue", "css", "tailwind"]
    healthEndpoint: /health

  # Portkey LLM Gateway
  - id: portkey-primary
    name: "Portkey MCP Server"
    host: http://portkey-mcp:9013
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      llmGateway:
        version: "1.0"
        features: ["routing", "fallback", "load_balancing", "caching"]
      analytics:
        version: "1.0"
        features: ["cost_tracking", "latency", "usage"]
    healthEndpoint: /health

  # Lambda Labs Infrastructure
  - id: lambda-labs-primary
    name: "Lambda Labs MCP Server"
    host: http://lambda-labs-mcp:9020
    tier: PRIMARY
    auth: API_KEY
    capabilities:
      infrastructure:
        version: "1.0"
        features: ["instance_management", "gpu_monitoring", "cost_tracking"]
      deployment:
        version: "1.0"
        features: ["docker", "kubernetes", "scaling"]
    healthEndpoint: /health

# Health check configuration
health_check:
  interval_seconds: 30
  timeout_seconds: 5
  failure_threshold: 2
  success_threshold: 1

# Routing policies
routing:
  default_policy: "tier_priority"
  policies:
    tier_priority:
      description: "Route to lowest tier number with healthy servers"
    capability_match:
      description: "Route based on required capabilities"
    latency_optimized:
      description: "Route to server with lowest p95 latency"
    cost_optimized:
      description: "Route to minimize API costs"
