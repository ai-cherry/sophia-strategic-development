{
  "snowflake": {
    "type": "database",
    "description": "Snowflake data warehouse integration",
    "config_keys": ["account", "warehouse", "database", "schema", "role"],
    "secret_keys": ["user", "password"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "high"
  },
  "pinecone": {
    "type": "vector_database",
    "description": "Pinecone vector database integration",
    "config_keys": ["environment", "index_name"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high"
  },
  "openai": {
    "type": "ai_provider",
    "description": "OpenAI API integration",
    "config_keys": ["organization"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high"
  },
  "anthropic": {
    "type": "ai_provider",
    "description": "Anthropic API integration",
    "config_keys": [],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high"
  },
  "estuary": {
    "type": "data_pipeline",
    "description": "Estuary Flow data pipeline integration",
    "config_keys": ["api_url", "collection_name"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "medium"
  },
  "airbyte": {
    "type": "data_pipeline",
    "description": "Airbyte Cloud data pipeline integration",
    "config_keys": ["api_url", "workspace_id"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "medium"
  },
  "arize": {
    "type": "ai_monitoring",
    "description": "Arize AI monitoring and observability platform",
    "config_keys": ["space_id"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["model_monitoring", "drift_detection", "performance_tracking"],
    "cost_tier": "enterprise"
  },
  "openrouter": {
    "type": "ai_gateway",
    "description": "OpenRouter unified AI model access gateway",
    "config_keys": ["base_url", "referer", "title"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["model_routing", "cost_optimization", "unified_api"],
    "cost_tier": "pay_per_use"
  },
  "portkey": {
    "type": "ai_gateway",
    "description": "Portkey AI gateway with advanced routing and caching",
    "config_keys": ["config_id", "base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["smart_routing", "semantic_caching", "observability", "load_balancing"],
    "cost_tier": "enterprise"
  },
  "apify": {
    "type": "data_collection",
    "description": "Apify web scraping and automation platform",
    "config_keys": ["base_url"],
    "secret_keys": ["api_token"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["web_scraping", "automation", "data_extraction", "proxy_rotation"],
    "cost_tier": "pay_per_use"
  },
  "phantombuster": {
    "type": "data_collection",
    "description": "PhantomBuster automation and lead generation platform",
    "config_keys": ["base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "medium",
    "features": ["social_automation", "lead_generation", "data_extraction"],
    "cost_tier": "subscription"
  },
  "twingly": {
    "type": "data_collection",
    "description": "Twingly news monitoring and blog search service",
    "config_keys": ["base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "medium",
    "features": ["news_monitoring", "blog_search", "content_discovery"],
    "cost_tier": "subscription"
  },
  "tavily": {
    "type": "data_collection",
    "description": "Tavily AI-powered search and research platform",
    "config_keys": ["base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["ai_search", "research_automation", "content_synthesis"],
    "cost_tier": "pay_per_use"
  },
  "zenrows": {
    "type": "data_collection",
    "description": "ZenRows web scraping with proxy rotation",
    "config_keys": ["base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "data-team",
    "dependencies": [],
    "status": "active",
    "priority": "medium",
    "features": ["web_scraping", "proxy_rotation", "js_rendering", "captcha_solving"],
    "cost_tier": "pay_per_use"
  },
  "huggingface": {
    "type": "ai_provider",
    "description": "HuggingFace model hub and inference API",
    "config_keys": ["base_url"],
    "secret_keys": ["api_token"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["model_inference", "embeddings", "classification", "local_models"],
    "cost_tier": "freemium"
  },
  "together_ai": {
    "type": "ai_provider",
    "description": "Together AI optimized model inference platform",
    "config_keys": ["base_url"],
    "secret_keys": ["api_key"],
    "rotation_schedule": "90d",
    "owner": "ai-team",
    "dependencies": [],
    "status": "active",
    "priority": "high",
    "features": ["fast_inference", "code_generation", "chat_completion", "streaming"],
    "cost_tier": "pay_per_use"
  },
  "docker": {
    "type": "infrastructure",
    "description": "Docker container registry and deployment",
    "config_keys": ["registry_url"],
    "secret_keys": ["username", "personal_access_token"],
    "rotation_schedule": "90d",
    "owner": "devops-team",
    "dependencies": [],
    "status": "active",
    "priority": "critical",
    "features": ["container_registry", "image_management", "deployment"],
    "cost_tier": "freemium"
  },
  "lambda_labs": {
    "type": "infrastructure",
    "description": "Lambda Labs GPU cloud computing platform",
    "config_keys": ["control_plane_ip", "ssh_key_name"],
    "secret_keys": ["api_key", "ssh_private_key"],
    "rotation_schedule": "180d",
    "owner": "devops-team",
    "dependencies": ["docker"],
    "status": "active",
    "priority": "critical",
    "features": ["gpu_compute", "ssh_access", "instance_management"],
    "cost_tier": "pay_per_hour"
  },
  "pulumi": {
    "type": "infrastructure",
    "description": "Pulumi Infrastructure as Code platform",
    "config_keys": ["org", "project"],
    "secret_keys": ["access_token"],
    "rotation_schedule": "90d",
    "owner": "devops-team",
    "dependencies": [],
    "status": "active",
    "priority": "critical",
    "features": ["infrastructure_as_code", "secret_management", "deployment_automation"],
    "cost_tier": "enterprise"
  },
  "github": {
    "type": "development",
    "description": "GitHub source code management and CI/CD",
    "config_keys": ["org", "repo"],
    "secret_keys": ["personal_access_token"],
    "rotation_schedule": "90d",
    "owner": "devops-team",
    "dependencies": [],
    "status": "active",
    "priority": "critical",
    "features": ["source_control", "ci_cd", "secret_management", "actions"],
    "cost_tier": "enterprise"
  },
  "gong_webhook_service": {
    "type": "webhook_processor",
    "description": "Production Gong webhook processing service with Kubernetes deployment",
    "config_keys": [
      "host",
      "port",
      "workers",
      "gong_api_base_url",
      "gong_api_rate_limit",
      "gong_api_burst_limit",
      "snowflake_warehouse",
      "snowflake_database",
      "snowflake_schema",
      "redis_url",
      "max_retry_attempts",
      "initial_retry_delay",
      "max_retry_delay",
      "webhook_timeout_seconds"
    ],
    "secret_keys": [
      "gong_api_key",
      "gong_webhook_secrets",
      "snowflake_account",
      "snowflake_user",
      "snowflake_password"
    ],
    "rotation_schedule": "90d",
    "owner": "sophia-ai-team",
    "dependencies": ["snowflake", "docker", "kubernetes", "pulumi"],
    "status": "active",
    "priority": "high",
    "features": [
      "webhook_processing",
      "rate_limiting",
      "jwt_verification",
      "data_validation",
      "background_processing",
      "prometheus_metrics",
      "health_checks",
      "horizontal_autoscaling"
    ],
    "cost_tier": "pay_per_use",
    "deployment": {
      "type": "kubernetes",
      "namespace": "sophia-ai",
      "replicas": 3,
      "auto_scaling": {
        "min_replicas": 3,
        "max_replicas": 10,
        "cpu_threshold": 70,
        "memory_threshold": 80
      },
      "resources": {
        "requests": {
          "cpu": "250m",
          "memory": "512Mi",
          "storage": "1Gi"
        },
        "limits": {
          "cpu": "1000m",
          "memory": "2Gi",
          "storage": "2Gi"
        }
      },
      "security": {
        "run_as_non_root": true,
        "read_only_filesystem": true,
        "network_policies": true,
        "pod_security_standards": "restricted"
      },
      "monitoring": {
        "prometheus_scraping": true,
        "health_checks": true,
        "service_monitor": true
      },
      "ingress": {
        "enabled": true,
        "tls": true,
        "domain": "gong-webhook.sophia-ai.com",
        "rate_limiting": true
      }
    },
    "integration_points": [
      {
        "service": "gong_api",
        "type": "external_api",
        "endpoint": "https://api.gong.io",
        "authentication": "bearer_token"
      },
      {
        "service": "snowflake",
        "type": "database",
        "purpose": "webhook_data_storage"
      },
      {
        "service": "redis",
        "type": "cache",
        "purpose": "background_task_queue"
      },
      {
        "service": "prometheus",
        "type": "monitoring",
        "purpose": "metrics_collection"
      }
    ]
  }
}
