---
# Namespace for Sophia AI services
apiVersion: v1
kind: Namespace
metadata:
  name: sophia-ai
  labels:
    name: sophia-ai
    environment: production
    team: sophia-ai

---
# ConfigMap for Gong webhook service configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: gong-webhook-config
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: config
    environment: production
data:
  # Server configuration
  HOST: "0.0.0.0"
  PORT: "8080"
  WORKERS: "4"

  # Gong API configuration
  GONG_API_BASE_URL: "https://api.gong.io"
  GONG_API_RATE_LIMIT: "2.5"
  GONG_API_BURST_LIMIT: "10"

  # Database configuration
  ELIMINATED_WAREHOUSE: "SOPHIA_AI_WH"
  ELIMINATED_DATABASE: "SOPHIA_AI"
  ELIMINATED_SCHEMA: "GONG_WEBHOOKS"

  # Redis configuration
  REDIS_URL: "redis://redis-service:6379"

  # Processing configuration
  MAX_RETRY_ATTEMPTS: "5"
  INITIAL_RETRY_DELAY: "1.0"
  MAX_RETRY_DELAY: "300.0"
  WEBHOOK_TIMEOUT_SECONDS: "30"

  # Application configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  PYTHONUNBUFFERED: "1"

---
# Secret for sensitive Gong webhook configuration
# Note: Populated via Pulumi ESC integration
apiVersion: v1
kind: Secret
metadata:
  name: gong-webhook-secrets
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: secrets
    environment: production
  annotations:
    pulumi.com/esc-managed: "true"
    pulumi.com/esc-environment: "sophia-ai-production"
type: Opaque
stringData:
  # Populated by Pulumi ESC - these are placeholders
  GONG_API_KEY: "" # Will be injected by ESC
  GONG_WEBHOOK_SECRETS: "" # Will be injected by ESC
  ELIMINATED_ACCOUNT: "" # Will be injected by ESC
  ELIMINATED_USER: "" # Will be injected by ESC
  ELIMINATED_PASSWORD: "" # Will be injected by ESC

---
# Deployment for Gong webhook service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gong-webhook-service
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: webhook
    environment: production
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gong-webhook-service
      component: webhook
  template:
    metadata:
      labels:
        app: gong-webhook-service
        component: webhook
        environment: production
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        config.hash: "" # Will be updated by deployment pipeline
    spec:
      serviceAccountName: gong-webhook-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: gong-webhook
          image: sophia-ai/gong-webhook-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            # Configuration from ConfigMap
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: HOST
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: PORT
            - name: WORKERS
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: WORKERS
            - name: GONG_API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: GONG_API_BASE_URL
            - name: GONG_API_RATE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: GONG_API_RATE_LIMIT
            - name: GONG_API_BURST_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: GONG_API_BURST_LIMIT
            - name: ELIMINATED_WAREHOUSE
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: ELIMINATED_WAREHOUSE
            - name: ELIMINATED_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: ELIMINATED_DATABASE
            - name: ELIMINATED_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: ELIMINATED_SCHEMA
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: REDIS_URL
            - name: MAX_RETRY_ATTEMPTS
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: MAX_RETRY_ATTEMPTS
            - name: INITIAL_RETRY_DELAY
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: INITIAL_RETRY_DELAY
            - name: MAX_RETRY_DELAY
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: MAX_RETRY_DELAY
            - name: WEBHOOK_TIMEOUT_SECONDS
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: WEBHOOK_TIMEOUT_SECONDS
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: LOG_LEVEL
            - name: PYTHONUNBUFFERED
              valueFrom:
                configMapKeyRef:
                  name: gong-webhook-config
                  key: PYTHONUNBUFFERED
            # Secrets from Secret
            - name: GONG_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gong-webhook-secrets
                  key: GONG_API_KEY
            - name: GONG_WEBHOOK_SECRETS
              valueFrom:
                secretKeyRef:
                  name: gong-webhook-secrets
                  key: GONG_WEBHOOK_SECRETS
            - name: ELIMINATED_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: gong-webhook-secrets
                  key: ELIMINATED_ACCOUNT
            - name: ELIMINATED_USER
              valueFrom:
                secretKeyRef:
                  name: gong-webhook-secrets
                  key: ELIMINATED_USER
            - name: ELIMINATED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gong-webhook-secrets
                  key: ELIMINATED_PASSWORD
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "2Gi"
              cpu: "1000m"
              ephemeral-storage: "2Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 12
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: app-cache
              mountPath: /app/.cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: app-cache
          emptyDir: {}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "sophia-ai/workload"
          operator: "Equal"
          value: "webhook"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - gong-webhook-service
                topologyKey: kubernetes.io/hostname

---
# ServiceAccount for Gong webhook service
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gong-webhook-service
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: serviceaccount
    environment: production
automountServiceAccountToken: false

---
# Service for Gong webhook service
apiVersion: v1
kind: Service
metadata:
  name: gong-webhook-service
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: service
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
spec:
  type: ClusterIP
  selector:
    app: gong-webhook-service
    component: webhook
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 8080
      targetPort: metrics
      protocol: TCP
  sessionAffinity: None

---
# Ingress for Gong webhook service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gong-webhook-ingress
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: ingress
    environment: production
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - gong-webhook.sophia-ai.com
      secretName: gong-webhook-tls
  rules:
    - host: gong-webhook.sophia-ai.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gong-webhook-service
                port:
                  number: 80

---
# HorizontalPodAutoscaler for Gong webhook service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gong-webhook-hpa
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: hpa
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gong-webhook-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min

---
# ServiceMonitor for Prometheus monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: gong-webhook-monitor
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: monitoring
    environment: production
    prometheus: sophia-ai
spec:
  selector:
    matchLabels:
      app: gong-webhook-service
      component: service
  endpoints:
    - port: metrics
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
  namespaceSelector:
    matchNames:
      - sophia-ai

---
# NetworkPolicy for Gong webhook service security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gong-webhook-network-policy
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: security
    environment: production
spec:
  podSelector:
    matchLabels:
      app: gong-webhook-service
      component: webhook
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow traffic from nginx ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
    # Allow traffic from Prometheus for metrics
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8080
    # Allow traffic from other Sophia AI services
    - from:
        - namespaceSelector:
            matchLabels:
              name: sophia-ai
      ports:
        - protocol: TCP
          port: 8080
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
    # Allow HTTPS traffic to Gong API
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow traffic to Redis
    - to:
        - namespaceSelector:
            matchLabels:
              name: sophia-ai
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    # Allow traffic to ELIMINATED (HTTPS)
    - to: []
      ports:
        - protocol: TCP
          port: 443

---
# PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gong-webhook-pdb
  namespace: sophia-ai
  labels:
    app: gong-webhook-service
    component: availability
    environment: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: gong-webhook-service
      component: webhook
