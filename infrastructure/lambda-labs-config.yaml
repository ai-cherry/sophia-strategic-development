# Lambda Labs Configuration - Single Source of Truth
# This file defines the authoritative Lambda Labs infrastructure configuration
# Last Updated: 2025-07-08

# Production Instance Configuration
production:
  instance:
    name: sophia-main
    id: sophia-gh200-prod
    ip: 192.222.51.151
    type: GH200
    region: us-west
    specs:
      gpu: 96GB
      gpu_model: H100
      memory: 480GB
      vcpus: 72
      storage: 2TB NVMe
    cost:
      per_hour: 1.49
      per_month: 1087.70
      per_year: 13052.40

  # SSH Configuration
  ssh:
    key_name: lynn_sophia_h200_key
    key_path: ~/.ssh/lynn_sophia_h200_key
    user: ubuntu
    port: 22

  # Service Ports
  services:
    backend:
      name: Sophia AI Backend
      port: 8000
      health_endpoint: /health
    
    mcp_servers:
      base_port: 9000
      range: 9000-9100
      servers:
        - name: ai_memory
          port: 9001
        - name: ui_ux_agent
          port: 9002
        - name: codacy
          port: 3008
        - name: linear
          port: 9004
        - name: github
          port: 9103
        - name: asana
          port: 9100
        - name: lambda_labs_cli
          port: 9040
        - name: lambda_labs_serverless
          port: 9025
    
    infrastructure:
      postgres:
        port: 5432
        database: sophia_db
        user: sophia_user
      redis:
        port: 6379
      prometheus:
        port: 9090
      grafana:
        port: 3000
        default_user: admin

# API Configuration
api:
  endpoint: https://cloud.lambda.ai/api/v1
  # Credentials are stored in Pulumi ESC
  # Access via: get_config_value("lambda_api_key")
  # and: get_config_value("lambda_cloud_api_key")

# Docker Configuration
docker:
  registry: scoobyjava15
  images:
    backend: sophia-backend:latest
    mcp_servers: sophia-mcp-servers:latest
    postgres: postgres:16-alpine
    redis: redis:7-alpine
    prometheus: prom/prometheus:latest
    grafana: grafana/grafana:latest

# Deployment Configuration
deployment:
  strategy: docker-compose
  compose_file: docker-compose.cloud.yml
  volumes:
    - postgres_data:/var/lib/postgresql/data
    - redis_data:/data
    - prometheus_data:/prometheus
    - grafana_data:/var/lib/grafana
  
  health_checks:
    enabled: true
    interval: 30s
    timeout: 10s
    retries: 3

# Monitoring Configuration
monitoring:
  prometheus:
    scrape_interval: 15s
    retention: 30d
    targets:
      - job: sophia-backend
        target: backend:8000
      - job: mcp-servers
        targets:
          - mcp-servers:9001
          - mcp-servers:9002
          - mcp-servers:9003
  
  grafana:
    dashboards:
      - name: Sophia AI Overview
        uid: sophia-overview
      - name: MCP Server Health
        uid: mcp-health
      - name: Infrastructure Metrics
        uid: infra-metrics

# Security Configuration
security:
  ssl:
    enabled: false  # Lambda Labs internal network
  
  firewall:
    # Lambda Labs manages firewall rules
    # Only specified ports are exposed
    allowed_ports:
      - 22    # SSH
      - 8000  # Backend API
      - 3000  # Grafana
      - 9090  # Prometheus
      - 9000-9100  # MCP Servers

# Backup Configuration
backup:
  postgres:
    enabled: true
    schedule: "0 2 * * *"  # 2 AM daily
    retention_days: 7
  
  volumes:
    enabled: true
    schedule: "0 3 * * 0"  # 3 AM Sunday
    retention_days: 30

# Environment Variables
# These are injected at runtime from Pulumi ESC
environment:
  ENVIRONMENT: production
  PULUMI_ORG: scoobyjava-org
  PULUMI_STACK: sophia-ai-production
  DATABASE_URL: postgresql://sophia_user:${POSTGRES_PASSWORD}@postgres:5432/sophia_db
  REDIS_URL: redis://redis:6379
  
# Access URLs
urls:
  backend_api: http://192.222.51.151:8000
  api_docs: http://192.222.51.151:8000/docs
  grafana: http://192.222.51.151:3000
  prometheus: http://192.222.51.151:9090
  health_check: http://192.222.51.151:8000/health

# Notes
notes:
  - All credentials are managed via Pulumi ESC
  - SSH key must exist at specified path
  - Lambda Labs instance must be active
  - Docker images must be pushed to registry before deployment
  - Health checks ensure service availability 