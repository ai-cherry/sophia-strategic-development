-- =====================================================================
-- PROPERTY_ASSETS Schema - Property Portfolio Management
-- =====================================================================

USE DATABASE SOPHIA_AI;
CREATE SCHEMA IF NOT EXISTS PROPERTY_ASSETS;
USE SCHEMA PROPERTY_ASSETS;

-- Property portfolio
CREATE TABLE IF NOT EXISTS PROPERTIES (
    PROPERTY_ID VARCHAR(255) PRIMARY KEY,
    PROPERTY_NAME VARCHAR(500) NOT NULL,
    PROPERTY_TYPE VARCHAR(100),

    -- Location details
    ADDRESS VARCHAR(1000),
    CITY VARCHAR(255),
    STATE VARCHAR(100),
    ZIP_CODE VARCHAR(20),
    COUNTRY VARCHAR(100) DEFAULT 'USA',

    -- Property characteristics
    TOTAL_UNITS NUMBER,
    OCCUPIED_UNITS NUMBER,
    AVAILABLE_UNITS NUMBER,
    OCCUPANCY_RATE FLOAT,
    SQUARE_FOOTAGE NUMBER,
    LOT_SIZE_SQFT NUMBER,
    YEAR_BUILT NUMBER,

    -- Financial metrics
    MARKET_VALUE NUMBER(15,2),
    ASSESSED_VALUE NUMBER(15,2),
    MONTHLY_RENT_POTENTIAL NUMBER(12,2),
    ACTUAL_MONTHLY_RENT NUMBER(12,2),
    ANNUAL_PROPERTY_TAXES NUMBER(12,2),
    ANNUAL_INSURANCE NUMBER(12,2),

    -- Management relationships
    OWNER_CONTACT_ID VARCHAR(255),
    PROPERTY_MANAGER_ID VARCHAR(255),
    MANAGEMENT_COMPANY VARCHAR(500),

    -- Operational status
    PROPERTY_STATUS VARCHAR(50),
    LAST_INSPECTION_DATE DATE,
    NEXT_INSPECTION_DATE DATE,

    -- AI Memory integration
    AI_MEMORY_EMBEDDING VECTOR(FLOAT, 768),
    AI_MEMORY_METADATA VARCHAR(16777216),
    AI_MEMORY_UPDATED_AT TIMESTAMP_NTZ,

    -- Metadata layer
    LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(),
    CONFIDENCE_SCORE FLOAT DEFAULT 1.0,
    DATA_SOURCE VARCHAR(100) DEFAULT 'PROPERTY_MANAGEMENT',

    -- Audit trail
    CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(),
    CREATED_BY VARCHAR(255)
);

-- Property units
CREATE TABLE IF NOT EXISTS PROPERTY_UNITS (
    UNIT_ID VARCHAR(255) PRIMARY KEY,
    PROPERTY_ID VARCHAR(255) NOT NULL,
    UNIT_NUMBER VARCHAR(100) NOT NULL,

    -- Unit characteristics
    UNIT_TYPE VARCHAR(100),
    BEDROOMS NUMBER,
    BATHROOMS NUMBER(3,1),
    SQUARE_FOOTAGE NUMBER,
    FLOOR_NUMBER NUMBER,

    -- Financial details
    MONTHLY_RENT NUMBER(10,2),
    SECURITY_DEPOSIT NUMBER(10,2),
    PET_DEPOSIT NUMBER(10,2),

    -- Occupancy status
    OCCUPANCY_STATUS VARCHAR(50),
    LEASE_START_DATE DATE,
    LEASE_END_DATE DATE,
    TENANT_ID VARCHAR(255),

    -- Condition and maintenance
    UNIT_CONDITION VARCHAR(100),
    LAST_RENOVATION_DATE DATE,
    NEXT_MAINTENANCE_DATE DATE,

    -- Metadata layer
    LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(),
    CONFIDENCE_SCORE FLOAT DEFAULT 1.0,
    DATA_SOURCE VARCHAR(100) DEFAULT 'PROPERTY_MANAGEMENT',

    CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(),

    FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTIES(PROPERTY_ID),
    UNIQUE (PROPERTY_ID, UNIT_NUMBER)
);

-- Property managers and contacts
CREATE TABLE IF NOT EXISTS PROPERTY_CONTACTS (
    CONTACT_ID VARCHAR(255) PRIMARY KEY,
    CONTACT_TYPE VARCHAR(100),

    -- Contact information
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    COMPANY_NAME VARCHAR(500),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(50),

    -- Role and responsibilities
    ROLE VARCHAR(255),
    RESPONSIBILITIES VARIANT,
    PROPERTIES_MANAGED VARIANT,

    -- Performance metrics
    TENANT_SATISFACTION_SCORE FLOAT,
    OCCUPANCY_RATE_MANAGED FLOAT,
    AVERAGE_RENT_COLLECTION_TIME NUMBER,

    -- Metadata layer
    LAST_UPDATED TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP(),
    CONFIDENCE_SCORE FLOAT DEFAULT 1.0,
    DATA_SOURCE VARCHAR(100) DEFAULT 'PROPERTY_MANAGEMENT',

    CREATED_AT TIMESTAMP_LTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Create indexes
-- Snowflake does not support traditional indexes; consider search optimization or clustering.
-- CREATE INDEX IF NOT EXISTS IX_PROPERTIES_LOCATION ON PROPERTIES(CITY, STATE);
-- -- Snowflake does not support traditional indexes; consider search optimization or clustering.
-- CREATE INDEX IF NOT EXISTS IX_PROPERTIES_TYPE ON PROPERTIES(PROPERTY_TYPE);
-- -- Snowflake does not support traditional indexes; consider search optimization or clustering.
-- CREATE INDEX IF NOT EXISTS IX_PROPERTY_UNITS_PROPERTY ON PROPERTY_UNITS(PROPERTY_ID);
-- -- Snowflake does not support traditional indexes; consider search optimization or clustering.
-- CREATE INDEX IF NOT EXISTS IX_PROPERTY_UNITS_STATUS ON PROPERTY_UNITS(OCCUPANCY_STATUS);
