"""
Sales Intelligence Agent - Facade Module

This module provides backward compatibility by importing and exposing all functionality
from the decomposed modules. External code can continue to import from this module
without any changes.

Decomposed Architecture:
- sales_intelligence_agent_core.py: Core agent class and workflow integration
- sales_intelligence_agent_models.py: Data models, enums, and exceptions
- sales_intelligence_agent_utils.py: Utility functions and helper classes
- sales_intelligence_agent_handlers.py: Business logic handlers
"""

from __future__ import annotations

import logging
from typing import Any

# Import all models and classes for backward compatibility
from .sales_intelligence_agent_models import (
    DealRiskLevel,
    SalesStage,
    EmailType,
    DealRiskAssessment,
    SalesEmailRequest,
    CompetitorTalkingPoints,
    PipelineAnalysis,
    SalesEmailResult,
    WorkflowTaskResult,
    AgentCapabilities,
)

# Import utility classes
from .sales_intelligence_agent_utils import (
    SalesIntelligenceUtils,
)

# Import handlers
from .sales_intelligence_agent_handlers import (
    DealRiskHandler,
    EmailGenerationHandler,
    CompetitorAnalysisHandler,
    PipelineAnalysisHandler,
)

# Import core agent
from .sales_intelligence_agent_core import SalesIntelligenceAgentCore

logger = logging.getLogger(__name__)


class SalesIntelligenceAgent(SalesIntelligenceAgentCore):
    """
    Enhanced Sales Intelligence Agent with Workflow Integration
    
    This is the main facade class that maintains backward compatibility
    while delegating to the decomposed modules.
    
    Capabilities:
    - Advanced deal risk assessment with AI insights
    - Sales email generation using SmartAIService
    - Competitor analysis and talking points
    - Pipeline forecasting and health analysis
    - Enhanced sales coaching with performance tracking
    - Multi-agent workflow orchestration
    """

    def __init__(self):
        super().__init__()
        logger.info("âœ… Sales Intelligence Agent facade initialized")

    # All methods are inherited from SalesIntelligenceAgentCore
    # This maintains complete backward compatibility


# Export all classes and functions for backward compatibility
__all__ = [
    "SalesIntelligenceAgent",
    "DealRiskLevel",
    "SalesStage", 
    "EmailType",
    "DealRiskAssessment",
    "SalesEmailRequest",
    "CompetitorTalkingPoints",
    "PipelineAnalysis",
    "SalesEmailResult",
    "WorkflowTaskResult",
    "AgentCapabilities",
    "SalesIntelligenceUtils",
    "DealRiskHandler",
    "EmailGenerationHandler",
    "CompetitorAnalysisHandler",
    "PipelineAnalysisHandler",
]

# Convenience factory function for backward compatibility
def create_sales_intelligence_agent() -> SalesIntelligenceAgent:
    """Factory function to create a Sales Intelligence Agent instance"""
    return SalesIntelligenceAgent()

# Legacy compatibility - maintain original class name
SalesIntelligenceAgent.__name__ = "SalesIntelligenceAgent"
