# Sophia AI Pulumi ESC Configuration Template
# Generated by Terraform for centralized infrastructure management
# Project: ${project_name}
# Environment: ${environment}

imports:
  - github-org-secrets

values:
  # Project Configuration
  project:
    name: "${project_name}"
    environment: "${environment}"
    managed_by: "terraform"
    
  # Data Pipeline Infrastructure
  data_infrastructure:
    # Estuary Flow Configuration
    estuary_flow:
      access_token:
        fn::secret: $${github-org-secrets.ESTUARY_FLOW_ACCESS_TOKEN}
      tenant: "sophia-ai"
      api_url: "https://api.estuary.dev"
      webhook_url: "https://sophia-ai-frontend-dev.vercel.app/api/estuary/webhook"
      organization: "sophia-ai"
    
    # PostgreSQL Staging Database
    postgresql:
      host:
        fn::secret: $${github-org-secrets.LAMBDA_IP_ADDRESS}
      port: "${postgresql_config.port}"
      database: "${postgresql_config.database_name}"
      user: "${postgresql_config.username}"
      password:
        fn::secret: $${github-org-secrets.POSTGRESQL_PASSWORD}
      ssl_mode: "require"
      max_connections: ${postgresql_config.max_connections}
      connection_string: "postgresql://${postgresql_config.username}:$${postgresql_password}@$${lambda_config.region}:${postgresql_config.port}/${postgresql_config.database_name}"
    
    # Redis Cache
    redis:
      host:
        fn::secret: $${github-org-secrets.LAMBDA_IP_ADDRESS}
      port: "${redis_config.port}"
      password:
        fn::secret: $${github-org-secrets.REDIS_PASSWORD}
      max_memory: "${redis_config.max_memory}"
      max_memory_policy: "${redis_config.max_memory_policy}"
      url: "redis://:$${redis_password}@$${lambda_config.region}:${redis_config.port}"

  # Compute Infrastructure
  compute_infrastructure:
    # Lambda Labs Configuration
    lambda_labs:
      api_key:
        fn::secret: $${github-org-secrets.LAMBDA_API_KEY}
      ssh_private_key:
        fn::secret: $${github-org-secrets.LAMBDA_SSH_PRIVATE_KEY}
      ssh_public_key:
        fn::secret: $${github-org-secrets.LAMBDA_SSH_PUBLIC_KEY}
      ip_address:
        fn::secret: $${github-org-secrets.LAMBDA_IP_ADDRESS}
      region: "${lambda_config.region}"
      instance_type: "${lambda_config.instance_type}"
      storage_size: ${lambda_config.storage_size}

  # Data Warehouse
  data_warehouse:
    # Snowflake Configuration
    snowflake:
      account: "${snowflake_config.account}"
      user: "${snowflake_config.user}"
      token:
        fn::secret: $${github-org-secrets.SOPHIA_AI_TOKEN}
      role: "${snowflake_config.role}"
      warehouse: "${snowflake_config.warehouse}"
      database: "${snowflake_config.database}"
      schema: "${snowflake_config.schema}"

  # External Integrations
  external_integrations:
    # HubSpot CRM
    hubspot:
      access_token:
        fn::secret: $${github-org-secrets.HUBSPOT_ACCESS_TOKEN}
      api_key:
        fn::secret: $${github-org-secrets.HUBSPOT_API_KEY}
      portal_id:
        fn::secret: $${github-org-secrets.HUBSPOT_PORTAL_ID}
    
    # Gong Revenue Intelligence
    gong:
      access_key:
        fn::secret: $${github-org-secrets.GONG_ACCESS_KEY}
      client_secret:
        fn::secret: $${github-org-secrets.GONG_CLIENT_SECRET}
      webhook_secret:
        fn::secret: $${github-org-secrets.GONG_WEBHOOK_SECRET}
    
    # Slack Communication
    slack:
      bot_token:
        fn::secret: $${github-org-secrets.SLACK_BOT_TOKEN}
      app_token:
        fn::secret: $${github-org-secrets.SLACK_APP_TOKEN}
      signing_secret:
        fn::secret: $${github-org-secrets.SLACK_SIGNING_SECRET}
      client_id:
        fn::secret: $${github-org-secrets.SLACK_CLIENT_ID}
      client_secret:
        fn::secret: $${github-org-secrets.SLACK_CLIENT_SECRET}

  # AI Services
  ai_services:
    # OpenAI
    openai:
      api_key:
        fn::secret: $${github-org-secrets.OPENAI_API_KEY}
    
    # Anthropic
    anthropic:
      api_key:
        fn::secret: $${github-org-secrets.ANTHROPIC_API_KEY}
    
    # Portkey Gateway
    portkey:
      api_key:
        fn::secret: $${github-org-secrets.PORTKEY_API_KEY}
      config:
        fn::secret: $${github-org-secrets.PORTKEY_CONFIG}
    
    # Vector Database
    pinecone:
      api_key:
        fn::secret: $${github-org-secrets.PINECONE_API_KEY}
      environment:
        fn::secret: $${github-org-secrets.PINECONE_ENVIRONMENT}

  # Deployment Configuration
  deployment:
    # Vercel
    vercel:
      token:
        fn::secret: $${github-org-secrets.VERCEL_TOKEN}
      project_id:
        fn::secret: $${github-org-secrets.VERCEL_PROJECT_ID}
      org_id:
        fn::secret: $${github-org-secrets.VERCEL_ORG_ID}
    
    # GitHub
    github:
      token:
        fn::secret: $${github-org-secrets.GITHUB_TOKEN}
      webhook_secret:
        fn::secret: $${github-org-secrets.GITHUB_WEBHOOK_SECRET}
    
    # Pulumi
    pulumi:
      access_token:
        fn::secret: $${github-org-secrets.PULUMI_ACCESS_TOKEN}

  # Environment Variables Export
  environment_variables:
    # Infrastructure
    LAMBDA_API_KEY: $${compute_infrastructure.lambda_labs.api_key}
    LAMBDA_IP_ADDRESS: $${compute_infrastructure.lambda_labs.ip_address}
    
    # Data Pipeline
    ESTUARY_FLOW_ACCESS_TOKEN: $${data_infrastructure.estuary_flow.access_token}
    ESTUARY_FLOW_TENANT: $${data_infrastructure.estuary_flow.tenant}
    POSTGRESQL_HOST: $${data_infrastructure.postgresql.host}
    POSTGRESQL_PORT: $${data_infrastructure.postgresql.port}
    POSTGRESQL_DATABASE: $${data_infrastructure.postgresql.database}
    POSTGRESQL_USER: $${data_infrastructure.postgresql.user}
    POSTGRESQL_PASSWORD: $${data_infrastructure.postgresql.password}
    POSTGRESQL_CONNECTION_STRING: $${data_infrastructure.postgresql.connection_string}
    REDIS_HOST: $${data_infrastructure.redis.host}
    REDIS_PORT: $${data_infrastructure.redis.port}
    REDIS_PASSWORD: $${data_infrastructure.redis.password}
    REDIS_URL: $${data_infrastructure.redis.url}
    
    # Snowflake
    SNOWFLAKE_ACCOUNT: $${data_warehouse.snowflake.account}
    SNOWFLAKE_USER: $${data_warehouse.snowflake.user}
    SOPHIA_AI_TOKEN: $${data_warehouse.snowflake.token}
    SNOWFLAKE_ROLE: $${data_warehouse.snowflake.role}
    SNOWFLAKE_WAREHOUSE: $${data_warehouse.snowflake.warehouse}
    SNOWFLAKE_DATABASE: $${data_warehouse.snowflake.database}
    SNOWFLAKE_SCHEMA: $${data_warehouse.snowflake.schema}
    
    # External Integrations
    HUBSPOT_ACCESS_TOKEN: $${external_integrations.hubspot.access_token}
    HUBSPOT_API_KEY: $${external_integrations.hubspot.api_key}
    HUBSPOT_PORTAL_ID: $${external_integrations.hubspot.portal_id}
    GONG_ACCESS_KEY: $${external_integrations.gong.access_key}
    GONG_CLIENT_SECRET: $${external_integrations.gong.client_secret}
    GONG_WEBHOOK_SECRET: $${external_integrations.gong.webhook_secret}
    SLACK_BOT_TOKEN: $${external_integrations.slack.bot_token}
    SLACK_APP_TOKEN: $${external_integrations.slack.app_token}
    SLACK_SIGNING_SECRET: $${external_integrations.slack.signing_secret}
    
    # AI Services
    OPENAI_API_KEY: $${ai_services.openai.api_key}
    ANTHROPIC_API_KEY: $${ai_services.anthropic.api_key}
    PORTKEY_API_KEY: $${ai_services.portkey.api_key}
    PINECONE_API_KEY: $${ai_services.pinecone.api_key}
    PINECONE_ENVIRONMENT: $${ai_services.pinecone.environment}
    
    # Deployment
    VERCEL_TOKEN: $${deployment.vercel.token}
    GITHUB_TOKEN: $${deployment.github.token}
    PULUMI_ACCESS_TOKEN: $${deployment.pulumi.access_token}

  # Terraform State
  terraform:
    managed: true
    version: "1.0"
    workspace: "infrastructure-production"
    last_applied: "$${timestamp()}"

