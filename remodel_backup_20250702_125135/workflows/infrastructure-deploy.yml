name: Infrastructure Deploy

on
  push
    branches: [main]
  workflow_dispatch
    inputs
      environment
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options
          - production
          - development

env
  PULUMI_ORG: scoobyjava-org
  PYTHON_VERSION: '3.11'

jobs
  deploy
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    
    steps
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Pulumi
        uses: pulumi/actions@v5
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Pulumi
        run: pulumi login
        env
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      
      - name: Select stack
        env
          INPUT_ENV: ${{ github.event.inputs.environment || 'production' }}
        run: pulumi stack select $INPUT_ENV
        working-directory: infrastructure
      
      - name: Install dependencies
        run: |
          uv sync
        working-directory: infrastructure
      
      - name: Preview changes
        if: github.event_name == 'pull_request'
        run: pulumi preview
        working-directory: infrastructure
        env
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      
      - name: Deploy infrastructure
        if: github.event_name != 'pull_request'
        run: pulumi up --yes
        working-directory: infrastructure
        env
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      
      - name: Export outputs
        if: github.event_name != 'pull_request'
        run: |
          pulumi stack output --json > outputs.json
          echo "Infrastructure deployed successfully"
        working-directory: infrastructure
