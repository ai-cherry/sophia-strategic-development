version: "3.8"

# Monitoring Stack for Sophia AI
# Includes: Prometheus, Grafana, Loki, Promtail, AlertManager

services:
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus_alerts
        target: /etc/prometheus/alerts.yml
    volumes:
      - prometheus_data:/prometheus
    ports:
      - target: 9090
        published: 9091
        mode: ingress
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1.0"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.sophia-ai.lambda.cloud`)"
        - "traefik.http.routers.prometheus.tls=true"
        - "traefik.http.routers.prometheus.tls.certresolver=le"
    networks:
      - sophia-public
      - sophia-private

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.sophia-ai.lambda.cloud
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    secrets:
      - grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_provisioning:/etc/grafana/provisioning
    ports:
      - target: 3000
        published: 3001
        mode: ingress
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.sophia-ai.lambda.cloud`)"
        - "traefik.http.routers.grafana.tls=true"
        - "traefik.http.routers.grafana.tls.certresolver=le"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - sophia-public
      - sophia-private

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki.yaml
    configs:
      - source: loki_config
        target: /etc/loki/loki.yaml
    volumes:
      - loki_data:/loki
    ports:
      - target: 3100
        published: 3100
        mode: ingress
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.storage == ssd
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    networks:
      - sophia-private

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/promtail.yaml
    configs:
      - source: promtail_config
        target: /etc/promtail/promtail.yaml
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M
    networks:
      - sophia-private

  alertmanager:
    image: prom/alertmanager:latest
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    configs:
      - source: alertmanager_config
        target: /etc/alertmanager/alertmanager.yml
    volumes:
      - alertmanager_data:/alertmanager
    ports:
      - target: 9093
        published: 9093
        mode: ingress
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M
    networks:
      - sophia-private

configs:
  prometheus_config:
    file: ./configs/prometheus.yml
  prometheus_alerts:
    file: ./configs/alerts.yml
  loki_config:
    file: ./configs/loki.yaml
  promtail_config:
    file: ./configs/promtail.yaml
  alertmanager_config:
    file: ./configs/alertmanager.yml

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/monitoring/prometheus

  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/monitoring/grafana

  grafana_provisioning:
    driver: local

  loki_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/monitoring/loki

  alertmanager_data:
    driver: local

secrets:
  grafana_password:
    external: true

networks:
  sophia-public:
    external: true
  sophia-private:
    external: true
