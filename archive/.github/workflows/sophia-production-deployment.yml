name: Sophia AI Production Deployment
'on':
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch: {}
env:
  ENVIRONMENT: prod
  PULUMI_ORG: scoobyjava-org
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: uv sync --group dev
    - name: Run linting with Ruff
      run: uv run ruff check .
    - name: Run tests with pytest
      run: uv run pytest tests/ --cov=backend --cov-report=xml
  security:
    runs-on: ubuntu-latest
    needs:
    - lint-and-test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh && echo "$HOME/.cargo/bin"
        >> $GITHUB_PATH
    - name: Install dependencies
      run: uv sync --group dev
    - name: Run security scan
      run: uv run pip-audit --format=json --output=vulnerability-report.json || true
  build-and-deploy:
    runs-on: ubuntu-latest
    needs:
    - lint-and-test
    - security
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER_NAME }}
        password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.production
        platforms: linux/amd64,linux/arm64
        push: true
        tags: 'scoobyjava15/sophia-ai:latest

          scoobyjava15/sophia-ai:${{ github.sha }}'
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Deploy Infrastructure
      uses: pulumi/actions@v4
      with:
        command: up
        stack-name: scoobyjava-org/sophia-prod-on-lambda
        work-dir: infrastructure/
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    - name: Get Lambda Labs Instance IP
      id: get-ip
      run: 'INSTANCE_IP=$(pulumi stack output lambdaLabsInstanceIp --stack scoobyjava-org/sophia-prod-on-lambda)

        echo "instance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT'
    - name: Deploy to Kubernetes
      run: 'kubectl apply -f kubernetes/

        kubectl rollout status deployment/sophia-ai --timeout=600s'
    - name: Verify Deployment
      run: 'INSTANCE_IP="${{ steps.get-ip.outputs.instance_ip }}"

        curl -f http://$INSTANCE_IP/health

        python scripts/verify_deployment.py --instance-ip $INSTANCE_IP'
