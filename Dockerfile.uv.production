# Multi-stage production Dockerfile with UV
FROM python:3.12-slim AS builder

# Install UV
RUN pip install uv

# Set working directory
WORKDIR /app

# Copy dependency files
COPY pyproject.toml uv.lock ./
COPY README.md ./

# Install dependencies with UV
RUN uv sync --frozen --no-dev

# Production stage
FROM python:3.12-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 sophia

# Set working directory
WORKDIR /app

# Copy UV and dependencies from builder
COPY --from=builder /root/.local /root/.local
COPY --from=builder /app/.venv /app/.venv

# Copy application code
COPY backend/ ./backend/
COPY config/ ./config/
COPY pyproject.toml uv.lock ./

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app"
ENV ENVIRONMENT=prod
ENV PULUMI_ORG=scoobyjava-org

# Change ownership
RUN chown -R sophia:sophia /app

# Switch to non-root user
USER sophia

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "backend.app.fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]
