{
  "name": "Sophia AI MCP Gateway",
  "version": "2.0.0",
  "description": "Modern MCP Gateway for Sophia AI using Docker MCP Catalog approach",
  "transport": {
    "type": "sse",
    "host": "0.0.0.0",
    "port": 8090
  },
  "servers": {
    "pulumi": {
      "name": "Pulumi Infrastructure Management",
      "description": "Official Pulumi MCP Server for infrastructure as code",
      "image": "mcp/pulumi:latest",
      "transport": "sse",
      "endpoint": "http://pulumi-mcp:3001",
      "capabilities": [
        "infrastructure_preview",
        "infrastructure_deployment",
        "stack_management",
        "resource_discovery",
        "output_retrieval"
      ],
      "tools": [
        "preview",
        "up",
        "stack-output",
        "get-resource",
        "list-resources"
      ]
    },
    "github": {
      "name": "GitHub Integration",
      "description": "GitHub MCP Server for repository management",
      "image": "mcp/github:latest",
      "transport": "sse",
      "endpoint": "http://github-mcp:3002",
      "capabilities": [
        "repository_management",
        "issue_tracking",
        "pull_requests",
        "workflow_automation"
      ]
    },
    "docker": {
      "name": "Docker Container Management",
      "description": "Docker MCP Server for container orchestration",
      "image": "mcp/docker:latest",
      "transport": "sse",
      "endpoint": "http://docker-mcp:3003",
      "capabilities": [
        "container_management",
        "image_operations",
        "network_management",
        "volume_management"
      ]
    },
    "slack": {
      "name": "Slack Communication",
      "description": "Slack MCP Server for team communication",
      "image": "mcp/slack:latest",
      "transport": "sse",
      "endpoint": "http://slack-mcp:3004",
      "capabilities": [
        "messaging",
        "channel_management",
        "user_management",
        "workflow_integration"
      ]
    },
    "postgres": {
      "name": "PostgreSQL Database",
      "description": "PostgreSQL MCP Server for database operations",
      "image": "mcp/postgres:latest",
      "transport": "sse",
      "endpoint": "http://postgres-mcp:3005",
      "capabilities": [
        "query_execution",
        "schema_management",
        "data_migration",
        "performance_monitoring"
      ]
    }
  },
  "routing": {
    "strategy": "capability-based",
    "rules": [
      {
        "pattern": "infrastructure.*",
        "server": "pulumi"
      },
      {
        "pattern": "deploy.*",
        "server": "pulumi"
      },
      {
        "pattern": "stack.*",
        "server": "pulumi"
      },
      {
        "pattern": "github.*",
        "server": "github"
      },
      {
        "pattern": "repository.*",
        "server": "github"
      },
      {
        "pattern": "container.*",
        "server": "docker"
      },
      {
        "pattern": "docker.*",
        "server": "docker"
      },
      {
        "pattern": "slack.*",
        "server": "slack"
      },
      {
        "pattern": "message.*",
        "server": "slack"
      },
      {
        "pattern": "database.*",
        "server": "postgres"
      },
      {
        "pattern": "query.*",
        "server": "postgres"
      }
    ]
  },
  "security": {
    "authentication": {
      "enabled": true,
      "type": "token-based"
    },
    "isolation": {
      "enabled": true,
      "filesystem_restrictions": true,
      "network_restrictions": true,
      "resource_limits": {
        "cpu": "1.0",
        "memory": "2G",
        "timeout": "30s"
      }
    },
    "logging": {
      "level": "info",
      "audit_trail": true,
      "sensitive_data_filtering": true
    }
  },
  "monitoring": {
    "health_checks": {
      "enabled": true,
      "interval": "30s",
      "timeout": "10s"
    },
    "metrics": {
      "enabled": true,
      "endpoint": "/metrics",
      "prometheus_compatible": true
    }
  }
}
