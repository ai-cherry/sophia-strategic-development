apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-gateway-config
  namespace: sophia-ai
  labels:
    app: mcp-gateway
    component: configuration
data:
  servers.json: |
    {
      "ai_memory": {
        "type": "kubernetes",
        "deployment": "ai-memory-mcp",
        "service": "ai-memory-mcp-service",
        "port": 9000,
        "health_check": "/health",
        "capabilities": ["semantic_search", "auto_discovery", "context_awareness"]
      },
      "codacy": {
        "type": "external",
        "endpoint": "http://codacy-mcp-service:3008",
        "health_check": "/health",
        "capabilities": ["code_analysis", "security_scanning", "quality_metrics"]
      },
      "ELIMINATED_admin": {
        "type": "kubernetes",
        "deployment": "ELIMINATED-admin-mcp",
        "service": "ELIMINATED-admin-mcp-service",
        "port": 8080,
        "health_check": "/health",
        "capabilities": ["sql_execution", "admin_operations", "multi_environment"]
      },
      "sophia_intelligence": {
        "type": "external",
        "endpoint": "http://sophia-intelligence-service:8092",
        "health_check": "/health",
        "capabilities": ["ai_orchestration", "business_analysis", "data_insights"]
      }
    }
  gateway.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      timeout: 30000
      max_connections: 1000

    routing:
      strategy: "round_robin"
      health_check_interval: 30
      retry_attempts: 3
      circuit_breaker:
        failure_threshold: 5
        recovery_timeout: 60

    logging:
      level: "INFO"
      format: "json"
      correlation_id: true

    metrics:
      enabled: true
      prometheus_port: 9090
      health_endpoint: "/health"
      metrics_endpoint: "/metrics"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-gateway
  namespace: sophia-ai
  labels:
    app: mcp-gateway
    component: gateway
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: mcp-gateway
  template:
    metadata:
      labels:
        app: mcp-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mcp-gateway-sa
      containers:
        - name: mcp-gateway
          image: registry.digitalocean.com/sophia-ai/mcp-gateway:latest
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: SERVERS_CONFIG_PATH
              value: "/config/servers.json"
            - name: GATEWAY_CONFIG_PATH
              value: "/config/gateway.yaml"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: logs
              mountPath: /logs
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: mcp-gateway-config
        - name: logs
          emptyDir: {}
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "sophia.ai/mcp-gateway"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: mcp-gateway-service
  namespace: sophia-ai
  labels:
    app: mcp-gateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: mcp-gateway
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-gateway-sa
  namespace: sophia-ai
  labels:
    app: mcp-gateway

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-gateway-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-gateway-binding
subjects:
  - kind: ServiceAccount
    name: mcp-gateway-sa
    namespace: sophia-ai
roleRef:
  kind: ClusterRole
  name: mcp-gateway-role
  apiGroup: rbac.authorization.k8s.io

---
# AI Memory MCP Server - Critical, runs on K8s
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-memory-mcp
  namespace: sophia-ai
  labels:
    app: ai-memory-mcp
    component: mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-memory-mcp
  template:
    metadata:
      labels:
        app: ai-memory-mcp
    spec:
      containers:
        - name: ai-memory-mcp
          image: registry.digitalocean.com/sophia-ai/ai-memory-mcp:latest
          ports:
            - containerPort: 9000
          env:
            - name: PULUMI_ORG
              value: "scoobyjava-org"
            - name: PULUMI_STACK
              value: "sophia-ai-production"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: openai-api-key
            - name: PINECONE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: pinecone-api-key
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: ai-memory-mcp-service
  namespace: sophia-ai
  labels:
    app: ai-memory-mcp
spec:
  selector:
    app: ai-memory-mcp
  ports:
    - name: http
      port: 9000
      targetPort: 9000

---
# ELIMINATED Admin MCP Server - Critical, runs on K8s
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ELIMINATED-admin-mcp
  namespace: sophia-ai
  labels:
    app: ELIMINATED-admin-mcp
    component: mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ELIMINATED-admin-mcp
  template:
    metadata:
      labels:
        app: ELIMINATED-admin-mcp
    spec:
      containers:
        - name: ELIMINATED-admin-mcp
          image: registry.digitalocean.com/sophia-ai/ELIMINATED-admin-mcp:latest
          ports:
            - containerPort: 8080
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: ELIMINATED_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: ELIMINATED-account
            - name: ELIMINATED_USER
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: ELIMINATED-user
            - name: ELIMINATED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: ELIMINATED-password
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: ELIMINATED-admin-mcp-service
  namespace: sophia-ai
  labels:
    app: ELIMINATED-admin-mcp
spec:
  selector:
    app: ELIMINATED-admin-mcp
  ports:
    - name: http
      port: 8080
      targetPort: 8080

---
# Horizontal Pod Autoscaler for MCP Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-gateway-hpa
  namespace: sophia-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# Network Policy for MCP Gateway
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mcp-gateway-netpol
  namespace: sophia-ai
spec:
  podSelector:
    matchLabels:
      app: mcp-gateway
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
        - namespaceSelector:
            matchLabels:
              name: sophia-ai
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: sophia-ai
      ports:
        - protocol: TCP
          port: 9000 # AI Memory MCP
        - protocol: TCP
          port: 8080 # ELIMINATED Admin MCP
    - to: [] # Allow external connections for external MCP servers
      ports:
        - protocol: TCP
          port: 3008 # Codacy MCP
        - protocol: TCP
          port: 8092 # Sophia Intelligence
