# Multi-stage Docker build optimized for UV with correct paths
FROM python:3.12-slim AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install UV and add to PATH
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy dependency files for layer caching
COPY pyproject.toml uv.lock ./

# Install dependencies using correct path
RUN uv sync --frozen --no-cache

# Production stage
FROM python:3.12-slim AS production

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install UV and add to PATH
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:$PATH"

# Copy application and venv
WORKDIR /app
COPY --from=builder /app/.venv /app/.venv
COPY . .

# Set environment variables
ENV PYTHONPATH=/app
ENV PATH="/app/.venv/bin:/root/.local/bin:$PATH"

# Expose port
EXPOSE 8000

# Run application
CMD ["uv", "run", "python", "-m", "backend.app.fastapi_app"]
