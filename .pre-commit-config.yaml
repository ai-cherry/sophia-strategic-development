# Pre-commit hooks for Sophia AI
# See https://pre-commit.com for more information

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.12
        args: [--line-length=88]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.11
    hooks:
      - id: ruff
        args: [
          --fix,
          # Ignore overly strict rules
          --ignore=TRY200,  # Use raise from
          --ignore=TRY300,  # Consider else block
          --ignore=TRY301,  # Abstract raise
          --ignore=ARG001,  # Unused function argument
          --ignore=ARG002,  # Unused method argument
          --ignore=PERF401, # Use list comprehension
          --ignore=N815,    # Variable names in class scope
          --ignore=E722,    # Bare except (sometimes needed)
        ]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-ll, --skip=B101,B601,B602,B607]
        files: ^backend/.*\.py$

  # Check for large files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-json
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: detect-private-key

  # Local hooks - Commented out due to missing scripts
  # Uncomment when scripts are created
  - repo: local
    hooks:
      # - id: dead-code-prevention
      #   name: Prevent dead code patterns
      #   entry: python scripts/security/prevent_dead_code_patterns.py
      #   language: python
      #   types: [text]
      #   exclude: .*/(test_.*|.*_test)\.py

      # - id: remind-about-one-time-script-deletion
      #   name: Remind about one-time script deletion
      #   entry: python scripts/remind_about_one_time_script_deletion.py
      #   language: python
      #   pass_filenames: true
      #   files: ^scripts/.*\.py$

      - id: one-time-check
        name: One-Time Artefact Guard
        entry: .githooks/pre-commit-one-time-check
        language: script
        types: [python, text]

      # Keep monorepo guard - it's important
      - id: monorepo-transition-guard
        name: Guard against monorepo transition violations
        entry: python
        args:
          - -c
          - |
            import sys
            violations = [f for f in sys.argv[1:] if f.startswith(('apps/', 'libs/')) and not f.endswith(('README.md', '.FUTURE_USE_ONLY'))]
            if violations:
              print('‚ùå MONOREPO TRANSITION VIOLATION:')
              for v in violations: print(f'   {v}')
              print('üí° Continue using backend/ and frontend/ until February 2025')
              print('   See docs/monorepo/MONOREPO_TRANSITION_GUIDE.md'); sys.exit(1)
        language: python
        pass_filenames: true
        files: ^(apps|libs)/

      - id: duplication-scan
        name: duplication-scan
        entry: python scripts/duplication_scan.py
        language: python
        pass_filenames: false

# Configuration
default_language_version:
  python: python3.12

exclude: |
  (?x)^(
    external/|
    node_modules/|
    venv/|
    \.venv/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/|
    \.ruff_cache/|
    build/|
    dist/|
    \.git/|
    .*\.min\.js$|
    .*\.min\.css$|
    archive/|
    backups/|
    docs_backup_.*
  )$
