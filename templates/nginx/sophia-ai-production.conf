# Sophia AI Production nginx Configuration
# Unified routing for frontend, backend, and distributed MCP services

# Backend upstream (port 7000)
upstream sophia_backend {
    server 192.222.58.232:7000;  # Sophia AI backend on port 7000
    keepalive 32;
}

# AI Core MCP Services (8000-8099)
upstream ai_core_services {
    server 192.222.58.232:7000;  # vector_search_mcp
    server 192.222.58.232:8001;  # real_time_chat_mcp
    server 192.222.58.232:8002;  # ai_memory_mcp
    keepalive 16;
}

# Business Tools MCP Services (8100-8199)
upstream business_tools_services {
    server 104.171.202.117:8100; # gong_mcp
    server 104.171.202.117:8101; # hubspot_mcp
    server 104.171.202.117:8102; # linear_mcp
    server 104.171.202.117:8103; # asana_mcp
    server 104.171.202.117:8104; # slack_mcp
    keepalive 16;
}

# Data Pipeline MCP Services (8200-8299)
upstream data_pipeline_services {
    server 104.171.202.134:8200; # github_mcp
    server 104.171.202.134:8201; # notion_mcp
    server 104.171.202.134:8202; # postgres_mcp
    server 104.171.202.134:8203; # snowflake_mcp
    keepalive 16;
}

# Production Services MCP (8300-8399)
upstream production_services {
    server 104.171.202.103:8300; # codacy_mcp
    server 104.171.202.103:8301; # portkey_admin
    server 104.171.202.103:8302; # ui_ux_agent
    keepalive 16;
}

# Strategic Services (9000-9099)
upstream strategic_services {
    server 192.222.58.232:9000;  # unified_memory_service
    keepalive 8;
}

# Health Monitoring (9100-9199)
upstream health_monitoring {
    server 192.222.58.232:9100;  # central health monitor
    keepalive 8;
}

# Main server configuration
server {
    listen 80;
    listen [::]:80;
    server_name sophia-ai.com www.sophia-ai.com localhost 192.222.58.232;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Frontend static files (React build)
    location / {
        root /var/www/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Backend API routes (port 7000)
    location /api/ {
        proxy_pass http://sophia_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
    }
    
    # WebSocket endpoint
    location /ws {
        proxy_pass http://sophia_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Direct MCP service routes (when backend proxy is bypassed)
    location /mcp/ai/ {
        proxy_pass http://ai_core_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /mcp/business/ {
        proxy_pass http://business_tools_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /mcp/data/ {
        proxy_pass http://data_pipeline_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /mcp/production/ {
        proxy_pass http://production_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Strategic services (unified memory)
    location /strategic/ {
        proxy_pass http://strategic_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Health monitoring
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    location /health/backend {
        proxy_pass http://sophia_backend/health;
        access_log off;
    }
    
    location /health/mcp {
        proxy_pass http://health_monitoring/;
        access_log off;
    }
    
    # Status page
    location /status {
        access_log off;
        return 200 "Sophia AI Production - All Systems Operational\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ /(config|templates|scripts)/ {
        deny all;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
    }
}

# SSL configuration (production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sophia-ai.com www.sophia-ai.com;
    
    # SSL certificate configuration (update with actual certificates)
    ssl_certificate /etc/ssl/certs/sophia-ai.crt;
    ssl_certificate_key /etc/ssl/private/sophia-ai.key;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Include all the same location blocks from the HTTP server
    include /etc/nginx/conf.d/sophia-ai-locations.conf;
} 