{
  "deployment_start": "2025-07-05T14:37:59.947988",
  "phases": {
    "phase_1_validation": {
      "status": "completed",
      "checks": {
        "docker": {
          "status": "\u2705",
          "version": "Docker version 28.2.2, build e6534b4"
        },
        "pulumi": {
          "status": "\u2705",
          "user": "scoobyjava-org"
        },
        "kubectl": {
          "status": "\u2705",
          "version": "available"
        },
        "dockerfile": {
          "status": "\u2705",
          "path": "/Users/lynnmusil/sophia-main/Dockerfile.production"
        },
        "environment": {
          "status": "\u26a0\ufe0f",
          "warning": "ERROR:__main__:\u274c Environment validation failed:\nERROR:__main__:  - Missing required variable: DOCKER_USER_NAME (Docker Hub username)\nERROR:__main__:  - Missing required variable: DOCKER_PERSONAL_ACCESS_TOKEN (Docker Hub access token)\nERROR:__main__:  - Missing required variable: LAMBDA_LABS_API_KEY (Lambda Labs API key)\n"
        }
      },
      "success_rate": 0.8
    },
    "phase_2_docker": {
      "status": "completed",
      "steps": {
        "docker_build": {
          "status": "\u2705",
          "build_time": "0.3s",
          "image": "scoobyjava15/sophia-ai:test-july5"
        },
        "local_test": {
          "status": "\u274c",
          "error": "docker: Error response from daemon: Conflict. The container name \"/sophia-test-local\" is already in use by container \"6805208f39386da659ff4bfb297d2804da93912b5da1f1489e0111216538d4f4\". You have to remove (or rename) that container to be able to reuse that name.\n\nRun 'docker run --help' for more information\n"
        }
      }
    },
    "phase_3_kubernetes": {
      "status": "completed",
      "checks": {
        "cluster_access": {
          "status": "\u274c",
          "error": "E0705 14:38:00.875401    4746 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp [::1]:8080: connect: connection refused\"\nE0705 14:38:00.877206    4746 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp [::1]:8080: connect: connection refused\"\nE0705 14:38:00.878837    4746 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp [::1]:8080: connect: connection refused\"\nE0705 14:38:00.880310    4746 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp [::1]:8080: connect: connection refused\"\nE0705 14:38:00.882017    4746 memcache.go:265] \"Unhandled Error\" err=\"couldn't get current server API group list: Get \\\"http://localhost:8080/api?timeout=32s\\\": dial tcp [::1]:8080: connect: connection refused\"\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?\n"
        }
      }
    },
    "phase_4_mcp": {
      "status": "completed",
      "servers": {
        "ai_memory": {
          "port": 9000,
          "tests": {
            "connectivity": {
              "status": "\u274c",
              "error": "HTTP 7"
            },
            "health": {
              "status": "\u23ed\ufe0f",
              "reason": "Skipped due to connectivity failure"
            }
          }
        },
        "codacy": {
          "port": 3008,
          "tests": {
            "connectivity": {
              "status": "\u274c",
              "error": "HTTP 28"
            },
            "health": {
              "status": "\u23ed\ufe0f",
              "reason": "Skipped due to connectivity failure"
            }
          }
        },
        "github": {
          "port": 9003,
          "tests": {
            "connectivity": {
              "status": "\u274c",
              "error": "HTTP 28"
            },
            "health": {
              "status": "\u23ed\ufe0f",
              "reason": "Skipped due to connectivity failure"
            }
          }
        },
        "linear": {
          "port": 9004,
          "tests": {
            "connectivity": {
              "status": "\u274c",
              "error": "HTTP 28"
            },
            "health": {
              "status": "\u23ed\ufe0f",
              "reason": "Skipped due to connectivity failure"
            }
          }
        },
        "snowflake_admin": {
          "port": 9020,
          "tests": {
            "connectivity": {
              "status": "\u274c",
              "error": "HTTP 28"
            },
            "health": {
              "status": "\u23ed\ufe0f",
              "reason": "Skipped due to connectivity failure"
            }
          }
        }
      },
      "success_rate": 0.0
    },
    "phase_5_performance": {
      "status": "completed",
      "metrics": {
        "health": {
          "endpoint": "/health",
          "samples": [
            {
              "sample": 1,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 2,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 3,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 4,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 5,
              "error": "Curl failed: ",
              "success": false
            }
          ],
          "metrics": {
            "success_rate": 0,
            "error": "No successful requests"
          }
        },
        "api_docs": {
          "endpoint": "/docs",
          "samples": [
            {
              "sample": 1,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 2,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 3,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 4,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 5,
              "error": "Curl failed: ",
              "success": false
            }
          ],
          "metrics": {
            "success_rate": 0,
            "error": "No successful requests"
          }
        },
        "chat": {
          "endpoint": "/api/v1/chat",
          "samples": [
            {
              "sample": 1,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 2,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 3,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 4,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 5,
              "error": "Curl failed: ",
              "success": false
            }
          ],
          "metrics": {
            "success_rate": 0,
            "error": "No successful requests"
          }
        },
        "dashboard": {
          "endpoint": "/api/v1/dashboard/metrics",
          "samples": [
            {
              "sample": 1,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 2,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 3,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 4,
              "error": "Curl failed: ",
              "success": false
            },
            {
              "sample": 5,
              "error": "Curl failed: ",
              "success": false
            }
          ],
          "metrics": {
            "success_rate": 0,
            "error": "No successful requests"
          }
        }
      }
    },
    "phase_6_integration": {
      "status": "completed",
      "integration_tests": {
        "dashboard_chat": {
          "status": "\u274c",
          "error": "Dashboard endpoint failed"
        },
        "mcp_api": {
          "status": "\u23ed\ufe0f",
          "reason": "No working MCP servers found"
        }
      }
    }
  },
  "tests": {},
  "performance": {
    "health": {
      "endpoint": "/health",
      "samples": [
        {
          "sample": 1,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 2,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 3,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 4,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 5,
          "error": "Curl failed: ",
          "success": false
        }
      ],
      "metrics": {
        "success_rate": 0,
        "error": "No successful requests"
      }
    },
    "api_docs": {
      "endpoint": "/docs",
      "samples": [
        {
          "sample": 1,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 2,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 3,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 4,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 5,
          "error": "Curl failed: ",
          "success": false
        }
      ],
      "metrics": {
        "success_rate": 0,
        "error": "No successful requests"
      }
    },
    "chat": {
      "endpoint": "/api/v1/chat",
      "samples": [
        {
          "sample": 1,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 2,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 3,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 4,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 5,
          "error": "Curl failed: ",
          "success": false
        }
      ],
      "metrics": {
        "success_rate": 0,
        "error": "No successful requests"
      }
    },
    "dashboard": {
      "endpoint": "/api/v1/dashboard/metrics",
      "samples": [
        {
          "sample": 1,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 2,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 3,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 4,
          "error": "Curl failed: ",
          "success": false
        },
        {
          "sample": 5,
          "error": "Curl failed: ",
          "success": false
        }
      ],
      "metrics": {
        "success_rate": 0,
        "error": "No successful requests"
      }
    }
  },
  "errors": [],
  "final_status": "failed",
  "overall_success_rate": 0.2222222222222222,
  "total_tests": 18,
  "successful_tests": 4,
  "performance_summary": {},
  "deployment_end": "2025-07-05T14:38:42.504482",
  "recommendations": [
    "Review failed tests and address infrastructure issues",
    "Investigate MCP server connectivity issues"
  ]
}
