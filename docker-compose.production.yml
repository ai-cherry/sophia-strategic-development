networks:
  sophia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
services:
  ai-memory-mcp:
    build:
      context: .
      dockerfile: mcp-servers/ai-memory/Dockerfile.production
    depends_on:
      - redis-cluster
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "1.0"
          memory: 2G
    environment:
      - MCP_SERVER_NAME=ai-memory
      - MCP_SERVER_PORT=9000
      - PULUMI_ORG=scoobyjava-org
      - CONNECTION_POOL_SIZE=10
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9000/health
      timeout: 10s
    networks:
      - sophia-network
    ports:
      - 9000:9000
    restart: unless-stopped
  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    image: grafana/grafana:latest
    networks:
      - sophia-network
    ports:
      - 3001:3000
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
  mcp-gateway:
    build:
      context: ./infrastructure/mcp-gateway
      dockerfile: Dockerfile.uv.production
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "1.0"
          memory: 2G
    environment:
      - GATEWAY_ENVIRONMENT=production
      - GATEWAY_PORT=8090
      - METRICS_PORT=9090
      - CIRCUIT_BREAKER_THRESHOLD=5
      - RATE_LIMIT_RPM=1000
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8090/health
      timeout: 10s
    networks:
      - sophia-network
    ports:
      - 8090:8090
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./config/mcp-gateway-production.yaml:/app/config/gateway.yaml:ro
      - mcp-logs:/app/logs
  postgres-primary:
    environment:
      - POSTGRES_DB=sophia_ai
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=${POSTGRES_REPLICATION_PASSWORD}
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD-SHELL
        - pg_isready -U sophia -d sophia_ai
      timeout: 10s
    image: postgres:15-alpine
    networks:
      - sophia-network
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
  prometheus:
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
    image: prom/prometheus:latest
    networks:
      - sophia-network
    ports:
      - 9091:9090
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
  redis-cluster:
    command: redis-server --appendonly yes --cluster-enabled yes
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 10s
    image: redis:7-alpine
    networks:
      - sophia-network
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - redis-data:/data
  sophia-backend:
    build:
      args:
        ENVIRONMENT: production
      context: .
      dockerfile: Dockerfile.uv.production
    depends_on:
      - redis-cluster
      - postgres-primary
      - mcp-gateway
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 4G
        reservations:
          cpus: "1.0"
          memory: 2G
    environment:
      - SOPHIA_ENVIRONMENT=production
      - SOPHIA_HOST=0.0.0.0
      - SOPHIA_PORT=8000
      - PULUMI_ORG=scoobyjava-org
      - CONNECTION_POOL_SIZE=25
      - REDIS_POOL_SIZE=15
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 60s
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8000/api/health
      timeout: 10s
    networks:
      - sophia-network
    ports:
      - 8000:8000
    restart: unless-stopped
    volumes:
      - sophia-logs:/app/logs
      - sophia-cache:/app/cache
version: "3.8"
volumes:
  grafana-data: null
  mcp-logs: null
  postgres-primary-data: null
  prometheus-data: null
  redis-data: null
  sophia-cache: null
  sophia-logs: null
