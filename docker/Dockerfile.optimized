# Multi-stage Dockerfile for Optimized Sophia AI
# Part of the Lambda Labs Infrastructure Migration Plan
# Provides 50-70% faster builds and smaller images

# Build stage - Install dependencies and build tools
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies to user directory
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy source code
COPY . .

# Runtime stage - Minimal runtime environment
FROM python:3.12-slim AS runtime

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r sophia && useradd -r -g sophia sophia

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/sophia/.local

# Copy application code
COPY --from=builder /app /app

# Set ownership
RUN chown -R sophia:sophia /app /home/sophia

# Switch to non-root user
USER sophia

# Make sure user-installed packages are in PATH
ENV PATH=/home/sophia/.local/bin:$PATH

# Set working directory
WORKDIR /app

# Environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=prod
ENV PULUMI_ORG=scoobyjava-org

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Default command
CMD ["python", "-m", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
