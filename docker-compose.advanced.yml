version: '3.8'

# Sophia AI Advanced 2025 Deployment
# Implements cutting-edge patterns:
# - Sub-microsecond agent performance with uvloop
# - Circuit breaker resilience patterns
# - Advanced AI model routing with caching
# - Enterprise security with zero-trust
# - Performance validation infrastructure

networks:
  sophia-advanced-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
    driver_opts:
      com.docker.network.bridge.name: sophia-advanced
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"

services:
  # Advanced Enhanced Backend (Sub-Microsecond Performance)
  advanced-backend:
    build:
      context: .
      dockerfile: Dockerfile.uv.advanced
    container_name: sophia-advanced-backend
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - PULUMI_ORG=scoobyjava-org
      - SERVICE_NAME=advanced-backend
      - ENVIRONMENT=production
      - UVLOOP_ENABLED=true
      - REDIS_HOST=redis-advanced
      - REDIS_PORT=6379
      - PERFORMANCE_MODE=ultra_high
    ports:
      - "8000:8000"
    networks:
      - sophia-advanced-net
    volumes:
      - ./logs:/app/logs
      - ./performance-data:/app/performance-data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - redis-advanced
      - prometheus-advanced

  # SOTA Gateway with Enhanced Routing
  sota-gateway-advanced:
    build:
      context: .
      dockerfile: Dockerfile.uv.advanced
    container_name: sophia-sota-gateway-advanced
    environment:
      - PORT=8005
      - HOST=0.0.0.0
      - PULUMI_ORG=scoobyjava-org
      - SERVICE_NAME=sota-gateway
      - ENVIRONMENT=production
      - UVLOOP_ENABLED=true
      - MODEL_ROUTING_CACHE=true
      - CIRCUIT_BREAKER_ENABLED=true
    ports:
      - "8005:8005"
    networks:
      - sophia-advanced-net
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 3G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 15s
      timeout: 5s
      retries: 3
    depends_on:
      - advanced-backend
      - redis-advanced

  # AI Gateway with Circuit Breakers
  ai-gateway-advanced:
    build:
      context: .
      dockerfile: Dockerfile.uv.advanced
    container_name: sophia-ai-gateway-advanced
    environment:
      - PORT=8003
      - HOST=0.0.0.0
      - PULUMI_ORG=scoobyjava-org
      - SERVICE_NAME=ai-gateway
      - ENVIRONMENT=production
      - UVLOOP_ENABLED=true
      - CIRCUIT_BREAKER_FAIL_MAX=5
      - CIRCUIT_BREAKER_RESET_TIMEOUT=30
    ports:
      - "8003:8003"
    networks:
      - sophia-advanced-net
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  # MCP Gateway with Docker Catalog Integration
  mcp-gateway-advanced:
    build:
      context: .
      dockerfile: Dockerfile.uv.mcp-advanced
    container_name: sophia-mcp-gateway-advanced
    environment:
      - PORT=8090
      - HOST=0.0.0.0
      - PULUMI_ORG=scoobyjava-org
      - SERVICE_NAME=mcp-gateway
      - ENVIRONMENT=production
      - MCP_DOCKER_CATALOG=true
      - MCP_SSE_ENABLED=true
      - MCP_SECURITY_ISOLATION=true
    ports:
      - "8090:8090"
    networks:
      - sophia-advanced-net
    volumes:
      - ./logs:/app/logs
      - ./mcp-config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock  # Docker catalog access
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Advanced Streamlit Dashboard
  streamlit-dashboard-advanced:
    build:
      context: .
      dockerfile: Dockerfile.uv.streamlit-advanced
    container_name: sophia-streamlit-dashboard-advanced
    environment:
      - PORT=8501
      - HOST=0.0.0.0
      - BACKEND_URL=http://advanced-backend:8000
      - ENVIRONMENT=production
      - REAL_TIME_METRICS=true
      - PERFORMANCE_VALIDATION=true
    ports:
      - "8501:8501"
    networks:
      - sophia-advanced-net
    volumes:
      - ./dashboard:/app/dashboard
      - ./logs:/app/logs
      - ./performance-data:/app/performance-data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - advanced-backend

  # High-Performance Redis with Advanced Configuration
  redis-advanced:
    image: redis:7-alpine
    container_name: sophia-redis-advanced
    command: >
      redis-server
      --appendonly yes
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 0
      --tcp-backlog 511
      --databases 16
    ports:
      - "6379:6379"
    networks:
      - sophia-advanced-net
    volumes:
      - redis_advanced_data:/data
      - ./redis/redis-advanced.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Advanced Prometheus with Extended Metrics
  prometheus-advanced:
    image: prom/prometheus:latest
    container_name: sophia-prometheus-advanced
    ports:
      - "9090:9090"
    networks:
      - sophia-advanced-net
    volumes:
      - ./monitoring/prometheus-advanced.yml:/etc/prometheus/prometheus.yml
      - prometheus_advanced_data:/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Advanced Grafana with Performance Dashboards
  grafana-advanced:
    image: grafana/grafana:latest
    container_name: sophia-grafana-advanced
    ports:
      - "3000:3000"
    networks:
      - sophia-advanced-net
    volumes:
      - grafana_advanced_data:/var/lib/grafana
      - ./monitoring/grafana-advanced/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana-advanced/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana-advanced/plugins:/var/lib/grafana/plugins
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sophia-ai-advanced-2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
      - GF_ALERTING_ENABLED=true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - prometheus-advanced

  # Advanced NGINX with Performance Optimizations
  nginx-advanced:
    image: nginx:alpine
    container_name: sophia-nginx-advanced
    ports:
      - "80:80"
      - "443:443"
    networks:
      - sophia-advanced-net
    volumes:
      - ./nginx/nginx-advanced.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
      - ./nginx/cache:/var/cache/nginx
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - advanced-backend
      - sota-gateway-advanced
      - ai-gateway-advanced
      - mcp-gateway-advanced
      - streamlit-dashboard-advanced
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Performance Validation Service
  performance-validator:
    build:
      context: .
      dockerfile: Dockerfile.uv.performance-validator
    container_name: sophia-performance-validator
    environment:
      - TARGET_SERVICES=advanced-backend:8000,sota-gateway-advanced:8005,ai-gateway-advanced:8003,mcp-gateway-advanced:8090
      - VALIDATION_INTERVAL=60
      - AGENT_INSTANTIATION_TARGET_US=3
      - SWE_BENCH_TARGET_PERCENTAGE=70.6
      - COST_SAVINGS_TARGET=2847.50
    networks:
      - sophia-advanced-net
    volumes:
      - ./performance-data:/app/performance-data
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - advanced-backend
      - prometheus-advanced

  # MLflow Model Registry for Advanced Tracking
  mlflow-advanced:
    image: python:3.11-slim
    container_name: sophia-mlflow-advanced
    command: >
      sh -c "pip install mlflow[extras]==2.8.1 && 
             mlflow server --host 0.0.0.0 --port 5000 
             --backend-store-uri sqlite:///mlflow.db 
             --default-artifact-root /mlflow/artifacts"
    ports:
      - "5000:5000"
    networks:
      - sophia-advanced-net
    volumes:
      - mlflow_advanced_data:/mlflow
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000

  # Jaeger for Distributed Tracing
  jaeger-advanced:
    image: jaegertracing/all-in-one:latest
    container_name: sophia-jaeger-advanced
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - sophia-advanced-net
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  redis_advanced_data:
    driver: local
  prometheus_advanced_data:
    driver: local
  grafana_advanced_data:
    driver: local
  mlflow_advanced_data:
    driver: local
  sophia_advanced_logs:
    driver: local

# Health check for the entire advanced stack
x-advanced-healthcheck: &advanced-healthcheck
  test: |
    curl -f http://advanced-backend:8000/health &&
    curl -f http://sota-gateway-advanced:8005/health &&
    curl -f http://ai-gateway-advanced:8003/health &&
    curl -f http://mcp-gateway-advanced:8090/health &&
    curl -f http://streamlit-dashboard-advanced:8501/_stcore/health &&
    redis-cli -h redis-advanced ping
  interval: 30s
  timeout: 15s
  retries: 3 