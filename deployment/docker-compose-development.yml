version: '3.9'

x-default-deploy: &default-deploy
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 120s
  update_config:
    parallelism: 1
    delay: 10s
    failure_action: rollback
    monitor: 60s
  rollback_config:
    parallelism: 1
    delay: 10s
    failure_action: pause
    monitor: 60s

x-default-healthcheck: &default-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  # Codacy Code Analysis (Port 3008)
  codacy:
    image: ${DOCKER_REGISTRY}/sophia-codacy:${IMAGE_TAG}
    ports:
      - "3008:3008"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - PULUMI_ORG=${PULUMI_ORG:-scoobyjava-org}
      - PORT=3008
      - REDIS_URL=redis://redis:6379
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:3008/health"]

  # Performance Monitor (Port 9033)
  performance-monitor:
    image: ${DOCKER_REGISTRY}/sophia-performance-monitor:${IMAGE_TAG}
    ports:
      - "9033:9033"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - PULUMI_ORG=${PULUMI_ORG:-scoobyjava-org}
      - PORT=9033
      - PROMETHEUS_URL=http://prometheus:9090
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9033/health"]

  # Health Aggregator (Port 8080)
  health-aggregator:
    image: ${DOCKER_REGISTRY}/sophia-health-aggregator:${IMAGE_TAG}
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - PULUMI_ORG=${PULUMI_ORG:-scoobyjava-org}
      - PORT=8080
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]

  # Secret Rotator (Port 9034)
  secret-rotator:
    image: ${DOCKER_REGISTRY}/sophia-secret-rotator:${IMAGE_TAG}
    ports:
      - "9034:9034"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - PULUMI_ORG=${PULUMI_ORG:-scoobyjava-org}
      - PORT=9034
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9034/health"]

  # Secret Health Checker (Port 9035)
  secret-health-checker:
    image: ${DOCKER_REGISTRY}/sophia-secret-health-checker:${IMAGE_TAG}
    ports:
      - "9035:9035"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - PULUMI_ORG=${PULUMI_ORG:-scoobyjava-org}
      - PORT=9035
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9035/health"]

  # DCGM GPU Metrics Exporter (Port 9400)
  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.3.0-3.2.0-ubuntu22.04
    ports:
      - "9400:9400"
    environment:
      - DCGM_EXPORTER_LISTEN=:9400
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9400/metrics"]

  # Grafana Dashboards (Port 3000)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana-provisioning:/etc/grafana/provisioning:ro
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]

  # Promtail Log Collection (Port 9080)
  promtail:
    image: grafana/promtail:latest
    ports:
      - "9080:9080"
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./configs/promtail-config.yaml:/etc/promtail/config.yml:ro
    networks:
      - sophia-private
    deploy:
      <<: *default-deploy
      mode: global
    command: -config.file=/etc/promtail/config.yml

  # Jenkins CI/CD (Port 8081)
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8081:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--prefix=/jenkins
    volumes:
      - jenkins-data:/var/jenkins_home
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:8080/jenkins/login"]

  # SonarQube Code Quality (Port 9000)
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=${SONAR_PASSWORD:-sonar2025}
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]

  # Docker Registry (Port 5000)
  docker-registry:
    image: registry:2
    ports:
      - "5000:5000"
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
    volumes:
      - registry-data:/var/lib/registry
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:5000/v2/"]

  # MailHog Email Testing (Port 8025/1025)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - sophia-network
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025"]

  # PostgreSQL Dev Database (Port 5432)
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sophia_dev
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sophia2025}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./configs/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "pg_isready -U sophia"]

  # Redis Dev Cache (Port 6379)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sophia-private
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "redis-cli", "ping"]

  # Nginx Dev Proxy (Port 80)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./configs/ssl:/etc/nginx/ssl:ro
    networks:
      - sophia-network
      - sophia-public
    deploy:
      <<: *default-deploy
      replicas: 1
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://localhost/health"]

networks:
  sophia-network:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24

  sophia-public:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.2.0/24

  sophia-private:
    driver: overlay
    attachable: false
    ipam:
      driver: default
      config:
        - subnet: 10.0.3.0/24

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  grafana-data:
    driver: local
  jenkins-data:
    driver: local
  sonarqube-data:
    driver: local
  sonarqube-extensions:
    driver: local
  sonarqube-logs:
    driver: local
  registry-data:
    driver: local 