version: '3.8'

# Sophia AI Production Instance (RTX6000 - 104.171.202.103)
# Role: Core Platform Services & User Interface

x-default-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-default-resources: &default-resources
  limits:
    memory: 4G
  reservations:
    memory: 2G

x-default-deploy: &default-deploy
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 120s
  update_config:
    parallelism: 1
    delay: 10s
    failure_action: rollback
    monitor: 60s
  rollback_config:
    parallelism: 1
    delay: 10s
    failure_action: pause
    monitor: 60s

services:
  # Core FastAPI Backend
  sophia-backend:
    image: ${DOCKER_REGISTRY:-scoobyjava15}/sophia-ai:${IMAGE_TAG:-latest}
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=prod
      - PULUMI_ORG=scoobyjava-org
      - INSTANCE_NAME=production
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://sophia:sophia_password@postgres:5432/sophia_ai
      - MCP_GATEWAY_URL=http://mcp-gateway:8080
    deploy:
      <<: *default-deploy
      replicas: 3
      resources:
        limits:
          cpus: '3'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    depends_on:
      - postgres
      - redis
      - mcp-gateway
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Unified Chat Interface
  sophia-unified-chat:
    image: ${DOCKER_REGISTRY:-scoobyjava15}/sophia-ai-unified-chat:${IMAGE_TAG:-latest}
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=prod
      - BACKEND_URL=http://sophia-backend:8000
      - WEBSOCKET_URL=ws://sophia-backend:8000/ws
      - REDIS_URL=redis://redis:6379
    deploy:
      <<: *default-deploy
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      - sophia-backend
      - redis
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Unified Dashboard
  sophia-dashboard:
    image: ${DOCKER_REGISTRY:-scoobyjava15}/sophia-ai-dashboard:${IMAGE_TAG:-latest}
    ports:
      - "3000:3000"
    environment:
      - ENVIRONMENT=prod
      - REACT_APP_API_URL=http://sophia-backend:8000
      - REACT_APP_WEBSOCKET_URL=ws://sophia-backend:8000/ws
      - REACT_APP_CHAT_URL=http://sophia-unified-chat:8001
      - REACT_APP_MCP_GATEWAY_URL=http://mcp-gateway:8080
    deploy:
      <<: *default-deploy
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      - sophia-backend
      - sophia-unified-chat
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Gateway
  mcp-gateway:
    image: ${DOCKER_REGISTRY:-scoobyjava15}/sophia-mcp-gateway:${IMAGE_TAG:-latest}
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=prod
      - PULUMI_ORG=scoobyjava-org
      - AI_CORE_URL=http://192.222.58.232:9000
      - MCP_ORCHESTRATOR_URL=http://104.171.202.117:9000
      - DATA_PIPELINE_URL=http://104.171.202.134:9000
      - REDIS_URL=redis://redis:6379
    deploy:
      <<: *default-deploy
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      - redis
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/ssl:/etc/nginx/ssl:ro
    deploy:
      <<: *default-deploy
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - sophia-backend
      - sophia-unified-chat
      - sophia-dashboard
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Primary PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sophia_ai
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=sophia_password
    volumes:
      - sophia-postgres-data:/var/lib/postgresql/data
      - ./configs/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    deploy:
      <<: *default-deploy
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - sophia-network
      - sophia-private
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache Layer
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - sophia-redis-data:/data
    deploy:
      <<: *default-deploy
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - sophia-network
      - sophia-private
    logging: *default-logging
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Discovery (Traefik)
  traefik:
    image: traefik:v3.0
    ports:
      - "8090:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=admin@sophia-ai.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-ssl-data:/letsencrypt
    deploy:
      <<: *default-deploy
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - sophia-network
      - sophia-public
    logging: *default-logging
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  sophia-network:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24
  sophia-public:
    driver: overlay
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.2.0/24
  sophia-private:
    driver: overlay
    attachable: false
    ipam:
      driver: default
      config:
        - subnet: 10.0.3.0/24

volumes:
  sophia-postgres-data:
    driver: local
  sophia-redis-data:
    driver: local
  traefik-ssl-data:
    driver: local