# Sophia AI MCP Servers - Helm Values
# Deployment Target: Lambda Labs Cloud Kubernetes (104.171.202.117)

global:
  lambdaLabsHost: "104.171.202.117"
  environment: "prod"
  dockerRegistry: "docker.io/scoobyjava15"
  imagePullPolicy: IfNotPresent
  nodeSelector:
    kubernetes.io/hostname: lambda-labs-cloud
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000

# Namespace configuration
namespace:
  create: true
  name: sophia-mcp

# Central services
centralServices:
  orchestration:
    enabled: true
    name: mcp-orchestration
    port: 8080
    replicas: 2
    image: "sophia-mcp-orchestration:latest"
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
  
  registry:
    enabled: true
    name: registry-v2
    port: 8081
    replicas: 1
    image: "sophia-mcp-registry:latest"
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
  
  healthMonitor:
    enabled: true
    name: health-monitor
    port: 8082
    replicas: 1
    image: "sophia-mcp-health:latest"
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

# MCP Servers Configuration
servers:
  # TIER 1: PRIMARY SERVERS
  aiMemory:
    enabled: true
    name: ai-memory
    tier: PRIMARY
    port: 9000
    replicas: 2
    image: "sophia-mcp-ai-memory:latest"
    capabilities:
      - MEMORY
      - EMBEDDING
      - SEARCH
      - ANALYTICS
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"
    env:
      VECTOR_DIMS: "768"
      MAX_MEMORIES: "10000"
      CACHE_TTL: "3600"
  
  ELIMINATED:
    enabled: true
    name: ELIMINATED-unified
    tier: PRIMARY
    port: 9001
    replicas: 2
    image: "sophia-mcp-ELIMINATED:latest"
    capabilities:
      - ANALYTICS
      - EMBEDDING
      - SEARCH
      - COMPLETION
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"
    env:
      WAREHOUSE: "SOPHIA_AI_WH"
      DATABASE: "SOPHIA_AI"
      SCHEMA: "PROCESSED_AI"
  
  gong:
    enabled: true
    name: gong-v2
    tier: PRIMARY
    port: 9002
    replicas: 2
    image: "sophia-mcp-gong:latest"
    capabilities:
      - ANALYTICS
      - CRM
      - COMMUNICATION
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      SYNC_INTERVAL: "3600"
      BATCH_SIZE: "100"
  
  hubspot:
    enabled: true
    name: hubspot-unified
    tier: PRIMARY
    port: 9003
    replicas: 2
    image: "sophia-mcp-hubspot:latest"
    capabilities:
      - CRM
      - ANALYTICS
      - WORKFLOW
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      API_VERSION: "v3"
      SYNC_CONTACTS: "true"
      SYNC_DEALS: "true"
  
  slack:
    enabled: true
    name: slack-v2
    tier: PRIMARY
    port: 9004
    replicas: 2
    image: "sophia-mcp-slack:latest"
    capabilities:
      - COMMUNICATION
      - SEARCH
      - WORKFLOW
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      EVENTS_API: "true"
      SOCKET_MODE: "true"
      RATE_LIMIT: "20"
  
  # TIER 2: SECONDARY SERVERS
  github:
    enabled: true
    name: github-v2
    tier: SECONDARY
    port: 9005
    replicas: 1
    image: "sophia-mcp-github:latest"
    capabilities:
      - CODE_ANALYSIS
      - WORKFLOW
      - SEARCH
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      ORG: "ai-cherry"
      GRAPHQL_ENABLED: "true"
  
  linear:
    enabled: true
    name: linear-v2
    tier: SECONDARY
    port: 9006
    replicas: 1
    image: "sophia-mcp-linear:latest"
    capabilities:
      - WORKFLOW
      - ANALYTICS
      - SEARCH
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      SYNC_INTERVAL: "1800"
      GRAPHQL_ENDPOINT: "https://api.linear.app/graphql"
  
  asana:
    enabled: true
    name: asana-v2
    tier: SECONDARY
    port: 9007
    replicas: 1
    image: "sophia-mcp-asana:latest"
    capabilities:
      - WORKFLOW
      - ANALYTICS
      - SEARCH
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      SYNC_TASKS: "true"
      SYNC_PROJECTS: "true"
  
  notion:
    enabled: true
    name: notion-v2
    tier: SECONDARY
    port: 9008
    replicas: 1
    image: "sophia-mcp-notion:latest"
    capabilities:
      - WORKFLOW
      - SEARCH
      - MEMORY
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      API_VERSION: "2022-06-28"
      SYNC_INTERVAL: "1800"
  
  codacy:
    enabled: true
    name: codacy-production
    tier: SECONDARY
    port: 3008
    replicas: 1
    image: "sophia-mcp-codacy:latest"
    capabilities:
      - CODE_ANALYSIS
      - ANALYTICS
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      SECURITY_SCANNING: "true"
      COMPLEXITY_ANALYSIS: "true"
      REAL_TIME: "true"
  
  # TIER 3: TERTIARY SERVERS
  figma:
    enabled: true
    name: figma-context
    tier: TERTIARY
    port: 9009
    replicas: 1
    image: "sophia-mcp-figma:latest"
    capabilities:
      - WORKFLOW
      - ANALYTICS
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    env:
      DESIGN_TO_CODE: "true"
  
  lambdaLabsCli:
    enabled: true
    name: lambda-labs-cli
    tier: TERTIARY
    port: 9010
    replicas: 1
    image: "sophia-mcp-lambda-cli:latest"
    capabilities:
      - INFRASTRUCTURE
      - ANALYTICS
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    env:
      COST_OPTIMIZATION: "true"
      INSTANCE_MANAGEMENT: "true"
  
  uiUxAgent:
    enabled: true
    name: ui-ux-agent
    tier: TERTIARY
    port: 9011
    replicas: 1
    image: "sophia-mcp-ui-ux:latest"
    capabilities:
      - WORKFLOW
      - CODE_ANALYSIS
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    env:
      COMPONENT_GENERATION: "true"
      ACCESSIBILITY_CHECK: "true"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: mcp.sophia-ai.lambda-labs.cloud
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mcp-tls
      hosts:
        - mcp.sophia-ai.lambda-labs.cloud

# Monitoring stack
monitoring:
  prometheus:
    enabled: true
    retention: 30d
    scrapeInterval: 15s
  
  grafana:
    enabled: true
    adminPassword: changeme  # Change in production
    dashboards:
      - mcp-overview
      - server-health
      - performance-metrics
  
  alerts:
    enabled: true
    slackWebhook: ""  # Set via secret
    rules:
      - name: mcp-server-down
        expr: up{job="mcp-server"} == 0
        for: 5m
        severity: critical
      - name: high-memory-usage
        expr: container_memory_usage_bytes > 0.9 * container_spec_memory_limit_bytes
        for: 10m
        severity: warning

# Backup and disaster recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 7  # Keep 7 days of backups
  storageClass: lambda-labs-ssd

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80 