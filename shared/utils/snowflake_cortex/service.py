"""Main Lambda GPU service with dual-mode support."""
    "cortex_requests_total", "Total Cortex requests", ["mode", "task_type", "model"
    "cortex_errors_total", "Total Cortex errors", ["mode", "task_type", "error_type"
    "cortex_latency_seconds", "Cortex request latency", ["mode", "task_type"
CORTEX_CACHE_HITS = Counter("cortex_cache_hits_total", "Cache hits", ["task_type"
    """Unified Lambda GPU service with dual-mode support."""
        """
        """
        """Load configuration from Pulumi ESC."""
            "user": get_config_value("qdrant_user"
            "password": get_config_value("postgres_password"
            "account": get_config_value("postgres_host"
            "warehouse": get_config_value("postgres_database"
            "database": get_config_value("postgres_database"
            "schema": get_config_value("postgres_schema"
            "role": get_config_value("qdrant_role", "SYSADMIN"
            "pat_token": get_config_value("qdrant_mcp_pat"
            "mcp_url": get_config_value("qdrant_mcp_url"
        """Auto-determine the best mode based on available credentials."""
        env_mode = os.getenv("CORTEX_MODE"
        if self._mcp_config.get("pat_token"
"password"
                "No valid credentials found for Cortex operations"
                    "pat_available": bool(self._mcp_config.get("pat_token"
                    "user_pwd_available"
        """Initialize the service components."""
                    base_url=self._mcp_config.get("mcp_url"
                    pat_token=self._mcp_config.get("pat_token"
        """Close all connections and resources."""
        """Context manager for service lifecycle."""
        self, text: str, model: str = "e5-base-v2"
        """
        """
        """
        """
        """Analyze sentiment of text."""
        """Summarize text."""
            prompt = f"Summarize the following text in {max_length} characters or less:\n\n{text}"
        """Execute Cortex Search (MCP mode only)."""
                "Cortex Search is only available in MCP mode"
                details={"current_mode"
        """Execute Cortex Analyst query (MCP mode only)."""
                "Cortex Analyst is only available in MCP mode"
                details={"current_mode"
        """Get current operation mode."""
        """Check if service is initialized."""