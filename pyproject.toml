[project]
name = "sophia-ai"
version = "2.1.0"
description = "Sophia AI - Enterprise AI Orchestration Platform with Unified FastAPI"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "Proprietary"}
authors = [
    {name = "Sophia AI Team", email = "team@sophia-ai.com"}
]
keywords = ["ai", "orchestration", "fastapi", "enterprise", "mcp"]

dependencies = [
    # Core FastAPI and Web Framework
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "starlette>=0.37.2,<0.39.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.6.1",
    "python-multipart>=0.0.18",
    "python-jose[cryptography]>=3.3.0",
    "pyjwt>=2.8.0",
    "passlib>=1.7.4",
    "bcrypt>=4.1.2",
    "jinja2>=3.1.0",
    "orjson>=3.9.0",
    
    # Async and HTTP
    "aiohttp>=3.9.1",
    "aiofiles>=24.1.0",
    "aiodns>=3.1.1",
    "httpx>=0.28.1",
    "anyio>=4.0.0",
    "uvloop>=0.21.0",
    "websockets>=14.1",
    "sse-starlette>=1.6.5",
    "httpx-sse>=0.4.0",
    
    # Database and Storage
    "sqlalchemy>=2.0.23",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "aioredis>=2.0.1",
    "redis>=5.0.1",
    "snowflake-connector-python>=3.6.0",
    "snowflake-sqlalchemy>=1.7.5",
    
    # AI and ML
    "openai>=1.6.1",
    "anthropic>=0.25.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "sentence-transformers>=2.2.2",
    "transformers>=4.36.2",
    "torch>=2.1.2",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "scikit-learn>=1.3.2",
    "faiss-cpu>=1.7.4",
    
    # Vector Databases
    "pinecone-client>=2.2.4",
    "weaviate-client>=3.25.3",
    "chromadb>=0.4.18",
    
    # MCP and Integration
    "mcp>=0.5.0",
    "fastmcp>=0.1.0",
    
    # Business Integrations
    "hubspot-api-client>=9.0.0",
    "slack-sdk>=3.25.0",
    "notion-client>=2.2.1",
    
    # Cloud and Infrastructure
    "boto3>=1.34.0",
    "azure-storage-blob>=12.19.0",
    "google-cloud-storage>=2.10.0",
    
    # Utilities
    "click>=8.1.7",
    "typer>=0.9.0",
    "rich>=13.9.4",
    "pyyaml>=6.0",
    "tomlkit>=0.12.0",
    "python-dotenv>=1.0.1",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "structlog>=24.4.0",
    "sentry-sdk>=1.38.0",
    
    # Security
    "cryptography>=45.0.5",
    "certifi>=2025.6.15",
    
    # Task Queue and Background Processing
    "celery>=5.3.4",
    "apscheduler>=3.10.4",
    "schedule>=1.2.0",
    
    # Monitoring and Performance
    "prometheus-client>=0.19.0",
    "psutil>=5.9.6",
    "memory-profiler>=0.61.0",
    
    # Document Processing
    "python-docx>=1.1.0",
    "python-pptx>=0.6.23",
    "beautifulsoup4>=4.12.0",
    "markdownify>=0.11.6",
    "readability>=0.3.1",
    
    # Development and Testing Support
    "watchdog>=3.0.0",
    "joblib>=1.3.2",
    "tqdm>=4.66.1",
    "setuptools>=80.9.0",
    "wheel>=0.45.1",
    "pip>=25.1.1",
]

[project.optional-dependencies]
dev = [
    "bandit>=1.7.5",
    "black>=24.10.0",
    "coverage>=7.3.2",
    "flake8>=6.1.0",
    "httpx>=0.28.1",
    "ipython>=8.18.1",
    "isort>=5.13.2",
    "jupyter>=1.0.0",
    "mypy>=1.8.0",
    "notebook>=7.0.6",
    "pre-commit>=3.6.0",
    "pylint>=3.0.3",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.8.4",
    "safety>=2.3.5",
    "py-spy>=0.3.14",
    "line-profiler>=4.1.1",
    "locust>=2.17.0",
]

performance = [
    "uvloop>=0.21.0",
    "orjson>=3.9.0",
    "cchardet>=2.1.7",
    "eventlet>=0.33.3",
    "gevent>=23.9.1",
    "greenlet>=3.0.2",
]

ui = [
    "streamlit>=1.29.0",
    "gradio>=4.8.0",
    "matplotlib>=3.8.2",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.14",
    "sphinx>=7.2.6",
]

all = [
    "sophia-ai[dev]",
    "sophia-ai[performance]",
    "sophia-ai[ui]",
    "sophia-ai[docs]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "coverage>=7.4.0",
    "pre-commit>=3.6.0",
    "httpx>=0.26.0",
]

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.black]
line-length = 88
target-version = ["py312"]
include = "\\.pyi?$"
extend-exclude = """
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
  | external
)/
"""

[tool.ruff]
target-version = "py312"
line-length = 88
select = ["E", "F", "W", "I", "N", "B", "C4", "UP", "S", "A", "C90", "T20", "SIM", "ARG"]
ignore = ["E501", "B008", "B904"]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "external",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = [
    "external/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/external/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false