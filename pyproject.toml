[project]
name = "sophia-ai"
version = "2.1.0"
description = "Sophia AI - Enterprise AI Orchestration Platform with Unified FastAPI"
readme = "README.md"
requires-python = ">=3.12,<3.14"
keywords = [ "ai", "orchestration", "fastapi", "enterprise", "mcp",]
dependencies = [ "fastapi>=0.115.0", "uvicorn[standard]>=0.32.0", "starlette>=0.37.2", "pydantic>=2.5.0", "pydantic-settings>=2.6.1", "python-multipart>=0.0.18", "python-jose[cryptography]>=3.3.0", "pyjwt>=2.8.0", "passlib>=1.7.4", "bcrypt>=4.1.2", "jinja2>=3.1.0", "orjson>=3.9.0", "aiohttp>=3.9.1", "aiofiles>=24.1.0", "aiodns>=3.1.1", "httpx>=0.28.1", "anyio>=4.0.0", "uvloop>=0.21.0", "websockets>=14.1", "sse-starlette>=1.6.5", "httpx-sse>=0.4.0", "sqlalchemy>=2.0.23", "asyncpg>=0.29.0", "psycopg2-binary>=2.9.9", "aioredis>=2.0.1", "redis>=5.0.1", "snowflake-connector-python>=3.6.0", "snowflake-sqlalchemy>=1.7.5", "snowflake-snowpark-python>=1.6.1", "openai>=1.6.1", "anthropic>=0.25.0", "langchain>=0.1.0", "langchain-community>=0.0.10", "sentence-transformers>=2.2.2", "transformers>=4.36.2", "torch>=2.1.2", "numpy>=2.1.3", "pandas>=2.2.3", "pyarrow>=18.0.0,<19.0.0", "scikit-learn>=1.3.2", "faiss-cpu>=1.7.4", "pinecone-client>=2.2.4", "weaviate-client>=3.25.3", "chromadb>=0.4.18", "mcp>=0.5.0", "fastmcp>=0.1.0", "mcp-python>=0.1.0,<0.2.0", "hubspot-api-client>=9.0.0", "slack-sdk>=3.25.0", "notion-client>=2.2.1", "boto3>=1.34.0", "azure-storage-blob>=12.19.0", "google-cloud-storage>=2.10.0", "pulumi>=3.100.0", "pulumi-snowflake>=0.50.0", "click>=8.1.7", "typer>=0.9.0", "rich>=13.9.4", "pyyaml>=6.0", "tomlkit>=0.12.0", "python-dotenv>=1.0.1", "python-dateutil>=2.8.2", "pytz>=2023.3", "structlog>=24.4.0", "sentry-sdk>=1.38.0", "cryptography>=45.0.5", "certifi>=2025.6.15", "celery>=5.3.4", "apscheduler>=3.10.4", "schedule>=1.2.0", "prometheus-client>=0.19.0", "psutil>=5.9.6", "memory-profiler>=0.61.0", "python-docx>=1.1.0", "python-pptx>=0.6.23", "beautifulsoup4>=4.12.0", "markdownify>=0.11.6", "readability>=0.3.1", "watchdog>=3.0.0", "joblib>=1.3.2", "tqdm>=4.66.1", "setuptools>=80.9.0", "wheel>=0.45.1", "pip>=25.1.1", "asana>=5.2.0", "portkey-ai>=1.14.0", "loguru>=0.7.2", "langchain-core>=0.2.0", "langchain-openai>=0.1.7", "langchain-text-splitters>=0.2.0", "langgraph>=0.0.22", "langsmith>=0.1.56", "lxml>=5.2.2", "docker>=7.1.0", "pulumi>=3.100.0", "pulumi-snowflake>=0.50.0", "mcp-python>=0.1.0,<0.2.0",]
[[project.authors]]
name = "Sophia AI Team"
email = "team@sophia-ai.com"

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[dependency-groups]
dev = [ "locust>=2.37.11",]

[project.license]
text = "Proprietary"

[project.optional-dependencies]
dev = [ "pytest>=8.0.0", "pytest-asyncio>=0.23.0", "pytest-cov>=4.1.0", "ruff>=0.3.0", "black>=24.0.0", "mypy>=1.8.0", "pre-commit>=3.6.0", "pip-audit>=2.7.0", "safety>=3.0.0", "bandit>=1.7.5", "flake8>=6.1.0", "httpx>=0.28.1", "ipython>=8.18.1", "isort>=5.13.2", "jupyter>=1.0.0", "mypy>=1.8.0", "notebook>=7.0.6", "pre-commit>=3.6.0", "pylint>=3.0.3", "pytest>=8.3.4", "pytest-asyncio>=0.24.0", "pytest-cov>=4.1.0", "safety>=2.3.5", "py-spy>=0.3.14", "line-profiler>=4.1.1", "locust>=2.17.0", "aioresponses>=0.7.6",]
performance = [ "uvloop>=0.21.0", "orjson>=3.9.0", "eventlet>=0.33.3", "gevent>=23.9.1", "greenlet>=3.0.2", "chardet>=5.0.0",]
ui = [ "streamlit>=1.29.0", "gradio>=4.8.0", "matplotlib>=3.8.2", "seaborn>=0.13.0", "plotly>=5.17.0",]
docs = [ "mkdocs>=1.5.3", "mkdocs-material>=9.4.14", "sphinx>=7.2.6",]
security = [ "safety>=2.3.5", "pip-audit>=2.0",]
all = [ "sophia-ai[dev]", "sophia-ai[performance]", "sophia-ai[ui]", "sophia-ai[docs]",]
enhanced-search = [ "playwright>=1.40.0", "beautifulsoup4>=4.12.0", "selenium>=4.15.0", "aiohttp>=3.9.1", "requests>=2.31.0",]
browser = [ "playwright>=1.40.0", "selenium>=4.15.0",]
ai-core = [ "openai>=1.6.1", "anthropic>=0.25.0", "sentence-transformers>=2.2.2",]

[tool.uv]
dev-dependencies = [ "pytest>=8.0.0", "pytest-asyncio>=0.23.0", "pytest-cov>=4.1.0", "black>=24.0.0", "ruff>=0.1.0", "mypy>=1.8.0", "coverage>=7.4.0", "pre-commit>=3.6.0", "httpx>=0.26.0", "aioresponses>=0.7.6",]

[tool.black]
line-length = 88
target-version = [ "py312",]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n  | external\n)/\n"

[tool.ruff]
target-version = "py312"
exclude = [ ".git", ".venv", "venv", "__pycache__", "build", "dist", ".env", "node_modules", "migrations", "*.egg-info", ".mypy_cache", ".pytest_cache", ".ruff_cache", "htmlcov", "site-packages", "test_env", "external/", "external_backup*/",]
line-length = 88

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = [ "external/", "build/", "dist/",]

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "B", "C4", "UP", "ARG", "SIM", "PL", "RUF", "S", "N", "ASYNC", "TD", "FIX", "ERA", "PGH", "TRY", "PERF",]
extend-select = [ "TID",]
ignore = [ "E501", "E741", "B008", "B904", "S101", "S104", "S105", "S106", "S301", "S311", "S603", "S607", "PLR0913", "PLR2004", "TRY003", "TD002", "TD003", "PGH003", "RUF012", "UP007", "N818",]
fixable = [ "ALL",]
unfixable = []

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = [ "tests",]
pythonpath = [ ".",]
asyncio_mode = "auto"

[tool.coverage.run]
source = [ "api", "core", "domain", "infrastructure", "shared",]
omit = [ "*/tests/*", "*/test_*", "*/__pycache__/*", "*/external/*",]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.sophia-ai.python-compatibility]
recommended = "3.12"
tested = [ "3.12", "3.13",]
note = "Python 3.12 recommended for production"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [ "F401", "F403",]
"tests/*" = [ "S101", "PLR2004", "FIX002",]
"scripts/*" = [ "T201", "S603",]
"migrations/*" = [ "E501",]

[tool.ruff.flake8-tidy-imports.banned-api."backend._deprecated"]
msg = "Import from deprecated quarantine!"

[tool.hatch.build.targets.wheel]
packages = [ "api", "core", "domain", "infrastructure", "shared",]
