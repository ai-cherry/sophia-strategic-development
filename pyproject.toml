[project]
name = "sophia-ai"
version = "2.1.0"
description = "Sophia AI - Enterprise AI Orchestration Platform"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "Proprietary"}
authors = [{name = "Sophia AI Team", email = "team@sophia-ai.com"}]

# Core dependencies only - minimal set for production
dependencies = [
    # Core Framework
    "fastapi==0.115.0",
    "uvicorn[standard]==0.32.0",
    "redis==5.0.4",
    "snowflake-connector-python==3.16.0",
    "pydantic==2.7.0",
    "pydantic-settings==2.6.1",
    
    # Essential utilities
    "python-dotenv==1.0.1",
    "structlog==24.4.0",
    "httpx==0.28.1",
    "aiohttp==3.11.10",
    "orjson==3.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# UV dependency groups
[dependency-groups]
# Core dependencies for MCP servers
mcp-servers = [
    "websockets>=14.0",
    "sse-starlette>=1.6.0",
    "aiofiles>=24.0.0",
]

# AI and ML dependencies
ai-enhanced = [
    "openai>=1.30.0",
    "anthropic>=0.25.0",
    "langchain>=0.2.0",
    "langchain-community>=0.2.0",
    "langchain-core>=0.2.0",
    "langchain-openai>=0.1.0",
    "sentence-transformers>=2.2.0",
    "transformers>=4.36.0",
    "torch>=2.1.0",
    "numpy>=1.24.0",
    "pandas>=2.2.0",
    "scikit-learn>=1.3.0",
]

# Workflow automation dependencies
# NOTE: Temporarily disabled due to version conflicts with websockets
# automation = [
#     # "temporal-sdk==1.5.0",  # Commented out - not available for Python 3.12+
#     "prefect>=2.14.0",
#     "celery>=5.3.0",
#     # Already included in core: "redis>=5.0.0",
# ]

# Business integrations
integrations = [
    "hubspot-api-client>=9.0.0",
    "slack-sdk>=3.25.0",
    "notion-client>=2.2.0",
    "asana>=5.2.0",
    "pulumi>=3.100.0",
    "pulumi-snowflake>=0.50.0",
]

# Development dependencies
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.4.0",
    "mypy>=1.10.0",
    "black>=24.4.0",
    "pre-commit>=3.6.0",
    "ipython>=8.18.0",
    "tomli>=2.0.0",
    "pip-audit>=2.7.0",
]

# Database and storage
data = [
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "snowflake-sqlalchemy>=1.7.0",
    "snowflake-snowpark-python>=1.6.0",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "sentry-sdk>=1.38.0",
]

# Security dependencies
security = [
    "cryptography>=45.0.0",
    "certifi>=2025.6.0",
    "passlib>=1.7.0",
    "bcrypt>=4.1.0",
    "pyjwt>=2.8.0",
]

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.uv]
# UV-specific configurations

[tool.hatch.build.targets.wheel]
packages = ["backend", "api", "core", "domain", "infrastructure", "shared", "mcp-servers"]
