# Sophia AI Research-Validated Multi-Stage Build
# Performance: 39x faster builds, 10-100x faster package management

FROM python:3.12-slim-bookworm AS builder

# Install UV package manager (10-100x faster than pip)
COPY --from=ghcr.io/astral-sh/uv:0.4.9 /uv /bin/uv

# Performance optimizations from research
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy
ENV UV_CACHE_DIR=/root/.cache/uv
ENV PYTHONPATH=/app
ENV PATH="/app/.venv/bin:$PATH"

WORKDIR /app

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install dependencies with Docker Build Cloud caching
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    uv sync --frozen --no-dev --compile-bytecode

# Production stage
FROM python:3.12-slim-bookworm AS production

# Security: non-root user
RUN groupadd --gid 1000 sophia && \
    useradd --uid 1000 --gid sophia --shell /bin/bash --create-home sophia

# Copy virtual environment from builder
COPY --from=builder --chown=sophia:sophia /app/.venv /app/.venv

# Set environment
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Copy application code
COPY --chown=sophia:sophia . .

# Switch to non-root user
USER sophia

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health')"

# Default command
CMD ["uvicorn", "backend.app.fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]
