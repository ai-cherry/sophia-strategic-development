apiVersion: v1
kind: Service
metadata:
  name: self-healing-orchestrator
  namespace: autonomous-agents
  labels:
    app: autonomous-agent
    component: self-healing-orchestrator
spec:
  selector:
    app: autonomous-agent
    component: self-healing-orchestrator
  ports:
  - name: api
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: lambda-labs-monitor
  namespace: autonomous-agents
  labels:
    app: autonomous-agent
    component: lambda-labs-monitor
spec:
  selector:
    app: autonomous-agent
    component: lambda-labs-monitor
  ports:
  - name: api
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: metrics
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: lambda-labs-autonomous
  namespace: autonomous-agents
  labels:
    app: autonomous-agent
    component: lambda-labs-autonomous
spec:
  selector:
    app: autonomous-agent
    component: lambda-labs-autonomous
  ports:
  - name: api
    port: 8082
    targetPort: 8082
    protocol: TCP
  - name: metrics
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-optimizer
  namespace: autonomous-agents
  labels:
    app: autonomous-agent
    component: qdrant-optimizer
spec:
  selector:
    app: autonomous-agent
    component: qdrant-optimizer
  ports:
  - name: api
    port: 8083
    targetPort: 8083
    protocol: TCP
  - name: metrics
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-exporter
  namespace: autonomous-agents
  labels:
    app: autonomous-agent
    component: prometheus-exporter
spec:
  selector:
    app: autonomous-agent
    component: prometheus-exporter
  ports:
  - name: api
    port: 8084
    targetPort: 8084
    protocol: TCP
  - name: metrics
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# Prometheus server service for scraping metrics
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: autonomous-agents
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
# Agent Dashboard service
apiVersion: v1
kind: Service
metadata:
  name: agent-dashboard
  namespace: autonomous-agents
  labels:
    app: agent-dashboard
spec:
  selector:
    app: sophia-frontend  # Assuming the dashboard runs on the main frontend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
