---
# üåê Sophia Intel Production Ingress - Final SSL/Domain Fix
# This fixes the certificate mismatch issue for api.sophia-intel.ai
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sophia-intel-production-ingress
  namespace: sophia-ai-prod
  labels:
    app: sophia-intel
    environment: production
    component: ingress
  annotations:
    # Use nginx ingress controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # SSL Certificate Management via cert-manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # Performance and security headers
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # CORS for API
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://sophia-intel.ai"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, Accept"
    
spec:
  # SSL/TLS Configuration
  tls:
  - hosts:
    - sophia-intel.ai
    - api.sophia-intel.ai
    - app.sophia-intel.ai
    - ws.sophia-intel.ai
    secretName: sophia-intel-production-tls
  
  # Routing Rules
  rules:
  # Main frontend domain
  - host: sophia-intel.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sophia-frontend-service
            port:
              number: 80
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: sophia-backend-service
            port:
              number: 8000
  
  # API domain
  - host: api.sophia-intel.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sophia-backend-service
            port:
              number: 8000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: sophia-backend-service
            port:
              number: 8000
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: sophia-backend-service
            port:
              number: 8000
  
  # App subdomain (if needed)
  - host: app.sophia-intel.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sophia-frontend-service
            port:
              number: 80

---
# üîê SSL Certificate for sophia-intel.ai domains
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sophia-intel-production-cert
  namespace: sophia-ai-prod
  labels:
    app: sophia-intel
    environment: production
spec:
  secretName: sophia-intel-production-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
    group: cert-manager.io
  dnsNames:
  - sophia-intel.ai
  - api.sophia-intel.ai
  - app.sophia-intel.ai
  - ws.sophia-intel.ai
  usages:
  - digital signature
  - key encipherment

---
# üèóÔ∏è ClusterIssuer for Let's Encrypt (if not exists)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app: sophia-intel
    component: ssl
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: admin@sophia-intel.ai
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx
          podTemplate:
            spec:
              nodeSelector:
                "kubernetes.io/os": linux 