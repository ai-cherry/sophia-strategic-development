---
# Phase 6: Grafana Dashboard Configuration
# Comprehensive monitoring for Sophia AI
# Date: July 12, 2025

apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-ai-dashboards
  namespace: monitoring
data:
  sophia-overview.json: |
    {
      "dashboard": {
        "title": "Sophia AI - System Overview",
        "uid": "sophia-overview",
        "timezone": "browser",
        "refresh": "10s",
        "panels": [
          {
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
            "id": 1,
            "title": "Request Rate (QPS)",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=\"sophia-orchestrator\"}[1m]))",
                "legendFormat": "Orchestrator"
              },
              {
                "expr": "sum(rate(http_requests_total{job=\"enhanced-chat-v4\"}[1m]))",
                "legendFormat": "Chat Service"
              }
            ]
          },
          {
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
            "id": 2,
            "title": "Response Time (P95)",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",
                "legendFormat": "P95 Latency"
              }
            ]
          },
          {
            "gridPos": {"h": 8, "w": 8, "x": 0, "y": 8},
            "id": 3,
            "title": "Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m]))",
                "legendFormat": "Error Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.001},
                    {"color": "red", "value": 0.005}
                  ]
                }
              }
            }
          },
          {
            "gridPos": {"h": 8, "w": 8, "x": 8, "y": 8},
            "id": 4,
            "title": "Active Pods",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(kube_pod_status_ready{namespace=\"sophia-ai-prod\",condition=\"true\"})",
                "legendFormat": "Ready Pods"
              }
            ]
          },
          {
            "gridPos": {"h": 8, "w": 8, "x": 16, "y": 8},
            "id": 5,
            "title": "Memory Usage",
            "type": "gauge",
            "targets": [
              {
                "expr": "sum(container_memory_usage_bytes{namespace=\"sophia-ai-prod\"}) / sum(kube_node_status_allocatable{resource=\"memory\"})",
                "legendFormat": "Memory %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "max": 1,
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.7},
                    {"color": "red", "value": 0.9}
                  ]
                }
              }
            }
          }
        ]
      }
    }
  
  sophia-mcp-servers.json: |
    {
      "dashboard": {
        "title": "Sophia AI - MCP Servers Health",
        "uid": "sophia-mcp",
        "timezone": "browser",
        "refresh": "30s",
        "panels": [
          {
            "gridPos": {"h": 10, "w": 24, "x": 0, "y": 0},
            "id": 1,
            "title": "MCP Server Health Status",
            "type": "table",
            "targets": [
              {
                "expr": "up{job=~\"mcp-.*\"}",
                "format": "table",
                "instant": true
              }
            ],
            "transformations": [
              {
                "id": "organize",
                "options": {
                  "excludeByName": {},
                  "indexByName": {},
                  "renameByName": {
                    "job": "Server",
                    "Value": "Status"
                  }
                }
              }
            ]
          },
          {
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 10},
            "id": 2,
            "title": "MCP Request Latency",
            "type": "heatmap",
            "targets": [
              {
                "expr": "sum(rate(mcp_request_duration_seconds_bucket[5m])) by (le, server)",
                "format": "heatmap"
              }
            ]
          },
          {
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 10},
            "id": 3,
            "title": "MCP Error Rates",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(mcp_errors_total[5m])) by (server)",
                "legendFormat": "{{server}}"
              }
            ]
          }
        ]
      }
    }
  
  sophia-cache-performance.json: |
    {
      "dashboard": {
        "title": "Sophia AI - Cache Performance",
        "uid": "sophia-cache",
        "timezone": "browser",
        "refresh": "10s",
        "panels": [
          {
            "gridPos": {"h": 8, "w": 8, "x": 0, "y": 0},
            "id": 1,
            "title": "L1 Cache Hit Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "cache_hits_total{tier=\"L1\"} / (cache_hits_total{tier=\"L1\"} + cache_misses_total{tier=\"L1\"})",
                "legendFormat": "L1 Hit Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 0.8},
                    {"color": "green", "value": 0.9}
                  ]
                }
              }
            }
          },
          {
            "gridPos": {"h": 8, "w": 8, "x": 8, "y": 0},
            "id": 2,
            "title": "L2 Cache Hit Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "cache_hits_total{tier=\"L2\"} / (cache_hits_total{tier=\"L2\"} + cache_misses_total{tier=\"L2\"})",
                "legendFormat": "L2 Hit Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 0.7},
                    {"color": "green", "value": 0.85}
                  ]
                }
              }
            }
          },
          {
            "gridPos": {"h": 8, "w": 8, "x": 16, "y": 0},
            "id": 3,
            "title": "Overall Hit Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(cache_hits_total) / sum(cache_hits_total + cache_misses_total)",
                "legendFormat": "Overall"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 0.85},
                    {"color": "green", "value": 0.92}
                  ]
                }
              }
            }
          },
          {
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8},
            "id": 4,
            "title": "Cache Latency by Tier",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(cache_latency_seconds_bucket[5m])) by (le, tier))",
                "legendFormat": "{{tier}} P95"
              }
            ]
          }
        ]
      }
    }

---
# Dashboard Provider ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
  namespace: monitoring
data:
  provider.yaml: |
    apiVersion: 1
    providers:
    - name: 'sophia-ai'
      orgId: 1
      folder: 'Sophia AI'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /etc/grafana/dashboards/sophia-ai 