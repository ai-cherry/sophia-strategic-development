# AI Assistant Rules for Sophia AI Platform
# Universal Virtual Environment Consistency Guide

## üêç CRITICAL: VIRTUAL ENVIRONMENT SETUP

**FOR ALL AI CODING TOOLS (Cursor, Cline, GitHub Copilot, etc.)**

### üö® MANDATORY FIRST STEP
```bash
source activate_sophia_env.sh
```

## üéØ UNIVERSAL ENVIRONMENT REQUIREMENTS

### **‚úÖ CORRECT ENVIRONMENT SETUP:**
1. **Shell prompt shows (.venv)**
2. **Python version: 3.11.6**
3. **Python location: /Users/lynnmusil/sophia-main-2/.venv/bin/python**
4. **VIRTUAL_ENV variable set correctly**

### **‚ùå INCORRECT SETUP (NEEDS FIXING):**
1. **Missing (.venv) in prompt**
2. **Python version: 3.9.6 (system Python)**
3. **Python aliased to /usr/bin/python3**
4. **Import errors or package not found**

## üîß VERIFICATION COMMANDS

### **Environment Status Check:**
```bash
# 1. Check virtual environment
echo $VIRTUAL_ENV
# Expected: /Users/lynnmusil/sophia-main-2/.venv

# 2. Check Python version
python --version
# Expected: Python 3.11.6

# 3. Check Python location
which python
# Expected: /Users/lynnmusil/sophia-main-2/.venv/bin/python

# 4. Quick verification
check-env
# Expected: ‚úÖ Using: /Users/lynnmusil/sophia-main-2/.venv/bin/python
```

### **Package Availability Test:**
```bash
python -c "import fastapi; print('‚úÖ FastAPI available')"
python -c "import uvicorn; print('‚úÖ Uvicorn available')"
python -c "import sqlalchemy; print('‚úÖ SQLAlchemy available')"
```

## üöÄ AVAILABLE APPLICATIONS & SHORTCUTS

### **FastAPI Applications (All aligned and working):**
| Shortcut | Application | Port | File |
|----------|-------------|------|------|
| `run-working` | Working FastAPI | 8000 | `backend/app/working_fastapi.py` |
| `run-simple` | Simple FastAPI | 8001 | `backend/app/simple_fastapi.py` |
| `run-minimal` | Minimal FastAPI | 8002 | `backend/app/minimal_fastapi.py` |
| `run-distributed` | Distributed API | 8003 | `api/main.py` |

### **Environment Management:**
```bash
check-env          # Verify Python environment
source activate_sophia_env.sh  # Reactivate if needed
```

## üõ†Ô∏è TROUBLESHOOTING GUIDE

### **Issue**: Import errors or "Module not found"
**Solution**:
```bash
source activate_sophia_env.sh
check-env
```

### **Issue**: Wrong Python version (3.9.6 instead of 3.11.6)
**Solution**:
```bash
# Remove conflicting alias
unalias python 2>/dev/null || true
source activate_sophia_env.sh
```

### **Issue**: FastAPI applications won't start
**Solution**:
```bash
# Ensure environment is active
source activate_sophia_env.sh
# Then use appropriate shortcut
run-working  # or run-simple, run-minimal, run-distributed
```

### **Issue**: Shell errors between AI tools
**Solution**:
```bash
# Always reactivate when switching tools
source activate_sophia_env.sh
```

### **Issue**: Packages not installing correctly
**Solution**:
```bash
# Verify environment first
source activate_sophia_env.sh
check-env
# Then install
pip install package_name
```

## üìã AI TOOL SPECIFIC NOTES

### **Cursor AI:**
- Rules also in `.cursorrules` and `.cursor-rules`
- Always start sessions with environment activation
- Use shortcuts for FastAPI applications

### **Cline:**
- Specific rules in `.cline-rules`
- Must activate in terminal before any operations
- Check for (.venv) in prompt

### **GitHub Copilot:**
- Works with any correctly activated environment
- Ensure VIRTUAL_ENV variable is set
- Use `python` command, not `python3`

### **Other AI Assistants:**
- Follow same activation pattern
- Verify environment with `check-env`
- Use provided shortcuts

## üéØ BEST PRACTICES FOR ALL AI TOOLS

### **DO:**
- ‚úÖ **Always** start with `source activate_sophia_env.sh`
- ‚úÖ **Verify** (.venv) appears in shell prompt
- ‚úÖ **Use** `python` command (never `python3`)
- ‚úÖ **Check** environment with `check-env` when in doubt
- ‚úÖ **Use** provided shortcuts for applications

### **DON'T:**
- ‚ùå **Never** skip virtual environment activation
- ‚ùå **Never** use system Python (`/usr/bin/python3`)
- ‚ùå **Never** install packages without activated environment
- ‚ùå **Never** ignore environment warnings
- ‚ùå **Never** use `python3` command directly

## üåü SUCCESS INDICATORS

**Your AI assistant session is correctly configured when:**

1. **Shell prompt shows:**
   ```
   (.venv) lynnmusil@PR901-LMUSIL sophia-main-2 %
   ```

2. **Environment check passes:**
   ```bash
   $ check-env
   ‚úÖ Using: /Users/lynnmusil/sophia-main-2/.venv/bin/python
   ```

3. **Package imports work:**
   ```bash
   $ python -c "import fastapi; print('Ready!')"
   Ready!
   ```

4. **FastAPI shortcuts work:**
   ```bash
   $ run-minimal &
   # Server starts successfully on port 8002
   ```

## üìû EMERGENCY RECOVERY

**If environment is completely broken:**
```bash
# 1. Navigate to project
cd /Users/lynnmusil/sophia-main-2

# 2. Force reactivation
source .venv/bin/activate
source activate_sophia_env.sh

# 3. Verify recovery
check-env

# 4. Test functionality
python -c "import fastapi; print('‚úÖ Recovered!')"
```

## üìö DOCUMENTATION REFERENCES

- **Complete Guide**: `VIRTUAL_ENVIRONMENT_CONSISTENCY_GUIDE.md`
- **Environment Config**: `.sophia-env-config`
- **Cursor Rules**: `.cursorrules`
- **Cline Rules**: `.cline-rules`

## üéâ WHY THIS MATTERS

- **Eliminates shell errors** between AI tools
- **Ensures package consistency** across all operations
- **Prevents import conflicts** and missing dependencies
- **Maintains stable development environment**
- **Enables reliable FastAPI application deployment**
- **Provides consistent experience** across all AI assistants

**Remember: One activation script solves environment issues for ALL AI tools!**

---

**CRITICAL RULE**: When in doubt, run `source activate_sophia_env.sh` and `check-env` 