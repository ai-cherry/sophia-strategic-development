services:
  # Main Sophia AI Backend (Already Running Successfully)
  sophia-backend:
    build:
      context: .
      dockerfile: Dockerfile.containerized
    ports:
      - "8000:8000"
    environment:
      - SOPHIA_HOST=0.0.0.0
      - SOPHIA_PORT=8000
      - SOPHIA_RELOAD=false
      - PULUMI_ORG=scoobyjava-org
      - MCP_GATEWAY_URL=http://mcp-gateway:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    depends_on:
      - mcp-gateway
    networks:
      - sophia-network

  # Docker MCP Gateway (Single Gateway to All MCP Servers)
  mcp-gateway:
    image: mcp/gateway:latest
    ports:
      - "3000:3000"  # HTTP SSE transport
      - "8090:8090"  # Management interface
    environment:
      - MCP_PORT=3000
      - MCP_HOST=0.0.0.0
      - MCP_LOG_LEVEL=info
    volumes:
      - ./mcp-config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network

  # Official Pulumi MCP Server (From Docker MCP Catalog)
  pulumi-mcp:
    image: mcp/pulumi:latest
    environment:
      - PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN}
      - PULUMI_ORG=scoobyjava-org
      - MCP_TRANSPORT=sse
      - MCP_PORT=3001
    ports:
      - "3001:3001"
    volumes:
      - ./infrastructure:/app/infrastructure
      - ~/.pulumi:/root/.pulumi
    networks:
      - sophia-network
    restart: unless-stopped

  # GitHub MCP Server (From Docker MCP Catalog)
  github-mcp:
    image: mcp/github:latest
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - MCP_TRANSPORT=sse
      - MCP_PORT=3002
    ports:
      - "3002:3002"
    networks:
      - sophia-network
    restart: unless-stopped

  # Docker MCP Server (For Container Management)
  docker-mcp:
    image: mcp/docker:latest
    environment:
      - MCP_TRANSPORT=sse
      - MCP_PORT=3003
    ports:
      - "3003:3003"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sophia-network
    restart: unless-stopped

  # Business Intelligence MCP Servers
  slack-mcp:
    image: mcp/slack:latest
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - MCP_TRANSPORT=sse
      - MCP_PORT=3004
    ports:
      - "3004:3004"
    networks:
      - sophia-network
    restart: unless-stopped

  # Data Infrastructure MCP Servers
  postgres-mcp:
    image: mcp/postgres:latest
    environment:
      - POSTGRES_CONNECTION_STRING=postgresql://sophia:sophia2025@postgres:5432/sophia_ai
      - MCP_TRANSPORT=sse
      - MCP_PORT=3005
    ports:
      - "3005:3005"
    depends_on:
      - postgres
    networks:
      - sophia-network
    restart: unless-stopped

  # Core Infrastructure Services
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=sophia_ai
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=sophia2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - sophia-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass sophia2025
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sophia-network
    restart: unless-stopped

  # Monitoring Stack with MCP Integration
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sophia-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3006:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=sophia2025
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - sophia-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  sophia-network:
    driver: bridge 