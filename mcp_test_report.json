{
  "timestamp": "2025-07-04T19:46:27.249470",
  "summary": {
    "total_servers": 12,
    "healthy": 4,
    "not_running": 7,
    "unhealthy": 1
  },
  "lambda_labs": {
    "host": "165.1.69.44",
    "connected_servers": 0
  },
  "servers": {
    "ai_memory": {
      "port": 9001,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "snowflake_admin": {
      "port": 9020,
      "status": "healthy",
      "response_time_ms": 601.578950881958,
      "tools": null,
      "lambda_labs_connected": false,
      "error": null
    },
    "codacy": {
      "port": 3008,
      "status": "healthy",
      "response_time_ms": 520.9801197052002,
      "tools": null,
      "lambda_labs_connected": false,
      "error": null
    },
    "linear": {
      "port": 9004,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "github": {
      "port": 9103,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "asana": {
      "port": 9100,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "notion": {
      "port": 9005,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "ui_ux_agent": {
      "port": 9002,
      "status": "healthy",
      "response_time_ms": 254.26506996154785,
      "tools": null,
      "lambda_labs_connected": false,
      "error": null
    },
    "portkey_admin": {
      "port": 9013,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "lambda_labs_cli": {
      "port": 9020,
      "status": "healthy",
      "response_time_ms": 132.33613967895508,
      "tools": null,
      "lambda_labs_connected": false,
      "error": null
    },
    "snowflake_cortex": {
      "port": 9030,
      "status": "not_running",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "Port not in use"
    },
    "snowflake_unified": {
      "port": 9000,
      "status": "error",
      "response_time_ms": null,
      "tools": null,
      "lambda_labs_connected": false,
      "error": "200, message='Attempt to decode JSON with unexpected mimetype: text/html;charset=utf-8', url='http://localhost:9000/health'"
    }
  },
  "remediation": [
    {
      "server": "ai_memory",
      "issue": "not_running",
      "action": "start_server",
      "success": true,
      "error": null
    },
    {
      "server": "linear",
      "issue": "not_running",
      "action": "start_server",
      "success": false,
      "error": "Traceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/linear/linear_mcp_server.py\", line 1023, in <module>\n    asyncio.run(main())\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/runners.py\", line 194, in run\n    return runner.run(main)\n           ^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/runners.py\", line 118, in run\n    return self._loop.run_until_complete(task)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py\", line 686, in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/linear/linear_mcp_server.py\", line 991, in main\n    linear_server = LinearMCPServer()\n                    ^^^^^^^^^^^^^^^^^\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/linear/linear_mcp_server.py\", line 51, in __init__\n    raise ValueError(\"LINEAR_API_KEY environment variable is required\")\nValueError: LINEAR_API_KEY environment variable is required\n"
    },
    {
      "server": "github",
      "issue": "not_running",
      "action": "start_server",
      "success": true,
      "error": null
    },
    {
      "server": "asana",
      "issue": "not_running",
      "action": "start_server",
      "success": false,
      "error": "Traceback (most recent call last):\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/asana/asana_mcp_server.py\", line 758, in <module>\n    asyncio.run(main())\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/runners.py\", line 194, in run\n    return runner.run(main)\n           ^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/runners.py\", line 118, in run\n    return self._loop.run_until_complete(task)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py\", line 686, in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/asana/asana_mcp_server.py\", line 726, in main\n    asana_server = AsanaMCPServer()\n                   ^^^^^^^^^^^^^^^^\n  File \"/Users/lynnmusil/sophia-main/mcp-servers/asana/asana_mcp_server.py\", line 51, in __init__\n    raise ValueError(\"ASANA_ACCESS_TOKEN environment variable is required\")\nValueError: ASANA_ACCESS_TOKEN environment variable is required\n"
    },
    {
      "server": "notion",
      "issue": "not_running",
      "action": "start_server",
      "success": true,
      "error": null
    },
    {
      "server": "portkey_admin",
      "issue": "not_running",
      "action": "start_server",
      "success": true,
      "error": null
    },
    {
      "server": "snowflake_cortex",
      "issue": "not_running",
      "action": "start_server",
      "success": true,
      "error": null
    }
  ]
}
