from __future__ import annotations

from backend.services.unified_memory_service_primary import UnifiedMemoryService

"""
"""
"""
"""
    """Priority levels for coaching recommendations"""
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    """Categories of coaching recommendations"""
    SENTIMENT_IMPROVEMENT = "sentiment_improvement"
    TALK_RATIO_BALANCE = "talk_ratio_balance"
    DISCOVERY_SKILLS = "discovery_skills"
    CLOSING_TECHNIQUES = "closing_techniques"
    OBJECTION_HANDLING = "objection_handling"
    RELATIONSHIP_BUILDING = "relationship_building"
    PRODUCT_KNOWLEDGE = "product_knowledge"
    NEGOTIATION_SKILLS = "negotiation_skills"
    """Result from comprehensive call analysis"""
    """Individual coaching recommendation"""
    """
    """
        self.name = "sales_coach"
        self.description = "AI-powered sales coaching with Lambda GPU insights"
        """Initialize Lambda GPU services and AI Memory"""
            logger.info("âœ… Sales Coach Agent initialized with Lambda GPU"
            logger.error(f"Failed to initialize Sales Coach Agent: {e}"
        """
        """
                    logger.warning(f"No call data found for call_id: {call_id}"
                summary_prompt = f"""
Call: {call_data.get("CALL_TITLE", "Unknown"
                Sales Rep: {call_data.get("PRIMARY_USER_NAME", "Unknown"
                Duration: {call_data.get("CALL_DURATION_SECONDS"
                Participants: {call_data.get("PARTICIPANT_LIST", "Unknown"
                - Overall sentiment: {call_data.get("SENTIMENT_SCORE"
                - Talk ratio: {call_data.get("TALK_RATIO"
                - Questions asked: {call_data.get("QUESTIONS_ASKED_COUNT"
                """
                if call_data.get("full_transcript"
                    transcript_segments = call_data["full_transcript"
                        speaker = segment.get("SPEAKER_NAME", "Unknown"
                            segment.get("SEGMENT_SENTIMENT"
                if call_data.get("full_transcript"
                    topic_prompt = "Extract the top 5 key topics discussed in this sales call. Return as a comma-separated list."
                    transcript_text = " "
                            segment.get("TRANSCRIPT_TEXT", ""
                            for segment in call_data["full_transcript"
                        prompt=f"{topic_prompt}\n\nTranscript: {transcript_text[:2000]}"
                            for topic in topics_result.split(","
                call_data.get("HUBSPOT_DEAL_ID"
                call_title=call_data.get("CALL_TITLE", "Unknown"
                sales_rep=call_data.get("PRIMARY_USER_NAME", "Unknown"
                call_datetime=call_data.get("CALL_DATETIME_UTC"
                duration_seconds=call_data.get("CALL_DURATION_SECONDS"
                overall_sentiment=call_data.get("SENTIMENT_SCORE"
                    call_data.get("SENTIMENT_SCORE"
                talk_ratio=call_data.get("TALK_RATIO"
                cortex_summary=cortex_summary or "Analysis not available"
                deal_id=call_data.get("HUBSPOT_DEAL_ID"
                deal_stage=deal_context.get("stage"
                deal_value=deal_context.get("value"
                company_name=deal_context.get("company"
                call_type="analyzed"
                tags=["cortex_analysis", "sales_coaching"
logger.info(f"Completed Cortex analysis for call {call_id}"
            logger.error(f"Error analyzing call {call_id} with Cortex: {e}"
        """
        """
                        title="Improve Call Sentiment"
                        description=f"Call sentiment was {analysis.sentiment_category} ({analysis.overall_sentiment:.2f})"
                        specific_feedback=f"The overall tone of your call with {analysis.company_name or 'the prospect'} was below optimal. Focus on building rapport and addressing concerns proactively."
                            "Start calls with genuine interest in the prospect's business"
                            "Ask open-ended questions to understand their challenges"
                            "Acknowledge concerns before addressing them"
                            "Use positive language and avoid industry jargon"
                            "Practice active listening and summarize their key points"
                            f"Deal stage: {analysis.deal_stage}, Value: ${analysis.deal_value:,.2f}"
                            f"Overall sentiment score: {analysis.overall_sentiment:.2f}"
                            "Multiple negative sentiment segments detected in transcript"
                        title="Improve Discovery Through Listening"
                        description=f"Talk ratio was {analysis.talk_ratio:.1%} - too high for effective discovery"
                        specific_feedback="You dominated the conversation. Great sales reps listen more than they talk, especially in discovery calls."
                            "Use the 70/30 rule: prospect talks 70%, you talk 30%"
                            "Ask follow-up questions to dive deeper into their responses"
                            "Use silence strategically to encourage elaboration"
                            "Summarize what you hear before moving to next topic"
                            "Practice the SPIN selling methodology"
                            f"Deal stage: {analysis.deal_stage}"
                            f"Talk ratio: {analysis.talk_ratio:.1%}"
                            "Limited prospect engagement in transcript"
                        title="Increase Engagement and Value Delivery"
                        description=f"Talk ratio was {analysis.talk_ratio:.1%} - may indicate low engagement"
                        specific_feedback="While listening is important, ensure you're providing enough value and guidance in the conversation."
                            "Share relevant insights about their industry"
                            "Provide examples of how you've helped similar companies"
                            "Ask permission to share your perspective"
                            "Summarize key points and confirm understanding"
                            "Guide the conversation toward next steps"
                            f"Deal stage: {analysis.deal_stage}"
                if "discovery"
                                title="Deepen Discovery Conversation"
                                description="Limited topics covered in discovery call"
                                specific_feedback=f"For a ${analysis.deal_value:,.0f} opportunity, you should explore more areas during discovery."
                                    "Cover business challenges, decision process, timeline, and budget"
                                    "Understand their current solution and pain points"
                                    "Identify key stakeholders and decision criteria"
                                    "Explore the cost of inaction"
                                    "Uncover compelling events driving urgency"
                                deal_context=f"Discovery call for ${analysis.deal_value:,.0f} opportunity"
elif "closing"
                                title="Address Concerns Before Closing"
                                description="Negative sentiment in closing stage call"
                                specific_feedback=f"Sentiment is concerning for a closing call on a ${analysis.deal_value:,.0f} deal. Address objections first."
                                    "Identify and address remaining concerns"
                                    "Confirm value proposition alignment"
                                    "Review decision criteria and timeline"
                                    "Provide social proof and case studies"
                                    "Create urgency with limited-time incentives"
                                deal_context=f"Closing stage: ${analysis.deal_value:,.0f} opportunity"
                                    f"Sentiment: {analysis.overall_sentiment:.2f} in closing stage"
                                    "Risk of deal stalling or lost"
                                title=f"Address {speaker}'s Concerns"
                                description=f"{speaker} showed negative sentiment ({sentiment:.2f})"
                                specific_feedback=f"{speaker} appears to have concerns that weren't fully addressed during the call."
                                    f"Follow up directly with {speaker} to understand their concerns"
                                    "Schedule a separate conversation to address their specific needs"
                                    "Provide additional resources or case studies relevant to their role"
                                    "Involve a technical expert if needed"
                                    "Acknowledge their concerns and provide specific solutions"
                                deal_context=f"Stakeholder: {speaker}"
                                    f"{speaker} sentiment: {sentiment:.2f}"
                    query=f"sales rep {analysis.sales_rep} coaching recommendations"
                    {"critical": 4, "high": 3, "medium": 2, "low"
                f"Generated {len(recommendations)} coaching recommendations for call {analysis.call_id}"
            logger.error(f"Error generating coaching recommendations: {e}"
        """
        """
                    prompt=f"""
                    - Total calls: {rep_performance.get("TOTAL_CALLS"
                    - Average sentiment: {rep_performance.get("AVG_SENTIMENT"
                    - Average talk ratio: {rep_performance.get("AVG_TALK_RATIO"
                    - Win rate: {rep_performance.get("WIN_RATE"
                    - Revenue won: ${rep_performance.get("REVENUE_WON"
                    - Sentiment coaching needed: {rep_performance.get("NEEDS_SENTIMENT_COACHING"
                    - Talk ratio coaching needed: {rep_performance.get("NEEDS_TALK_RATIO_COACHING"
                    - Discovery coaching needed: {rep_performance.get("NEEDS_DISCOVERY_COACHING"
                    """
                query=f"coaching recommendations {sales_rep}"
                        "priority": "High"
                        "area": "Sentiment Improvement"
                        "actions"
                            "Practice active listening techniques"
                            "Role-play difficult conversations"
                            "Review successful call recordings"
                        "timeline": "2 weeks"
                        "success_metrics"
                            "Sentiment score > 0.5"
                            "Reduced negative feedback"
                        "priority": "Medium"
                        "area": "Discovery Skills"
                        "actions"
                            "Use SPIN selling methodology"
                            "Prepare discovery question bank"
                            "Practice talk ratio management"
                        "timeline": "1 month"
                        "success_metrics"
                            "Talk ratio 30-50%"
                            "Deeper qualification"
                "sales_rep"
                "analysis_period": f"{time_period_days} days"
                "generated_at"
                "performance_metrics"
                "cortex_analysis"
                "coaching_calls_analyzed"
                "historical_insights"
                "action_plan"
                "next_review_date"
                "confidence_score"
                content=f"Coaching summary for {sales_rep}: {performance_summary}"
                category="GONG_COACHING_RECOMMENDATION"
                    "coaching_summary"
                    sales_rep.lower().replace(" ", "_"
                    "performance_analysis"
logger.info(f"Created coaching summary for {sales_rep}"
            logger.error(f"Error creating coaching summary for {sales_rep}: {e}"
            return {"error": str(e), "sales_rep": sales_rep, "status": "failed"
        """Get HubSpot deal context for call analysis"""
                        "stage": deal_info.get("DEAL_STAGE"
                        "value": deal_info.get("AMOUNT"
                        "company": deal_info.get("COMPANY_NAME"
                        "close_date": deal_info.get("CLOSE_DATE"
            logger.error(f"Error getting deal context for {deal_id}: {e}"
        """Categorize sentiment score into human-readable category"""
            return "Very Positive"
            return "Positive"
            return "Neutral"
            return "Negative"
            return "Very Negative"
        """Analyze historical patterns to provide trend-based coaching"""
            insight.get("sentiment_score"
            if insight.get("sentiment_score"
                    title="Declining Sentiment Trend"
                    description="Sentiment declining compared to recent calls"
                    specific_feedback=f"Your recent call sentiment ({current_analysis.overall_sentiment:.2f}) is below your recent average ({avg_historical_sentiment:.2f}). Let's identify what's changed."
                        "Review recent successful calls to identify what worked"
                        "Practice objection handling for common concerns"
                        "Focus on building rapport early in calls"
                        "Prepare better discovery questions"
                        "Schedule role-play session with manager"
                        f"Current sentiment: {current_analysis.overall_sentiment:.2f}"
                        f"Recent average: {avg_historical_sentiment:.2f}"
                        f"Based on {len(sentiment_trend)} recent calls"
    """Create and initialize a Sales Coach Agent instance"""