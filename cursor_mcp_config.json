{
  "mcpServers": {
    "ai_memory": {
      "command": "python",
      "args": [
        "-m",
        "backend.mcp.ai_memory_mcp_server"
      ],
      "env": {
        "PULUMI_ORG": "scoobyjava-org",
        "PULUMI_STACK": "sophia-ai-production"
      },
      "capabilities": {
        "semantic_search": true,
        "auto_discovery": true,
        "context_awareness": true,
        "intelligent_categorization": true
      },
      "auto_triggers": {
        "on_file_save": true,
        "on_commit": true,
        "on_branch_switch": true,
        "on_architecture_discussion": true,
        "on_file_change": true,
        "on_save": true
      },
      "workflow_automation": {
        "auto_store_context": true,
        "smart_recall": true,
        "file_specific_memory": true,
        "pattern_recognition": true
      },
      "performance": {
        "cache_enabled": true,
        "batch_operations": true,
        "async_processing": true
      }
    },
    "codacy": {
      "command": "python",
      "args": [
        "-m",
        "mcp-servers.codacy.codacy_mcp_server"
      ],
      "capabilities": {
        "real_time_analysis": true,
        "security_scanning": true,
        "ast_analysis": true,
        "quality_metrics": true,
        "fix_suggestions": true
      },
      "auto_triggers": {
        "on_file_save": true,
        "on_code_change": true,
        "on_security_review": true,
        "on_file_change": true,
        "on_save": true
      },
      "analysis_settings": {
        "complexity_threshold": 10,
        "security_level": "strict",
        "style_checking": true,
        "performance_analysis": true
      },
      "integration": {
        "github_integration": true,
        "pr_comments": true,
        "automated_fixes": false
      }
    },
    "asana": {
      "command": "python",
      "args": [
        "-m",
        "mcp-servers.asana.asana_mcp_server"
      ],
      "env": {
        "PULUMI_ORG": "scoobyjava-org",
        "PULUMI_STACK": "sophia-ai-production"
      },
      "capabilities": {
        "task_management": true,
        "project_tracking": true,
        "team_collaboration": true,
        "progress_monitoring": true
      },
      "integration": {
        "github_issues": true,
        "development_workflow": true,
        "automated_updates": true
      }
    },
    "notion": {
      "command": "python",
      "args": [
        "-m",
        "mcp-servers.notion.notion_mcp_server"
      ],
      "env": {
        "PULUMI_ORG": "scoobyjava-org",
        "PULUMI_STACK": "sophia-ai-production"
      },
      "capabilities": {
        "document_management": true,
        "knowledge_base": true,
        "project_documentation": true,
        "team_wiki": true
      },
      "auto_triggers": {
        "on_architecture_decision": true,
        "on_documentation_update": true,
        "on_project_milestone": true,
        "on_file_change": true,
        "on_save": true
      }
    },
    "sophia_intelligence": {
      "type": "http",
      "baseUrl": "http://localhost:8092",
      "description": "Sophia AI Intelligence MCP Server - Handles AI model routing, business intelligence, and analytical tasks",
      "capabilities": [
        "agent_creation",
        "business_analysis",
        "data_insights",
        "ai_orchestration"
      ]
    },
    "sophia_business": {
      "type": "http",
      "baseUrl": "http://localhost:8093",
      "description": "Sophia Business Intelligence MCP Server - Manages CRM, sales data, and business metrics",
      "capabilities": [
        "crm_integration",
        "sales_analysis",
        "customer_health",
        "revenue_tracking"
      ]
    },
    "sophia_data": {
      "type": "http",
      "baseUrl": "http://localhost:8094",
      "description": "Sophia Data Intelligence MCP Server - Handles data processing, ETL, and data pipeline management",
      "capabilities": [
        "data_processing",
        "etl_pipelines",
        "database_operations",
        "data_quality"
      ]
    },
    "sophia_infrastructure": {
      "type": "http",
      "baseUrl": "http://localhost:8095",
      "description": "Sophia Infrastructure MCP Server - Manages deployments, scaling, and infrastructure operations",
      "capabilities": [
        "deployment_management",
        "infrastructure_scaling",
        "monitoring_setup",
        "security_configuration"
      ]
    },
    "snowflake_admin": {
      "command": "python",
      "args": [
        "-m",
        "mcp-servers.snowflake_admin.snowflake_admin_mcp_server"
      ],
      "env": {
        "PULUMI_ORG": "scoobyjava-org",
        "PULUMI_STACK": "sophia-ai-production"
      },
      "capabilities": {
        "sql_agent": true,
        "multi_environment": true,
        "safety_checks": true,
        "natural_language": true
      },
      "security": {
        "dangerous_operation_detection": true,
        "confirmation_required": true,
        "environment_restrictions": true,
        "audit_logging": true
      },
      "environments": {
        "dev": {
          "restrictions": "minimal",
          "confirmation_required": false
        },
        "staging": {
          "restrictions": "moderate",
          "confirmation_required": true
        },
        "production": {
          "restrictions": "strict",
          "confirmation_required": true,
          "read_only": true
        }
      }
    }
  },
  "settings": {
    "timeout": 30000,
    "retries": 3,
    "healthCheckInterval": 60000,
    "logLevel": "info",
    "autoMemoryStorage": true,
    "intelligentRouting": true,
    "contextAwareness": true
  },
  "development": {
    "auto_reload": true,
    "debug_mode": true,
    "verbose_logging": true,
    "fast_feedback": true
  },
  "workflows": {
    "onCodeChange": {
      "triggers": [
        "codacy.analyze_file",
        "ai_memory.store_context"
      ],
      "conditions": [
        "file_size < 10000",
        "file_type in ['py', 'js', 'ts']"
      ]
    },
    "onArchitecturalDiscussion": {
      "triggers": [
        "ai_memory.store_conversation"
      ],
      "category": "architecture"
    },
    "onBugFix": {
      "triggers": [
        "ai_memory.store_conversation",
        "codacy.security_scan"
      ],
      "category": "bug_solution"
    },
    "onSnowflakeAdminQuery": {
      "triggers": [
        "snowflake_admin.execute_admin_task",
        "ai_memory.store_context"
      ],
      "category": "database_administration",
      "conditions": [
        "query_contains_snowflake_keywords",
        "user_has_admin_permissions"
      ]
    }
  },
  "github_integration": {
    "auto_sync": true,
    "branch_awareness": true,
    "pr_integration": true,
    "issue_linking": true,
    "workflow_triggers": {
      "on_push": [
        "ai_memory",
        "codacy"
      ],
      "on_pr": [
        "codacy",
        "ai_memory"
      ],
      "on_branch_switch": [
        "ai_memory"
      ],
      "on_commit": [
        "ai_memory",
        "codacy"
      ]
    }
  },
  "cursor_optimizations": {
    "intelligent_code_completion": true,
    "context_aware_suggestions": true,
    "ai_powered_refactoring": true,
    "automated_documentation": true,
    "smart_error_handling": true,
    "performance_monitoring": true
  },
  "development_workflow": {
    "auto_format_on_save": true,
    "lint_on_change": true,
    "test_on_commit": true,
    "security_scan_on_pr": true
  },
  "ai_assistance": {
    "natural_language_commands": true,
    "contextual_help": true,
    "code_explanation": true,
    "optimization_suggestions": true
  },
  "performance": {
    "connection_pooling": true,
    "request_batching": true,
    "async_operations": true,
    "caching": {
      "enabled": true,
      "ttl": 300,
      "max_size": 1000
    },
    "timeouts": {
      "connection": 10,
      "request": 30,
      "keepalive": 60
    }
  },
  "monitoring": {
    "health_checks": true,
    "performance_metrics": true,
    "error_tracking": true,
    "usage_analytics": true
  },
  "logging": {
    "level": "INFO",
    "format": "json",
    "correlation_ids": true,
    "structured_logging": true
  }
}