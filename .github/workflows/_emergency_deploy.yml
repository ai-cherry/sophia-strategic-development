name: ðŸš¨ Emergency Deploy (Minimal)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "DEPLOY" to confirm emergency deployment'
        required: true
        type: string

env:
  DOCKER_REGISTRY: scoobyjava15
  LAMBDA_LABS_HOST: 146.235.200.1

jobs:
  deploy:
    name: Emergency Deploy
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'DEPLOY'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Backend
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag ${{ env.DOCKER_REGISTRY }}/sophia-backend:emergency-${{ github.sha }} \
            --tag ${{ env.DOCKER_REGISTRY }}/sophia-backend:latest \
            --push \
            --file backend/Dockerfile \
            --cache-from type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-backend:buildcache \
            --cache-to type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-backend:buildcache,mode=max \
            backend/

      - name: Setup Pulumi
        uses: pulumi/actions@v5
        with:
          pulumi-version: 'latest'
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Pulumi Login
        run: |
          export PULUMI_ACCESS_TOKEN="${{ secrets.PULUMI_ACCESS_TOKEN }}"
          pulumi login

      - name: Deploy Infrastructure
        run: |
          cd infrastructure
          pulumi stack select scoobyjava-org/sophia-ai-production --non-interactive
          pulumi up --yes --non-interactive
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: ðŸ”‘ Setup K3s access
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.K3S_KUBECONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy to K3s
        run: |
          # Apply K3s manifests
          kubectl apply -k k8s/overlays/production
          
          # Wait for deployments to be ready
          kubectl rollout status deployment -n sophia-ai-prod --timeout=600s
          kubectl rollout status deployment -n mcp-servers --timeout=600s

      - name: Verify Deployment
        run: |
          sleep 30
          curl -f http://${{ env.LAMBDA_LABS_HOST }}:8000/health || exit 1
          echo "âœ… Emergency deployment successful!"
