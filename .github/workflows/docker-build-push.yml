name: 🐳 Docker Build & Push

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'mcp-servers/**'
      - 'Dockerfile*'
      - '.github/workflows/docker-build-push.yml'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to Docker Hub'
        type: boolean
        default: true

env:
  DOCKER_REGISTRY: scoobyjava15

jobs:
  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: backend
            context: .
            dockerfile: Dockerfile.production
          - name: frontend
            context: frontend
            dockerfile: frontend/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          platforms: linux/amd64
          push: ${{ github.event.inputs.push_images != 'false' }}
          tags: |
            ${{ env.DOCKER_REGISTRY }}/sophia-${{ matrix.service.name }}:latest
            ${{ env.DOCKER_REGISTRY }}/sophia-${{ matrix.service.name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ENVIRONMENT=prod
            PULUMI_ORG=scoobyjava-org

      - name: Image digest
        run: echo "Image pushed with tags latest and ${{ github.sha }}"

  build-mcp-servers:
    name: Build MCP Server Images
    runs-on: ubuntu-latest
    needs: build-and-push
    if: success()
    strategy:
      matrix:
        server:
          - ai-memory-v2
          - gong-v2
          - snowflake-v2
          - slack-v2
          - linear-v2
          - github-v2
          - codacy-v2
          - asana-v2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Check if MCP server exists
        id: check
        run: |
          if [ -d "mcp-servers/${{ matrix.server }}" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push ${{ matrix.server }}
        if: steps.check.outputs.exists == 'true'
        uses: docker/build-push-action@v5
        with:
          context: mcp-servers/${{ matrix.server }}
          file: mcp-servers/${{ matrix.server }}/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event.inputs.push_images != 'false' }}
          tags: |
            ${{ env.DOCKER_REGISTRY }}/sophia-${{ matrix.server }}:latest
            ${{ env.DOCKER_REGISTRY }}/sophia-${{ matrix.server }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
