name: ðŸš€ Kubernetes Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  DOCKER_REGISTRY: scoobyjava15
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.production
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/sophia-backend:${{ env.IMAGE_TAG }}
          ${{ env.DOCKER_REGISTRY }}/sophia-backend:latest
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-backend:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-backend:buildcache,mode=max
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/sophia-frontend:${{ env.IMAGE_TAG }}
          ${{ env.DOCKER_REGISTRY }}/sophia-frontend:latest
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-frontend:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/sophia-frontend:buildcache,mode=max

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure kubectl
      run: |
        # This would normally use kubeconfig from secrets
        # For Lambda Labs, you would configure access here
        echo "Configuring kubectl for Lambda Labs Kubernetes..."
    
    - name: Update image tags
      run: |
        # Update deployment manifests with new image tags
        sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/sophia-backend:.*|image: ${{ env.DOCKER_REGISTRY }}/sophia-backend:${{ env.IMAGE_TAG }}|g" kubernetes/production/*.yaml
        sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/sophia-frontend:.*|image: ${{ env.DOCKER_REGISTRY }}/sophia-frontend:${{ env.IMAGE_TAG }}|g" kubernetes/production/*.yaml
    
    - name: Apply Kubernetes manifests
      run: |
        # Apply all manifests
        kubectl apply -f kubernetes/production/storage.yaml
        kubectl apply -f kubernetes/production/postgres-deployment.yaml
        kubectl apply -f kubernetes/production/redis-deployment.yaml
        kubectl apply -f kubernetes/production/sophia-backend-deployment.yaml
        kubectl apply -f kubernetes/production/frontend-deployment.yaml
        kubectl apply -f kubernetes/production/mcp-*-deployment.yaml
        kubectl apply -f kubernetes/production/mcp-*-service.yaml
        kubectl apply -f kubernetes/production/ingress.yaml
        kubectl apply -f kubernetes/monitoring/
    
    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/sophia-backend -n sophia-ai-prod --timeout=300s
        kubectl rollout status deployment/sophia-frontend -n sophia-ai-prod --timeout=300s
    
    - name: Health check
      run: |
        ./scripts/k8s_health_check.sh 