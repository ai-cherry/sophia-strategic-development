name: Sync Secrets to Pulumi ESC

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running the workflow'
        required: true
        default: 'Manual sync of organization secrets to Pulumi ESC'
  push:
    branches: [main]
    paths:
      - 'scripts/ci/sync_from_gh_to_pulumi.py'
      - '.github/workflows/sync_secrets.yml'

jobs:
  sync-secrets-to-pulumi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install basic dependencies needed for the sync script
          pip install requests

      - name: Setup Pulumi CLI
        uses: pulumi/actions@v5

      - name: Validate Pulumi Access
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          pulumi login
          pulumi whoami
          echo "‚úÖ Pulumi authentication successful"

      - name: Sync Secrets to Pulumi ESC
        run: python scripts/ci/sync_from_gh_to_pulumi.py
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          # AI Services
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
          PORTKEY_API_KEY: ${{ secrets.PORTKEY_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          CODESTRAL_API_KEY: ${{ secrets.CODESTRAL_API_KEY }}
          TOGETHERAI_API_KEY: ${{ secrets.TOGETHERAI_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          VENICE_AI_API_KEY: ${{ secrets.VENICE_AI_API_KEY }}
          LLAMA_API_KEY: ${{ secrets.LLAMA_API_KEY }}

          # Business Intelligence
          GONG_ACCESS_KEY: ${{ secrets.GONG_ACCESS_KEY }}
          GONG_CLIENT_SECRET: ${{ secrets.GONG_CLIENT_SECRET }}
          GONG_BASE_URL: ${{ secrets.GONG_BASE_URL }}
          HUBSPOT_ACCESS_TOKEN: ${{ secrets.HUBSPOT_ACCESS_TOKEN }}
          SALESFORCE_ACCESS_TOKEN: ${{ secrets.SALESFORCE_ACCESS_TOKEN }}
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}

          # Communication
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_CLIENT_ID: ${{ secrets.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}

          # Data Infrastructure
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME }}
          WEAVIATE_API_KEY: ${{ secrets.WEAVIATE_API_KEY }}
          WEAVIATE_URL: ${{ secrets.WEAVIATE_URL }}
          WEAVIATE_REST_ENDPOINT: ${{ secrets.WEAVIATE_REST_ENDPOINT }}
          WEAVIATE_GRPC_ENDPOINT: ${{ secrets.WEAVIATE_GRPC_ENDPOINT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}

          # Observability & Monitoring
          ARIZE_API_KEY: ${{ secrets.ARIZE_API_KEY }}
          ARIZE_SPACE_ID: ${{ secrets.ARIZE_SPACE_ID }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
          GRAFANA_USERNAME: ${{ secrets.GRAFANA_USERNAME }}
          GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
          PROMETHEUS_URL: ${{ secrets.PROMETHEUS_URL }}

          # Cloud Infrastructure
          LAMBDA_API_KEY: ${{ secrets.LAMBDA_API_KEY }}
          VERCEL_ACCESS_TOKEN: ${{ secrets.VERCEL_ACCESS_TOKEN }}
          VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}

          # Research Tools
          APIFY_API_TOKEN: ${{ secrets.APIFY_API_TOKEN }}
          SERP_API_KEY: ${{ secrets.SERP_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          EXA_API_KEY: ${{ secrets.EXA_API_KEY }}
          BRAVE_API_KEY: ${{ secrets.BRAVE_API_KEY }}
          ZENROWS_API_KEY: ${{ secrets.ZENROWS_API_KEY }}

          # Development Tools
          GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
          RETOOL_API_TOKEN: ${{ secrets.RETOOL_API_TOKEN }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          NPM_API_TOKEN: ${{ secrets.NPM_API_TOKEN }}

          # Data Integration
          ESTUARY_ACCESS_TOKEN: ${{ secrets.ESTUARY_ACCESS_TOKEN }}
          ESTUARY_ACCESS_TOKEN: ${{ secrets.ESTUARY_ACCESS_TOKEN }}
          PIPEDREAM_API_KEY: ${{ secrets.PIPEDREAM_API_KEY }}

          # Security
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          API_SECRET_KEY: ${{ secrets.API_SECRET_KEY }}

      - name: Upload Sync Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sync-report
          path: sync_report.json
          retention-days: 30

      - name: Display Sync Summary
        if: always()
        run: |
          if [ -f sync_report.json ]; then
            echo "üìã Sync Report Summary:"
            echo "======================="
            cat sync_report.json | python -m json.tool
          else
            echo "‚ùå Sync report not found"
          fi

      - name: Notify on Failure
        if: failure()
        run: |
          echo "‚ùå Secret sync failed!"
          echo "Check the workflow logs and sync report for details."
          echo "Some secrets may not be available in the organization secrets."
