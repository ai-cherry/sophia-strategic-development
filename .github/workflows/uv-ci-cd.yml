4. Dependency Audit and Security Implementation
Implement continuous vulnerability scanning using pip-audit integrated with your UV workflow:

bash
# Add to your CI/CD pipeline
pip install pip-audit
pip-audit --format=json --output=vulnerability-report.jsonname: Sophia AI UV CI/CD Pipeline

on
  push
    branches: [ main, develop ]
  pull_request
    branches: [ main ]

env
  ENVIRONMENT: prod
  PULUMI_ORG: scoobyjava-org

jobs
  test
    runs-on: ubuntu-latest
    strategy
      matrix
        python-version: ["3.11", "3.12"]
    
    steps
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      - name: Add UV to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Set Python version
        run: echo "${{ matrix.python-version }}" > .python-version
      
      - name: Cache UV dependencies
        uses: actions/cache@v4
        with
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-
      - name: Install dependencies
        run: uv sync --group dev --group test
      
      - name: Run linting with Ruff
        run: uv run ruff check .
      
      - name: Run type checking with MyPy
        run: uv run mypy backend/
        continue-on-error: true  # Allow to continue even if type checking fails
      
      - name: Run tests with pytest
        run: uv run pytest tests/ --cov=backend --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with
          file: ./coverage.xml

  security
    runs-on: ubuntu-latest
    steps
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      - name: Add UV to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install security dependencies
        run: uv sync --group security
      
      - name: Run safety check
        run: uv run safety check
      
      - name: Run pip-audit
        run: uv run pip-audit --format=json --output=vulnerability-report.json

  build-and-deploy
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      - name: Add UV to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image with UV
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -f Dockerfile.uv \
            -t sophia-ai:latest \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            .
      - name: Install Pulumi dependencies
        run: uv sync --group prod-stack
      
      - name: Configure Pulumi
        env
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin
          pulumi login
      - name: Deploy infrastructure with Pulumi
        env
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        run: |
          export PATH=$PATH:$HOME/.pulumi/bin
          uv run pulumi up --yes --stack sophia-ai-production

  performance-test
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      - name: Add UV to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install monitoring dependencies
        run: uv sync --group monitoring
      
      - name: Run performance tests
        run: uv run locust --headless --users 100 --spawn-rate 10 --run-time 60s --host https://app.sophia-intel.ai
