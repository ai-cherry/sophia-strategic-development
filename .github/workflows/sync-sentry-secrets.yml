name: Sync Sentry Secrets to Pulumi ESC

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  push:
    paths:
      - '.github/workflows/sync-sentry-secrets.yml'

jobs:
  sync-secrets:
    name: Sync Sentry Secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Pulumi
        uses: pulumi/actions@v4
        with:
          pulumi-version: latest
      
      - name: Configure Pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          pulumi login
          
      - name: Sync Sentry Secrets to Pulumi ESC
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_API_TOKEN: ${{ secrets.SENTRY_API_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORGANIZATION_SLUG: ${{ secrets.SENTRY_ORGANIZATION_SLUG }}
          SENTRY_PROJECT_SLUG: ${{ secrets.SENTRY_PROJECT_SLUG }}
          SENTRY_CLIENT_SECRET: ${{ secrets.SENTRY_CLIENT_SECRET }}
        run: |
          echo "Syncing Sentry secrets to Pulumi ESC..."
          
          # Set organization
          export PULUMI_ORG=scoobyjava-org
          
          # Update Sentry secrets in Pulumi ESC
          if [ ! -z "$SENTRY_DSN" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_DSN "$SENTRY_DSN" --secret
            echo "✅ SENTRY_DSN synced"
          fi
          
          if [ ! -z "$SENTRY_API_TOKEN" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_API_TOKEN "$SENTRY_API_TOKEN" --secret
            echo "✅ SENTRY_API_TOKEN synced"
          fi
          
          if [ ! -z "$SENTRY_AUTH_TOKEN" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_AUTH_TOKEN "$SENTRY_AUTH_TOKEN" --secret
            echo "✅ SENTRY_AUTH_TOKEN synced"
          fi
          
          if [ ! -z "$SENTRY_ORGANIZATION_SLUG" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_ORGANIZATION_SLUG "$SENTRY_ORGANIZATION_SLUG"
            echo "✅ SENTRY_ORGANIZATION_SLUG synced"
          fi
          
          if [ ! -z "$SENTRY_PROJECT_SLUG" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_PROJECT_SLUG "$SENTRY_PROJECT_SLUG"
            echo "✅ SENTRY_PROJECT_SLUG synced"
          fi
          
          if [ ! -z "$SENTRY_CLIENT_SECRET" ]; then
            pulumi env set scoobyjava-org/default/sophia-ai-production SENTRY_CLIENT_SECRET "$SENTRY_CLIENT_SECRET" --secret
            echo "✅ SENTRY_CLIENT_SECRET synced"
          fi
          
          echo "All Sentry secrets synced to Pulumi ESC!"
          
      - name: Verify Sentry Configuration
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          echo "Verifying Sentry configuration in Pulumi ESC..."
          
          # List Sentry-related values (without showing secrets)
          pulumi env get scoobyjava-org/default/sophia-ai-production --show-secrets=false | grep -i sentry || true
          
      - name: Trigger Sentry MCP Deployment
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy-sentry-mcp
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
