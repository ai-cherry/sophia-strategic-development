name: Quality Gate
on:
  workflow_call:
    outputs:
      passed:
        description: "Whether quality gate passed"
        value: ${{ jobs.quality.outputs.passed }}

jobs:
  quality:
    name: 🔍 Quality Checks
    runs-on: ubuntu-latest
    outputs:
      passed: ${{ steps.summary.outputs.passed }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          if [ -f "pyproject.toml" ]; then
            uv sync --group dev
          elif [ -f "requirements.txt" ]; then
            uv pip install -r requirements.txt
          fi

      - name: Run linting
        id: lint
        continue-on-error: true
        run: |
          echo "::group::Ruff Linting"
          uv run ruff check . --output-format=github || echo "LINT_FAILED=true" >> $GITHUB_ENV
          echo "::endgroup::"

      - name: Run type checking
        id: typecheck
        continue-on-error: true
        run: |
          echo "::group::Type Checking"
          if command -v mypy &> /dev/null; then
            uv run mypy backend/ --ignore-missing-imports || echo "TYPE_FAILED=true" >> $GITHUB_ENV
          fi
          echo "::endgroup::"

      - name: Run tests
        id: test
        continue-on-error: true
        run: |
          echo "::group::Unit Tests"
          if [ -d "tests" ]; then
            uv run pytest tests/ --cov=backend --cov-report=xml -v || echo "TEST_FAILED=true" >> $GITHUB_ENV
          fi
          echo "::endgroup::"

      - name: Security scan
        id: security
        continue-on-error: true
        run: |
          echo "::group::Security Scan"
          uv run pip-audit --format=json --output=vulnerability-report.json || echo "SECURITY_FAILED=true" >> $GITHUB_ENV
          echo "::endgroup::"

      - name: Generate summary
        id: summary
        run: |
          echo "## Quality Gate Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          PASSED=true

          if [ "$LINT_FAILED" = "true" ]; then
            echo "❌ **Linting**: Failed" >> $GITHUB_STEP_SUMMARY
            PASSED=false
          else
            echo "✅ **Linting**: Passed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "$TYPE_FAILED" = "true" ]; then
            echo "⚠️  **Type Checking**: Failed (non-blocking)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Type Checking**: Passed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "$TEST_FAILED" = "true" ]; then
            echo "⚠️  **Tests**: Failed (non-blocking)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "$SECURITY_FAILED" = "true" ]; then
            echo "⚠️  **Security**: Issues found (non-blocking)" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Security**: Passed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "passed=$PASSED" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports
          path: |
            coverage.xml
            vulnerability-report.json
          retention-days: 7
