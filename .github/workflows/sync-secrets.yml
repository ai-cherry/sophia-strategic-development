name: Sync Secrets and MCP Config

on:
  repository_dispatch:
    types: [secrets-updated]
  workflow_dispatch:
  schedule:
    # Run daily at 2 AM UTC to catch any missed updates
    - cron: '0 2 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install UV
        run: pip install uv
        
      - name: Install dependencies
        run: |
          uv sync
          
      - name: Configure Pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          # Install Pulumi CLI
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin
          
          # Login to Pulumi
          pulumi login
          
          # Set organization
          export PULUMI_ORG=scoobyjava-org
          
      - name: Generate MCP Configuration
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_ORG: scoobyjava-org
          ENVIRONMENT: prod
        run: |
          # Activate virtual environment
          source .venv/bin/activate || true
          
          # Run the sync script
          python scripts/sync_mcp_config.py
          
          # Verify the file was created
          if [ -f .cursor/mcp.json ]; then
            echo "✅ MCP configuration generated successfully"
            echo "File size: $(wc -c < .cursor/mcp.json) bytes"
          else
            echo "❌ Failed to generate MCP configuration"
            exit 1
          fi
          
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet .cursor/mcp.json; then
            echo "No changes to MCP configuration"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "MCP configuration has changed"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add the MCP configuration file
          git add .cursor/mcp.json
          
          # Create commit message with timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "🔄 Sync MCP config from Pulumi ESC [${TIMESTAMP}]" \
                     -m "Automated sync triggered by: ${{ github.event_name }}" \
                     -m "Workflow run: ${{ github.run_id }}"
          
          # Push changes
          git push origin ${{ github.ref }}
          
      - name: Create sync summary
        if: always()
        run: |
          echo "## 📊 MCP Configuration Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f .cursor/mcp.json ]; then
            echo "**Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
            echo "**File Size:** $(wc -c < .cursor/mcp.json) bytes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Configured MCP Servers:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            jq -r '.mcpServers | keys[]' .cursor/mcp.json 2>/dev/null | while read server; do
              echo "- $server" >> $GITHUB_STEP_SUMMARY
            done
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            // Create an issue if sync fails
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 MCP Configuration Sync Failed',
              body: `The MCP configuration sync workflow failed.
              
              **Workflow Run:** [#${context.runNumber}](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              **Triggered by:** ${context.eventName}
              **Time:** ${new Date().toISOString()}
              
              Please check the workflow logs for details.`,
              labels: ['bug', 'automation']
            });
            
            console.log(`Created issue #${issue.data.number}`);
