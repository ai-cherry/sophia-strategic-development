name: quality-gate
on:
  workflow_call:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install UV
        run: |
          pip install --upgrade pip
          pip install uv
          echo "UV version: $(uv --version)"

      - name: Restore UV cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ hashFiles('requirements.txt', 'uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          uv sync --python 3.12
          uv pip install ruff pytest pytest-asyncio pytest-cov coverage

      - name: Run Ruff linter
        run: |
          echo "::group::Ruff Check"
          ruff check . --output-format=github
          echo "::endgroup::"

      - name: Run Black formatter check
        run: |
          echo "::group::Black Check"
          uv pip install black
          black --check --diff .
          echo "::endgroup::"

      - name: Run type checking
        run: |
          echo "::group::MyPy Check"
          uv pip install mypy types-requests types-pyyaml
          mypy . --ignore-missing-imports --no-error-summary || true
          echo "::endgroup::"

      - name: Run tests
        run: |
          echo "::group::Test Execution"
          pytest -xvs --disable-warnings --cov=backend --cov-report=term-missing
          echo "::endgroup::"

      - name: Check import health
        run: |
          echo "::group::Import Health Check"
          python scripts/ci_cd_rehab/check_imports.py
          echo "::endgroup::"

      - name: Generate quality report
        if: always()
        run: |
          mkdir -p reports
          echo "# Quality Gate Report" > reports/quality-gate.md
          echo "Generated at: $(date -u)" >> reports/quality-gate.md
          echo "" >> reports/quality-gate.md

          # Add test results
          if [ -f .coverage ]; then
            echo "## Test Coverage" >> reports/quality-gate.md
            coverage report --format=markdown >> reports/quality-gate.md || true
          fi

          # Add ruff results
          echo "## Linting Results" >> reports/quality-gate.md
          ruff check . --statistics >> reports/quality-gate.md || true

      - name: Upload quality artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports
          path: reports/
          retention-days: 7

      - name: Comment PR (if applicable)
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('reports/quality-gate.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
