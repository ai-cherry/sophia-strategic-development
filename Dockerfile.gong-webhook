# Multi-stage Docker build for Gong Webhook Service
# Optimized for production deployment with security best practices

# Build stage
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN useradd --create-home --shell /bin/bash app

# Set work directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-dev.txt ./

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install gunicorn uvicorn[standard]

# Copy application source
COPY backend/ ./backend/
COPY config/ ./config/

# Create necessary directories
RUN mkdir -p /app/.cache /tmp/app && \
    chown -R app:app /app /tmp/app

# Production stage
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    ENVIRONMENT=production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create application user with specific UID/GID for security
RUN groupadd -r -g 1000 app && \
    useradd -r -u 1000 -g app -d /app -s /bin/bash app

# Set work directory
WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code from builder
COPY --from=builder --chown=app:app /app /app

# Create necessary directories with proper permissions
RUN mkdir -p /app/.cache /tmp/app /app/logs && \
    chown -R app:app /app /tmp/app && \
    chmod -R 750 /app && \
    chmod -R 1777 /tmp/app

# Switch to non-root user
USER app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Add labels for better maintenance
LABEL maintainer="Sophia AI Team" \
      service="gong-webhook" \
      version="1.0.0" \
      description="Production Gong webhook processor for Sophia AI"

# Default command
CMD ["python", "-m", "uvicorn", "backend.integrations.gong_webhook_server:app", \
     "--host", "0.0.0.0", \
     "--port", "8080", \
     "--workers", "4", \
     "--access-log", \
     "--log-level", "info"] 