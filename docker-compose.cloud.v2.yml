version: "3.8"

# V2 MCP Server Stack for Sophia AI
# Deploys to Lambda Labs via Docker Swarm

x-v2-defaults: &v2-defaults
  deploy:
    mode: replicated
    replicas: 2
    update_config:
      parallelism: 1
      delay: 30s
      failure_action: rollback
      monitor: 60s
      max_failure_ratio: 0.2
      order: stop-first
    rollback_config:
      parallelism: 1
      delay: 0s
      failure_action: pause
      monitor: 60s
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 5
      window: 120s
    resources:
      limits:
        cpus: '2.0'
        memory: 4G
      reservations:
        cpus: '1.0'
        memory: 2G
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8000"
      - "prometheus.io/path=/metrics"
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 60s
  networks:
    - mcp-net
    - monitoring
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "service,environment,version"
      tag: "{{.Name}}/{{.ID}}"

services:
  # AI Memory V2 - Enhanced with Redis L1 cache
  ai_memory_v2:
    <<: *v2-defaults
    image: ${AI_MEMORY_V2_IMAGE:-scoobyjava15/sophia-ai_memory_v2:latest}
    ports:
      - target: 8000
        published: 9010
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: ai_memory_v2
      REDIS_URL: redis://redis:6379/0
      SNOWFLAKE_WAREHOUSE: SOPHIA_AI_COMPUTE_WH
      SNOWFLAKE_DATABASE: SOPHIA_AI_PROD
      SNOWFLAKE_SCHEMA: AI_MEMORY_V2
      LOG_LEVEL: INFO
    secrets:
      - snowflake_creds
      - openai_key
    depends_on:
      - redis

  # Gong V2 - Call intelligence with memory integration
  gong_v2:
    <<: *v2-defaults
    image: ${GONG_V2_IMAGE:-scoobyjava15/sophia-gong_v2:latest}
    ports:
      - target: 8000
        published: 9011
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: gong_v2
      MEMORY_SERVICE_URL: http://ai_memory_v2:8000
      SNOWFLAKE_WAREHOUSE: SOPHIA_AI_COMPUTE_WH
      LOG_LEVEL: INFO
    secrets:
      - gong_api_key
      - snowflake_creds

  # Snowflake V2 - Enhanced with Cortex AI
  snowflake_v2:
    <<: *v2-defaults
    image: ${SNOWFLAKE_V2_IMAGE:-scoobyjava15/sophia-snowflake_v2:latest}
    ports:
      - target: 8000
        published: 9012
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: snowflake_v2
      SNOWFLAKE_WAREHOUSE: SOPHIA_AI_V2_WH
      ENABLE_CORTEX: "true"
      LOG_LEVEL: INFO
    secrets:
      - snowflake_creds

  # Slack V2 - Conversation analysis
  slack_v2:
    <<: *v2-defaults
    image: ${SLACK_V2_IMAGE:-scoobyjava15/sophia-slack_v2:latest}
    ports:
      - target: 8000
        published: 9013
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: slack_v2
      MEMORY_SERVICE_URL: http://ai_memory_v2:8000
      LOG_LEVEL: INFO
    secrets:
      - slack_token

  # Notion V2 - Knowledge management
  notion_v2:
    <<: *v2-defaults
    image: ${NOTION_V2_IMAGE:-scoobyjava15/sophia-notion_v2:latest}
    ports:
      - target: 8000
        published: 9014
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: notion_v2
      MEMORY_SERVICE_URL: http://ai_memory_v2:8000
      LOG_LEVEL: INFO
    secrets:
      - notion_api_key

  # Linear V2 - Project management
  linear_v2:
    <<: *v2-defaults
    image: ${LINEAR_V2_IMAGE:-scoobyjava15/sophia-linear_v2:latest}
    ports:
      - target: 8000
        published: 9015
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: linear_v2
      LOG_LEVEL: INFO
    secrets:
      - linear_api_key

  # GitHub V2 - Repository management
  github_v2:
    <<: *v2-defaults
    image: ${GITHUB_V2_IMAGE:-scoobyjava15/sophia-github_v2:latest}
    ports:
      - target: 8000
        published: 9016
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: github_v2
      LOG_LEVEL: INFO
    secrets:
      - github_token

  # Codacy V2 - Code quality analysis
  codacy_v2:
    <<: *v2-defaults
    image: ${CODACY_V2_IMAGE:-scoobyjava15/sophia-codacy_v2:latest}
    ports:
      - target: 8000
        published: 9017
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: codacy_v2
      LOG_LEVEL: INFO
    secrets:
      - codacy_api_token

  # Asana V2 - Task management
  asana_v2:
    <<: *v2-defaults
    image: ${ASANA_V2_IMAGE:-scoobyjava15/sophia-asana_v2:latest}
    ports:
      - target: 8000
        published: 9018
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: asana_v2
      LOG_LEVEL: INFO
    secrets:
      - asana_access_token

  # Perplexity V2 - AI search
  perplexity_v2:
    <<: *v2-defaults
    image: ${PERPLEXITY_V2_IMAGE:-scoobyjava15/sophia-perplexity_v2:latest}
    ports:
      - target: 8000
        published: 9019
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: perplexity_v2
      LOG_LEVEL: INFO
    secrets:
      - perplexity_api_key

  # Supporting Services
  redis:
    image: redis:7-alpine
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - redis_data:/data
    networks:
      - mcp-net
    command: redis-server --appendonly yes

  # MCP Gateway - Routes requests to v2 servers
  mcp_gateway:
    image: ${MCP_GATEWAY_IMAGE:-scoobyjava15/sophia-mcp-gateway:latest}
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mcp.rule=Host(`mcp.sophia-intel.ai`)"
        - "traefik.http.services.mcp.loadbalancer.server.port=8080"
    ports:
      - target: 8080
        published: 8080
        mode: ingress
    environment:
      ENVIRONMENT: prod
      SERVICE_NAME: mcp_gateway
      LOG_LEVEL: INFO
    configs:
      - source: mcp_servers_config
        target: /app/mcp_servers.json
    networks:
      - mcp-net
      - monitoring
    depends_on:
      - ai_memory_v2
      - gong_v2
      - snowflake_v2
      - slack_v2
      - notion_v2

networks:
  mcp-net:
    driver: overlay
    driver_opts:
      encrypted: "true"
    attachable: true
  monitoring:
    external: true

volumes:
  redis_data:
    driver: local

configs:
  mcp_servers_config:
    file: ./mcp-gateway/mcp_servers_v2.json

secrets:
  snowflake_creds:
    external: true
    name: sophia_snowflake_creds
  openai_key:
    external: true
    name: sophia_openai_key
  gong_api_key:
    external: true
    name: sophia_gong_api_key
  slack_token:
    external: true
    name: sophia_slack_token
  notion_api_key:
    external: true
    name: sophia_notion_api_key
  linear_api_key:
    external: true
    name: sophia_linear_api_key
  github_token:
    external: true
    name: sophia_github_token
  codacy_api_token:
    external: true
    name: sophia_codacy_api_token
  asana_access_token:
    external: true
    name: sophia_asana_access_token
  perplexity_api_key:
    external: true
    name: sophia_perplexity_api_key 