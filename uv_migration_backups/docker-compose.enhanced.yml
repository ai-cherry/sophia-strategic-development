services:
  # Main Sophia AI Backend (Production Ready)
  sophia-backend:
    build:
      context: .
      dockerfile: Dockerfile.containerized
    ports:
      - "8000:8000"
    environment:
      - SOPHIA_HOST=0.0.0.0
      - SOPHIA_PORT=8000
      - SOPHIA_RELOAD=false
      - PULUMI_ORG=scoobyjava-org
      - MCP_GATEWAY_URL=http://mcp-gateway:8090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - sophia-network

  # MCP Gateway - Central Orchestrator
  mcp-gateway:
    build:
      context: ./mcp-gateway
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - MCP_SERVERS_CONFIG=/app/mcp_servers.json
      - HOST=0.0.0.0
      - PORT=8090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network

  # Specialized MCP Servers
  sophia-ai-intelligence:
    build:
      context: ./mcp-servers/sophia_ai_intelligence
      dockerfile: Dockerfile
    container_name: sophia-ai-intelligence-mcp
    ports:
      - "8091:8091"
    environment:
      - PYTHONPATH=/app
      - MCP_SERVER_TYPE=ai-intelligence
      - MCP_SERVER_PORT=8091
      - PULUMI_ORG=scoobyjava-org
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 800M

  sophia-data-intelligence:
    build:
      context: ./mcp-servers/sophia_data_intelligence
      dockerfile: Dockerfile
    container_name: sophia-data-intelligence-mcp
    ports:
      - "8092:8092"
    environment:
      - PYTHONPATH=/app
      - MCP_SERVER_TYPE=data-intelligence
      - MCP_SERVER_PORT=8092
      - PULUMI_ORG=scoobyjava-org
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  sophia-infrastructure:
    build:
      context: ./mcp-servers/sophia_infrastructure
      dockerfile: Dockerfile
    container_name: sophia-infrastructure-mcp
    ports:
      - "8093:8093"
    environment:
      - PYTHONPATH=/app
      - MCP_SERVER_TYPE=infrastructure
      - MCP_SERVER_PORT=8093
      - PULUMI_ORG=scoobyjava-org
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  sophia-business-intelligence:
    build:
      context: ./mcp-servers/sophia_business_intelligence
      dockerfile: Dockerfile
    container_name: sophia-business-intelligence-mcp
    ports:
      - "8094:8094"
    environment:
      - PYTHONPATH=/app
      - MCP_SERVER_TYPE=business-intelligence
      - MCP_SERVER_PORT=8094
      - PULUMI_ORG=scoobyjava-org
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8094/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sophia-network

  # Load Balancer for Horizontal Scaling
  nginx-lb:
    image: nginx:alpine
    container_name: sophia-load-balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - sophia-backend
    restart: unless-stopped
    networks:
      - sophia-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: sophia-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - sophia-network

  grafana:
    image: grafana/grafana:latest
    container_name: sophia-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=sophia2025
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - sophia-network

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: sophia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass sophia2025
    restart: unless-stopped
    networks:
      - sophia-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # PostgreSQL for Persistent Data
  postgres:
    image: postgres:15-alpine
    container_name: sophia-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sophia_ai
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=sophia2025
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - sophia-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # Log Aggregation
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: sophia-fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./infrastructure/monitoring/fluentd.conf:/fluentd/etc/fluent.conf
      - fluentd_data:/fluentd/log
    restart: unless-stopped
    networks:
      - sophia-network

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
  postgres_data:
  fluentd_data:

networks:
  sophia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 